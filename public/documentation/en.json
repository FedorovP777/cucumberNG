[{"directive":"zone","defaultValue":"—","syntax":"zone name [size];","context":"upstream","description":"<p>\nDefines the <code><i>name</i></code> and <code><i>size</i></code> of the shared\nmemory zone that keeps the group’s configuration and run-time state that are\nshared between worker processes.\nSeveral groups may share the same zone.\nIn this case, it is enough to specify the zone size only once.\n</p><p>\nAdditionally,\nas part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>,\nsuch groups allow changing the group membership\nor modifying the settings of a particular server\nwithout the need of restarting nginx.\nThe configuration is accessible via a special location\nhandled by\n<a href=\"../http/ngx_http_upstream_conf_module.html#upstream_conf\">upstream_conf</a>.\n</p>"},{"directive":"zone","defaultValue":"—","syntax":"zone name [size];","context":"upstream","description":"<p>This directive appeared in version 1.9.0.\n            </p></div><p>\nDefines the <code><i>name</i></code> and <code><i>size</i></code> of the shared\nmemory zone that keeps the group’s configuration and run-time state that are\nshared between worker processes.\nSeveral groups may share the same zone.\nIn this case, it is enough to specify the <code><i>size</i></code> only once.\n</p><p>\nAdditionally,\nas part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>,\nsuch groups allow changing the group membership\nor modifying the settings of a particular server\nwithout the need of restarting nginx.\nThe configuration is accessible via a special location\nhandled by\n<a href=\"ngx_http_upstream_conf_module.html#upstream_conf\">upstream_conf</a>.\n</p>"},{"directive":"xslt_types","defaultValue":"","syntax":"","context":"","description":null},{"directive":"xslt_stylesheet","defaultValue":"—","syntax":"xslt_stylesheet     stylesheet    [parameter=value ...];","context":"location","description":"<p>\nDefines the XSLT stylesheet and its optional parameters.\nA stylesheet is compiled at the configuration stage.\n</p><p>\nParameters can either be specified separately, or grouped in a\nsingle line using the “<code>:</code>” delimiter.\nIf a parameter includes the “<code>:</code>” character,\nit should be escaped as “<code>%3A</code>”.\nAlso, <code>libxslt</code> requires to enclose parameters\nthat contain non-alphanumeric characters into single or double quotes,\nfor example:\n</p> <blockquote class=\"example\"><pre>\nparam1='http%3A//www.example.com':param2=value2\n</pre></blockquote><p> \n</p><p>\nThe parameters description can contain variables, for example,\nthe whole line of parameters can be taken from a single variable:\n</p> <blockquote class=\"example\"><pre>\nlocation / {\n    xslt_stylesheet /site/xslt/one.xslt\n                    $arg_xslt_params\n                    param1='$value1':param2=value2\n                    param3=value3;\n}\n</pre></blockquote><p> \n</p><p>\nIt is possible to specify several stylesheets.\nThey will be applied sequentially in the specified order.\n</p>"},{"directive":"xslt_string_param","defaultValue":"—","syntax":"xslt_string_param parameter value;","context":"http, server, location","description":"<p>This directive appeared in version 1.1.18.\n            </p></div><p>\nDefines the string parameters for XSLT stylesheets.\nXPath expressions in the <code><i>value</i></code> are not interpreted.\nThe <code><i>value</i></code> can contain variables.\n</p><p>\nThere could be several <code>xslt_string_param</code> directives.\nThese directives are inherited from the previous level if and\nonly if there are no\n<a href=\"#xslt_param\">xslt_param</a> and <code>xslt_string_param</code>\ndirectives defined on the current level.\n</p>"},{"directive":"xslt_param","defaultValue":"—","syntax":"xslt_param parameter value;","context":"http, server, location","description":"<p>This directive appeared in version 1.1.18.\n            </p></div><p>\nDefines the parameters for XSLT stylesheets.\nThe <code><i>value</i></code> is treated as an XPath expression.\nThe <code><i>value</i></code> can contain variables.\nTo pass a string value to a stylesheet,\nthe <a href=\"#xslt_string_param\">xslt_string_param</a> directive can be used.\n</p><p>\nThere could be several <code>xslt_param</code> directives.\nThese directives are inherited from the previous level if and\nonly if there are no\n<code>xslt_param</code> and <a href=\"#xslt_string_param\">xslt_string_param</a>\ndirectives defined on the current level.\n</p>"},{"directive":"xslt_last_modified","defaultValue":"xslt_last_modified off;","syntax":"xslt_last_modified on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.5.1.\n            </p></div><p>\nAllows preserving the “Last-Modified” header field\nfrom the original response during XSLT transformations\nto facilitate response caching.\n</p><p>\nBy default, the header field is removed as contents of the response\nare modified during transformations and may contain dynamically generated\nelements or parts that are changed independently of the original response.\n</p>"},{"directive":"xml_entities","defaultValue":"—","syntax":"xml_entities path;","context":"http, server, location","description":"<p>\nSpecifies the DTD file that declares character entities.\nThis file is compiled at the configuration stage.\nFor technical reasons, the module is unable to use the\nexternal subset declared in the processed XML, so it is\nignored and a specially defined file is used instead.\nThis file should not describe the XML structure.\nIt is enough to declare just the required character entities, for example:\n</p> <blockquote class=\"example\"><pre>\n&lt;!ENTITY nbsp \"&amp;#xa0;\"&gt;\n</pre></blockquote><p> \n</p>"},{"directive":"xclient","defaultValue":"","syntax":"","context":"","description":null},{"directive":"working_directory","defaultValue":"","syntax":"","context":"","description":null},{"directive":"worker_shutdown_timeout","defaultValue":"—","syntax":"worker_shutdown_timeout time;","context":"main","description":"<p>This directive appeared in version 1.11.11.\n            </p></div><p>\nConfigures a timeout for a graceful shutdown of worker processes.\nWhen the <code><i>time</i></code> expires,\nnginx will try to close all the connections currently open\nto facilitate shutdown.\n</p>"},{"directive":"worker_rlimit_nofile","defaultValue":"—","syntax":"worker_rlimit_nofile number;","context":"main","description":"<p>\nChanges the limit on the maximum number of open files\n(<code>RLIMIT_NOFILE</code>) for worker processes.\nUsed to increase the limit without restarting the main process.\n</p>"},{"directive":"worker_rlimit_core","defaultValue":"—","syntax":"worker_rlimit_core size;","context":"main","description":"<p>\nChanges the limit on the largest size of a core file\n(<code>RLIMIT_CORE</code>) for worker processes.\nUsed to increase the limit without restarting the main process.\n</p>"},{"directive":"worker_processes","defaultValue":"worker_processes 1;","syntax":"worker_processes number | auto;","context":"main","description":"<p>\nDefines the number of worker processes.\n</p><p>\nThe optimal value depends on many factors including (but not\nlimited to) the number of CPU cores, the number of hard disk\ndrives that store data, and load pattern.\nWhen one is in doubt, setting it to the number of available CPU cores\nwould be a good start (the value “<code>auto</code>”\nwill try to autodetect it).\n</p> <blockquote class=\"note\">\nThe <code>auto</code> parameter is supported starting from\nversions 1.3.8 and 1.2.5.\n</blockquote><p> \n</p>"},{"directive":"worker_priority","defaultValue":"worker_priority 0;","syntax":"worker_priority number;","context":"main","description":"<p>\nDefines the scheduling priority for worker processes like it is\ndone by the <code>nice</code> command: a negative\n<code><i>number</i></code>\nmeans higher priority.\nAllowed range normally varies from -20 to 20.\n</p><p>\nExample:\n</p> <blockquote class=\"example\"><pre>\nworker_priority -10;\n</pre></blockquote><p> \n</p>"},{"directive":"worker_cpu_affinity","defaultValue":"—","syntax":"worker_cpu_affinity cpumask ...;worker_cpu_affinity auto [cpumask];","context":"main","description":"<p>\nBinds worker processes to the sets of CPUs.\nEach CPU set is represented by a bitmask of allowed CPUs.\nThere should be a separate set defined for each of the worker processes.\nBy default, worker processes are not bound to any specific CPUs.\n</p><p>\nFor example,\n</p> <blockquote class=\"example\"><pre>\nworker_processes    4;\nworker_cpu_affinity 0001 0010 0100 1000;\n</pre></blockquote><p> \nbinds each worker process to a separate CPU, while\n</p> <blockquote class=\"example\"><pre>\nworker_processes    2;\nworker_cpu_affinity 0101 1010;\n</pre></blockquote><p> \nbinds the first worker process to CPU0/CPU2,\nand the second worker process to CPU1/CPU3.\nThe second example is suitable for hyper-threading.\n</p><p>\nThe special value <code>auto</code> (1.9.10) allows\nbinding worker processes automatically to available CPUs:\n</p> <blockquote class=\"example\"><pre>\nworker_processes auto;\nworker_cpu_affinity auto;\n</pre></blockquote><p> \nThe optional mask parameter can be used to limit the CPUs\navailable for automatic binding:\n</p> <blockquote class=\"example\"><pre>\nworker_cpu_affinity auto 01010101;\n</pre></blockquote><p> \n</p><p>\n</p> <blockquote class=\"note\">\nThe directive is only available on FreeBSD and Linux.\n</blockquote><p> \n</p>"},{"directive":"worker_connections","defaultValue":"worker_connections 512;","syntax":"worker_connections number;","context":"events","description":"<p>\nSets the maximum number of simultaneous connections that\ncan be opened by a worker process.\n</p><p>\nIt should be kept in mind that this number includes all connections\n(e.g. connections with proxied servers, among others),\nnot only connections with clients.\nAnother consideration is that the actual number of simultaneous\nconnections cannot exceed the current limit on\nthe maximum number of open files, which can be changed by\n<a href=\"#worker_rlimit_nofile\">worker_rlimit_nofile</a>.\n</p>"},{"directive":"worker_aio_requests","defaultValue":"worker_aio_requests 32;","syntax":"worker_aio_requests number;","context":"events","description":"<p>\n                    This directive appeared in versions 1.1.4 and 1.0.7.\n                    \n                        </p>\n                    </div><p>\nWhen using <a href=\"http/ngx_http_core_module.html#aio\">aio</a>\nwith the <a href=\"../docs/events.html#epoll\">epoll</a>\nconnection processing method, sets the maximum <code><i>number</i></code> of\noutstanding asynchronous I/O operations\nfor a single worker process.\n</p>"},{"directive":"variables_hash_max_size","defaultValue":"variables_hash_max_size 1024;","syntax":"variables_hash_max_size size;","context":"stream","description":"<p>This directive appeared in version 1.11.2.\n            </p></div><p>\nSets the maximum <code><i>size</i></code> of the variables hash table.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p>"},{"directive":"variables_hash_max_size","defaultValue":"variables_hash_max_size 1024;","syntax":"variables_hash_max_size size;","context":"http","description":"<p>\nSets the maximum <code><i>size</i></code> of the variables hash table.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p> <blockquote class=\"note\">\nPrior to version 1.5.13, the default value was 512.\n</blockquote><p> \n</p>"},{"directive":"variables_hash_bucket_size","defaultValue":"variables_hash_bucket_size 64;","syntax":"variables_hash_bucket_size size;","context":"stream","description":"<p>This directive appeared in version 1.11.2.\n            </p></div><p>\nSets the bucket size for the variables hash table.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p>"},{"directive":"variables_hash_bucket_size","defaultValue":"variables_hash_bucket_size 64;","syntax":"variables_hash_bucket_size size;","context":"http","description":"<p>\nSets the bucket size for the variables hash table.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p>"},{"directive":"valid_referers","defaultValue":"—","syntax":"valid_referers     none |    blocked |    server_names |    string    ...;","context":"server, location","description":"<p>\nSpecifies the “Referer” request header field values\nthat will cause the embedded <code>$invalid_referer</code> variable to\nbe set to an empty string.\nOtherwise, the variable will be set to “<code>1</code>”.\nSearch for a match is case-insensitive.\n</p><p>\nParameters can be as follows:\n</p> <dl class=\"compact\">\n\n<dt><code>none</code></dt>\n<dd>\nthe “Referer” field is missing in the request header;\n</dd>\n\n<dt><code>blocked</code></dt>\n<dd>\nthe “Referer” field is present in the request header,\nbut its value has been deleted by a firewall or proxy server;\nsuch values are strings that do not start with\n“<code>http://</code>” or “<code>https://</code>”;\n</dd>\n\n<dt><code>server_names</code></dt>\n<dd>\nthe “Referer” request header field contains\none of the server names;\n</dd>\n\n<dt>arbitrary string</dt>\n<dd>\ndefines a server name and an optional URI prefix.\nA server name can have an “<code>*</code>” at the beginning or end.\nDuring the checking, the server’s port in the “Referer” field\nis ignored;\n</dd>\n\n<dt>regular expression</dt>\n<dd>\nthe first symbol should be a “<code>~</code>”.\nIt should be noted that an expression will be matched against\nthe text starting after the “<code>http://</code>”\nor “<code>https://</code>”.\n</dd>\n\n</dl><p> \n</p><p>\nExample:\n</p> <blockquote class=\"example\"><pre>\nvalid_referers none blocked server_names\n               *.example.com example.* www.example.org/galleries/\n               ~\\.google\\.;\n</pre></blockquote><p> \n</p>"},{"directive":"uwsgi_temp_path","defaultValue":"","syntax":"","context":"","description":null},{"directive":"uwsgi_temp_file_write_size","defaultValue":"uwsgi_temp_file_write_size 8k|16k;","syntax":"uwsgi_temp_file_write_size size;","context":"http, server, location","description":"<p>\nLimits the <code><i>size</i></code> of data written to a temporary file\nat a time, when buffering of responses from the uwsgi server\nto temporary files is enabled.\nBy default, <code><i>size</i></code> is limited by two buffers set by the\n<a href=\"#uwsgi_buffer_size\">uwsgi_buffer_size</a> and <a href=\"#uwsgi_buffers\">uwsgi_buffers</a> directives.\nThe maximum size of a temporary file is set by the\n<a href=\"#uwsgi_max_temp_file_size\">uwsgi_max_temp_file_size</a> directive.\n</p>"},{"directive":"uwsgi_store_access","defaultValue":"uwsgi_store_access user:rw;","syntax":"uwsgi_store_access users:permissions ...;","context":"http, server, location","description":"<p>\nSets access permissions for newly created files and directories, e.g.:\n</p> <blockquote class=\"example\"><pre>\nuwsgi_store_access user:rw group:rw all:r;\n</pre></blockquote><p> \n</p><p>\nIf any <code>group</code> or <code>all</code> access permissions\nare specified then <code>user</code> permissions may be omitted:\n</p> <blockquote class=\"example\"><pre>\nuwsgi_store_access group:rw all:r;\n</pre></blockquote><p> \n</p>"},{"directive":"uwsgi_store","defaultValue":"uwsgi_store off;","syntax":"uwsgi_store     on |    off |    string;","context":"http, server, location","description":"<p>\nEnables saving of files to a disk.\nThe <code>on</code> parameter saves files with paths\ncorresponding to the directives\n<a href=\"ngx_http_core_module.html#alias\">alias</a> or\n<a href=\"ngx_http_core_module.html#root\">root</a>.\nThe <code>off</code> parameter disables saving of files.\nIn addition, the file name can be set explicitly using the\n<code><i>string</i></code> with variables:\n</p> <blockquote class=\"example\"><pre>\nuwsgi_store /data/www$original_uri;\n</pre></blockquote><p> \n</p><p>\nThe modification time of files is set according to the received\n“Last-Modified” response header field.\nThe response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the persistent store\ncan be put on different file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both saved files and a\ndirectory holding temporary files, set by the <a href=\"#uwsgi_temp_path\">uwsgi_temp_path</a>\ndirective, are put on the same file system.\n</p><p>\nThis directive can be used to create local copies of static unchangeable\nfiles, e.g.:\n</p> <blockquote class=\"example\"><pre>\nlocation /images/ {\n    root               /data/www;\n    error_page         404 = /fetch$uri;\n}\n\nlocation /fetch/ {\n    internal;\n\n    uwsgi_pass         backend:9000;\n    ...\n\n    uwsgi_store        on;\n    uwsgi_store_access user:rw group:rw all:r;\n    uwsgi_temp_path    /data/temp;\n\n    alias              /data/www/;\n}\n</pre></blockquote><p> \n</p>"},{"directive":"uwsgi_ssl_verify_depth","defaultValue":"uwsgi_ssl_verify_depth 1;","syntax":"uwsgi_ssl_verify_depth number;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.0.\n            </p></div><p>\nSets the verification depth in the secured uwsgi server certificates chain.\n</p>"},{"directive":"uwsgi_ssl_verify","defaultValue":"uwsgi_ssl_verify off;","syntax":"uwsgi_ssl_verify on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.0.\n            </p></div><p>\nEnables or disables verification of the secured uwsgi server certificate.\n</p>"},{"directive":"uwsgi_ssl_trusted_certificate","defaultValue":"—","syntax":"uwsgi_ssl_trusted_certificate file;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.0.\n            </p></div><p>\nSpecifies a <code><i>file</i></code> with trusted CA certificates in the PEM format\nused to <a href=\"#uwsgi_ssl_verify\">verify</a>\nthe certificate of the secured uwsgi server.\n</p>"},{"directive":"uwsgi_ssl_session_reuse","defaultValue":"uwsgi_ssl_session_reuse on;","syntax":"uwsgi_ssl_session_reuse on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.5.8.\n            </p></div><p>\nDetermines whether SSL sessions can be reused when working with\na secured uwsgi server.\nIf the errors\n“<code>SSL3_GET_FINISHED:digest check failed</code>”\nappear in the logs, try disabling session reuse.\n</p>"},{"directive":"uwsgi_ssl_server_name","defaultValue":"uwsgi_ssl_server_name off;","syntax":"uwsgi_ssl_server_name on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.0.\n            </p></div><p>\nEnables or disables passing of the server name through\n<a href=\"http://en.wikipedia.org/wiki/Server_Name_Indication\">TLS\nServer Name Indication extension</a> (SNI, RFC 6066)\nwhen establishing a connection with the secured uwsgi server.\n</p>"},{"directive":"uwsgi_ssl_protocols","defaultValue":"uwsgi_ssl_protocols TLSv1 TLSv1.1 TLSv1.2;","syntax":"uwsgi_ssl_protocols     [SSLv2]    [SSLv3]    [TLSv1]    [TLSv1.1]    [TLSv1.2]    [TLSv1.3];","context":"http, server, location","description":"<p>This directive appeared in version 1.5.8.\n            </p></div><p>\nEnables the specified protocols for requests to a secured uwsgi server.\n</p>"},{"directive":"uwsgi_ssl_password_file","defaultValue":"—","syntax":"uwsgi_ssl_password_file file;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.8.\n            </p></div><p>\nSpecifies a <code><i>file</i></code> with passphrases for\n<a href=\"#uwsgi_ssl_certificate_key\">secret keys</a>\nwhere each passphrase is specified on a separate line.\nPassphrases are tried in turn when loading the key.\n</p>"},{"directive":"uwsgi_ssl_name","defaultValue":"uwsgi_ssl_name host from uwsgi_pass;","syntax":"uwsgi_ssl_name name;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.0.\n            </p></div><p>\nAllows overriding the server name used to\n<a href=\"#uwsgi_ssl_verify\">verify</a>\nthe certificate of the secured uwsgi server and to be\n<a href=\"#uwsgi_ssl_server_name\">passed through SNI</a>\nwhen establishing a connection with the secured uwsgi server.\n</p><p>\nBy default, the host part from <a href=\"#uwsgi_pass\">uwsgi_pass</a> is used.\n</p>"},{"directive":"uwsgi_ssl_crl","defaultValue":"—","syntax":"uwsgi_ssl_crl file;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.0.\n            </p></div><p>\nSpecifies a <code><i>file</i></code> with revoked certificates (CRL)\nin the PEM format used to <a href=\"#uwsgi_ssl_verify\">verify</a>\nthe certificate of the secured uwsgi server.\n</p>"},{"directive":"uwsgi_ssl_ciphers","defaultValue":"uwsgi_ssl_ciphers DEFAULT;","syntax":"uwsgi_ssl_ciphers ciphers;","context":"http, server, location","description":"<p>This directive appeared in version 1.5.8.\n            </p></div><p>\nSpecifies the enabled ciphers for requests to a secured uwsgi server.\nThe ciphers are specified in the format understood by the OpenSSL library.\n</p><p>\nThe full list can be viewed using the\n“<code>openssl ciphers</code>” command.\n</p>"},{"directive":"uwsgi_ssl_certificate_key","defaultValue":"—","syntax":"uwsgi_ssl_certificate_key file;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.8.\n            </p></div><p>\nSpecifies a <code><i>file</i></code> with the secret key in the PEM format\nused for authentication to a secured uwsgi server.\n</p><p>\nThe value\n<code>engine</code>:<code><i>name</i></code>:<code><i>id</i></code>\ncan be specified instead of the <code><i>file</i></code> (1.7.9),\nwhich loads a secret key with a specified <code><i>id</i></code>\nfrom the OpenSSL engine <code><i>name</i></code>.\n</p>"},{"directive":"uwsgi_ssl_certificate","defaultValue":"—","syntax":"uwsgi_ssl_certificate file;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.8.\n            </p></div><p>\nSpecifies a <code><i>file</i></code> with the certificate in the PEM format\nused for authentication to a secured uwsgi server.\n</p>"},{"directive":"uwsgi_send_timeout","defaultValue":"uwsgi_send_timeout 60s;","syntax":"uwsgi_send_timeout time;","context":"http, server, location","description":"<p>\nSets a timeout for transmitting a request to the uwsgi server.\nThe timeout is set only between two successive write operations,\nnot for the transmission of the whole request.\nIf the uwsgi server does not receive anything within this time,\nthe connection is closed.\n</p>"},{"directive":"uwsgi_request_buffering","defaultValue":"uwsgi_request_buffering on;","syntax":"uwsgi_request_buffering on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.11.\n            </p></div><p>\nEnables or disables buffering of a client request body.\n</p><p>\nWhen buffering is enabled, the entire request body is\n<a href=\"ngx_http_core_module.html#client_body_buffer_size\">read</a>\nfrom the client before sending the request to a uwsgi server.\n</p><p>\nWhen buffering is disabled, the request body is sent to the uwsgi server\nimmediately as it is received.\nIn this case, the request cannot be passed to the\n<a href=\"#uwsgi_next_upstream\">next server</a>\nif nginx already started sending the request body.\n</p><p>\nWhen HTTP/1.1 chunked transfer encoding is used\nto send the original request body,\nthe request body will be buffered regardless of the directive value.\n</p>"},{"directive":"uwsgi_read_timeout","defaultValue":"uwsgi_read_timeout 60s;","syntax":"uwsgi_read_timeout time;","context":"http, server, location","description":"<p>\nDefines a timeout for reading a response from the uwsgi server.\nThe timeout is set only between two successive read operations,\nnot for the transmission of the whole response.\nIf the uwsgi server does not transmit anything within this time,\nthe connection is closed.\n</p>"},{"directive":"uwsgi_pass_request_headers","defaultValue":"uwsgi_pass_request_headers on;","syntax":"uwsgi_pass_request_headers on | off;","context":"http, server, location","description":"<p>\nIndicates whether the header fields of the original request are passed\nto the uwsgi server.\nSee also the <a href=\"#uwsgi_pass_request_body\">uwsgi_pass_request_body</a> directive.\n</p>"},{"directive":"uwsgi_pass_request_body","defaultValue":"uwsgi_pass_request_body on;","syntax":"uwsgi_pass_request_body on | off;","context":"http, server, location","description":"<p>\nIndicates whether the original request body is passed\nto the uwsgi server.\nSee also the <a href=\"#uwsgi_pass_request_headers\">uwsgi_pass_request_headers</a> directive.\n</p>"},{"directive":"uwsgi_pass_header","defaultValue":"—","syntax":"uwsgi_pass_header field;","context":"http, server, location","description":"<p>\nPermits passing <a href=\"#uwsgi_hide_header\">otherwise disabled</a> header\nfields from a uwsgi server to a client.\n</p>"},{"directive":"uwsgi_pass","defaultValue":"—","syntax":"uwsgi_pass [protocol://]address;","context":"location, if in location","description":"<p>\nSets the protocol and address of a uwsgi server.\nAs a <code><i>protocol</i></code>,\n“<code>uwsgi</code>” or “<code>suwsgi</code>”\n(secured uwsgi, uwsgi over SSL) can be specified.\nThe address can be specified as a domain name or IP address,\nand a port:\n</p> <blockquote class=\"example\"><pre>\nuwsgi_pass localhost:9000;\nuwsgi_pass uwsgi://localhost:9000;\nuwsgi_pass suwsgi://[2001:db8::1]:9090;\n</pre></blockquote><p> \nor as a UNIX-domain socket path:\n</p> <blockquote class=\"example\"><pre>\nuwsgi_pass unix:/tmp/uwsgi.socket;\n</pre></blockquote><p> \n</p><p>\nIf a domain name resolves to several addresses, all of them will be\nused in a round-robin fashion.\nIn addition, an address can be specified as a\n<a href=\"ngx_http_upstream_module.html\">server group</a>.\n</p><p>\nParameter value can contain variables.\nIn this case, if an address is specified as a domain name,\nthe name is searched among the described\n<a href=\"ngx_http_upstream_module.html\">server groups</a>,\nand, if not found, is determined using a\n<a href=\"ngx_http_core_module.html#resolver\">resolver</a>.\n</p><p>\n</p> <blockquote class=\"note\">\nSecured uwsgi protocol is supported since version 1.5.8.\n</blockquote><p> \n</p>"},{"directive":"uwsgi_param","defaultValue":"—","syntax":"uwsgi_param     parameter value    [if_not_empty];","context":"http, server, location","description":"<p>\nSets a <code><i>parameter</i></code> that should be passed to the uwsgi server.\nThe <code><i>value</i></code> can contain text, variables, and their combination.\nThese directives are inherited from the previous level if and\nonly if there are no\n<code>uwsgi_param</code>\ndirectives defined on the current level.\n</p><p>\nStandard\n<a href=\"https://tools.ietf.org/html/rfc3875#section-4.1\">CGI\nenvironment variables</a>\nshould be provided as uwsgi headers, see the <code>uwsgi_params</code> file\nprovided in the distribution:\n</p> <blockquote class=\"example\"><pre>\nlocation / {\n    include uwsgi_params;\n    ...\n}\n</pre></blockquote><p> \n</p><p>\nIf the directive is specified with <code>if_not_empty</code> (1.1.11) then\nsuch a parameter will not be passed to the server until its value is not empty:\n</p> <blockquote class=\"example\"><pre>\nuwsgi_param HTTPS $https if_not_empty;\n</pre></blockquote><p> \n</p>"},{"directive":"uwsgi_no_cache","defaultValue":"—","syntax":"uwsgi_no_cache string ...;","context":"http, server, location","description":"<p>\nDefines conditions under which the response will not be saved to a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to “0” then the response will not be saved:\n</p> <blockquote class=\"example\"><pre>\nuwsgi_no_cache $cookie_nocache $arg_nocache$arg_comment;\nuwsgi_no_cache $http_pragma    $http_authorization;\n</pre></blockquote><p> \nCan be used along with the <a href=\"#uwsgi_cache_bypass\">uwsgi_cache_bypass</a> directive.\n</p>"},{"directive":"uwsgi_next_upstream_tries","defaultValue":"uwsgi_next_upstream_tries 0;","syntax":"uwsgi_next_upstream_tries number;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.5.\n            </p></div><p>\nLimits the number of possible tries for passing a request to the\n<a href=\"#uwsgi_next_upstream\">next server</a>.\nThe <code>0</code> value turns off this limitation.\n</p>"},{"directive":"uwsgi_next_upstream_timeout","defaultValue":"uwsgi_next_upstream_timeout 0;","syntax":"uwsgi_next_upstream_timeout time;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.5.\n            </p></div><p>\nLimits the time during which a request can be passed to the\n<a href=\"#uwsgi_next_upstream\">next server</a>.\nThe <code>0</code> value turns off this limitation.\n</p>"},{"directive":"uwsgi_next_upstream","defaultValue":"uwsgi_next_upstream error timeout;","syntax":"uwsgi_next_upstream     error |    timeout |    invalid_header |    http_500 |    http_503 |    http_403 |    http_404 |    http_429 |    non_idempotent |    off    ...;","context":"http, server, location","description":"<p>\nSpecifies in which cases a request should be passed to the next server:\n</p> <dl class=\"compact\">\n\n<dt><code>error</code></dt>\n<dd>an error occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;</dd>\n\n<dt><code>timeout</code></dt>\n<dd>a timeout has occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;</dd>\n\n<dt><code>invalid_header</code></dt>\n<dd>a server returned an empty or invalid response;</dd>\n\n<dt><code>http_500</code></dt>\n<dd>a server returned a response with the code 500;</dd>\n\n<dt><code>http_503</code></dt>\n<dd>a server returned a response with the code 503;</dd>\n\n<dt><code>http_403</code></dt>\n<dd>a server returned a response with the code 403;</dd>\n\n<dt><code>http_404</code></dt>\n<dd>a server returned a response with the code 404;</dd>\n\n<dt><code>http_429</code></dt>\n<dd>a server returned a response with the code 429 (1.11.13);</dd>\n\n<dt id=\"non_idempotent\"><code>non_idempotent</code></dt>\n<dd>normally, requests with a\n<a href=\"https://tools.ietf.org/html/rfc7231#section-4.2.2\">non-idempotent</a>\nmethod\n(<code>POST</code>, <code>LOCK</code>, <code>PATCH</code>)\nare not passed to the next server\nif a request has been sent to an upstream server (1.9.13);\nenabling this option explicitly allows retrying such requests;\n</dd>\n\n<dt><code>off</code></dt>\n<dd>disables passing a request to the next server.</dd>\n\n</dl><p> \n</p><p>\nOne should bear in mind that passing a request to the next server is\nonly possible if nothing has been sent to a client yet.\nThat is, if an error or timeout occurs in the middle of the\ntransferring of a response, fixing this is impossible.\n</p><p>\nThe directive also defines what is considered an\n<a href=\"ngx_http_upstream_module.html#max_fails\">unsuccessful\nattempt</a> of communication with a server.\nThe cases of <code>error</code>, <code>timeout</code> and\n<code>invalid_header</code> are always considered unsuccessful attempts,\neven if they are not specified in the directive.\nThe cases of <code>http_500</code>, <code>http_503</code>,\nand <code>http_429</code> are\nconsidered unsuccessful attempts only if they are specified in the directive.\nThe cases of <code>http_403</code> and <code>http_404</code>\nare never considered unsuccessful attempts.\n</p><p>\nPassing a request to the next server can be limited by\n<a href=\"#uwsgi_next_upstream_tries\">the number of tries</a>\nand by <a href=\"#uwsgi_next_upstream_timeout\">time</a>.\n</p>"},{"directive":"uwsgi_modifier2","defaultValue":"uwsgi_modifier2 0;","syntax":"uwsgi_modifier2 number;","context":"http, server, location","description":"<p>\nSets the value of the <code>modifier2</code> field in the\n<a href=\"http://uwsgi-docs.readthedocs.org/en/latest/Protocol.html#uwsgi-packet-header\">uwsgi\npacket header</a>.\n</p>"},{"directive":"uwsgi_modifier1","defaultValue":"uwsgi_modifier1 0;","syntax":"uwsgi_modifier1 number;","context":"http, server, location","description":"<p>\nSets the value of the <code>modifier1</code> field in the\n<a href=\"http://uwsgi-docs.readthedocs.org/en/latest/Protocol.html#uwsgi-packet-header\">uwsgi\npacket header</a>.\n</p>"},{"directive":"uwsgi_max_temp_file_size","defaultValue":"uwsgi_max_temp_file_size 1024m;","syntax":"uwsgi_max_temp_file_size size;","context":"http, server, location","description":"<p>\nWhen <a href=\"#uwsgi_buffering\">buffering</a> of responses from the uwsgi\nserver is enabled, and the whole response does not fit into the buffers\nset by the <a href=\"#uwsgi_buffer_size\">uwsgi_buffer_size</a> and <a href=\"#uwsgi_buffers\">uwsgi_buffers</a>\ndirectives, a part of the response can be saved to a temporary file.\nThis directive sets the maximum <code><i>size</i></code> of the temporary file.\nThe size of data written to the temporary file at a time is set\nby the <a href=\"#uwsgi_temp_file_write_size\">uwsgi_temp_file_write_size</a> directive.\n</p><p>\nThe zero value disables buffering of responses to temporary files.\n</p><p>\n</p> <blockquote class=\"note\">\nThis restriction does not apply to responses\nthat will be <a href=\"#uwsgi_cache\">cached</a>\nor <a href=\"#uwsgi_store\">stored</a> on disk.\n</blockquote><p> \n</p>"},{"directive":"uwsgi_limit_rate","defaultValue":"uwsgi_limit_rate 0;","syntax":"uwsgi_limit_rate rate;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.7.\n            </p></div><p>\nLimits the speed of reading the response from the uwsgi server.\nThe <code><i>rate</i></code> is specified in bytes per second.\nThe zero value disables rate limiting.\nThe limit is set per a request, and so if nginx simultaneously opens\ntwo connections to the uwsgi server,\nthe overall rate will be twice as much as the specified limit.\nThe limitation works only if\n<a href=\"#uwsgi_buffering\">buffering</a> of responses from the uwsgi\nserver is enabled.\n</p>"},{"directive":"uwsgi_intercept_errors","defaultValue":"uwsgi_intercept_errors off;","syntax":"uwsgi_intercept_errors on | off;","context":"http, server, location","description":"<p>\nDetermines whether a uwsgi server responses with codes greater than or equal\nto 300 should be passed to a client\nor be intercepted and redirected to nginx for processing\nwith the <a href=\"ngx_http_core_module.html#error_page\">error_page</a> directive.\n</p>"},{"directive":"uwsgi_ignore_headers","defaultValue":"—","syntax":"uwsgi_ignore_headers field ...;","context":"http, server, location","description":"<p>\nDisables processing of certain response header fields from the uwsgi server.\nThe following fields can be ignored: “X-Accel-Redirect”,\n“X-Accel-Expires”, “X-Accel-Limit-Rate” (1.1.6),\n“X-Accel-Buffering” (1.1.6),\n“X-Accel-Charset” (1.1.6), “Expires”,\n“Cache-Control”, “Set-Cookie” (0.8.44),\nand “Vary” (1.7.7).\n</p><p>\nIf not disabled, processing of these header fields has the following\neffect:\n</p> <ul>\n\n<li>\n“X-Accel-Expires”, “Expires”,\n“Cache-Control”, “Set-Cookie”,\nand “Vary”\nset the parameters of response <a href=\"#uwsgi_cache_valid\">caching</a>;\n</li>\n\n<li>\n“X-Accel-Redirect” performs an\n<a href=\"ngx_http_core_module.html#internal\">internal\nredirect</a> to the specified URI;\n</li>\n\n<li>\n“X-Accel-Limit-Rate” sets the\n<a href=\"ngx_http_core_module.html#limit_rate\">rate\nlimit</a> for transmission of a response to a client;\n</li>\n\n<li>\n“X-Accel-Buffering” enables or disables\n<a href=\"#uwsgi_buffering\">buffering</a> of a response;\n</li>\n\n<li>\n“X-Accel-Charset” sets the desired\n<a href=\"ngx_http_charset_module.html#charset\">charset</a>\nof a response.\n</li>\n\n</ul><p> \n</p>"},{"directive":"uwsgi_ignore_client_abort","defaultValue":"uwsgi_ignore_client_abort off;","syntax":"uwsgi_ignore_client_abort on | off;","context":"http, server, location","description":"<p>\nDetermines whether the connection with a uwsgi server should be\nclosed when a client closes the connection without waiting\nfor a response.\n</p>"},{"directive":"uwsgi_hide_header","defaultValue":"—","syntax":"uwsgi_hide_header field;","context":"http, server, location","description":"<p>\nBy default,\nnginx does not pass the header fields “Status” and\n“X-Accel-...” from the response of a uwsgi\nserver to a client.\nThe <code>uwsgi_hide_header</code> directive sets additional fields\nthat will not be passed.\nIf, on the contrary, the passing of fields needs to be permitted,\nthe <a href=\"#uwsgi_pass_header\">uwsgi_pass_header</a> directive can be used.\n</p>"},{"directive":"uwsgi_force_ranges","defaultValue":"uwsgi_force_ranges off;","syntax":"uwsgi_force_ranges on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.7.\n            </p></div><p>\nEnables byte-range support\nfor both cached and uncached responses from the uwsgi server\nregardless of the “Accept-Ranges” field in these responses.\n</p>"},{"directive":"uwsgi_connect_timeout","defaultValue":"uwsgi_connect_timeout 60s;","syntax":"uwsgi_connect_timeout time;","context":"http, server, location","description":"<p>\nDefines a timeout for establishing a connection with a uwsgi server.\nIt should be noted that this timeout cannot usually exceed 75 seconds.\n</p>"},{"directive":"uwsgi_cache_valid","defaultValue":"—","syntax":"uwsgi_cache_valid [code ...] time;","context":"http, server, location","description":"<p>\nSets caching time for different response codes.\nFor example, the following directives\n</p> <blockquote class=\"example\"><pre>\nuwsgi_cache_valid 200 302 10m;\nuwsgi_cache_valid 404      1m;\n</pre></blockquote><p> \nset 10 minutes of caching for responses with codes 200 and 302\nand 1 minute for responses with code 404.\n</p><p>\nIf only caching <code><i>time</i></code> is specified\n</p> <blockquote class=\"example\"><pre>\nuwsgi_cache_valid 5m;\n</pre></blockquote><p> \nthen only 200, 301, and 302 responses are cached.\n</p><p>\nIn addition, the <code>any</code> parameter can be specified\nto cache any responses:\n</p> <blockquote class=\"example\"><pre>\nuwsgi_cache_valid 200 302 10m;\nuwsgi_cache_valid 301      1h;\nuwsgi_cache_valid any      1m;\n</pre></blockquote><p> \n</p><p>\nParameters of caching can also be set directly\nin the response header.\nThis has higher priority than setting of caching time using the directive.\n</p> <ul>\n\n<li>\nThe “X-Accel-Expires” header field sets caching time of a\nresponse in seconds.\nThe zero value disables caching for a response.\nIf the value starts with the <code>@</code> prefix, it sets an absolute\ntime in seconds since Epoch, up to which the response may be cached.\n</li>\n\n<li>\nIf the header does not include the “X-Accel-Expires” field,\nparameters of caching may be set in the header fields\n“Expires” or “Cache-Control”.\n</li>\n\n<li>\nIf the header includes the “Set-Cookie” field, such a\nresponse will not be cached.\n</li>\n\n<li>\nIf the header includes the “Vary” field\nwith the special value “<code>*</code>”, such a\nresponse will not be cached (1.7.7).\nIf the header includes the “Vary” field\nwith another value, such a response will be cached\ntaking into account the corresponding request header fields (1.7.7).\n</li>\n\n</ul><p> \nProcessing of one or more of these response header fields can be disabled\nusing the <a href=\"#uwsgi_ignore_headers\">uwsgi_ignore_headers</a> directive.\n</p>"},{"directive":"uwsgi_cache_use_stale","defaultValue":"uwsgi_cache_use_stale off;","syntax":"uwsgi_cache_use_stale     error |    timeout |    invalid_header |    updating |    http_500 |    http_503 |    http_403 |    http_404 |    http_429 |    off    ...;","context":"http, server, location","description":"<p>\nDetermines in which cases a stale cached response can be used\nwhen an error occurs during communication with the uwsgi server.\nThe directive’s parameters match the parameters of the\n<a href=\"#uwsgi_next_upstream\">uwsgi_next_upstream</a> directive.\n</p><p>\nThe <code>error</code> parameter also permits\nusing a stale cached response if a uwsgi server to process a request\ncannot be selected.\n</p>"},{"directive":"uwsgi_cache_revalidate","defaultValue":"uwsgi_cache_revalidate off;","syntax":"uwsgi_cache_revalidate on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.5.7.\n            </p></div><p>\nEnables revalidation of expired cache items using conditional requests with\nthe “If-Modified-Since” and “If-None-Match”\nheader fields.\n</p>"},{"directive":"uwsgi_cache_purge","defaultValue":"—","syntax":"uwsgi_cache_purge string ...;","context":"http, server, location","description":"<p>This directive appeared in version 1.5.7.\n            </p></div><p>\nDefines conditions under which the request will be considered a cache\npurge request.\nIf at least one value of the string parameters is not empty and is not equal\nto “0” then the cache entry with a corresponding\n<a href=\"#uwsgi_cache_key\">cache key</a> is removed.\nThe result of successful operation is indicated by returning\nthe 204 (No Content) response.\n</p><p>\nIf the <a href=\"#uwsgi_cache_key\">cache key</a> of a purge request ends\nwith an asterisk (“<code>*</code>”), all cache entries matching the\nwildcard key will be removed from the cache.\nHowever, these entries will remain on the disk until they are deleted\nfor either <a href=\"#uwsgi_cache_path\">inactivity</a>,\nor processed by the <a href=\"#purger\">cache purger</a> (1.7.12),\nor a client attempts to access them.\n</p><p>\nExample configuration:\n</p> <blockquote class=\"example\"><pre>\nuwsgi_cache_path /data/nginx/cache keys_zone=cache_zone:10m;\n\nmap $request_method $purge_method {\n    PURGE   1;\n    default 0;\n}\n\nserver {\n    ...\n    location / {\n        uwsgi_pass        backend;\n        uwsgi_cache       cache_zone;\n        uwsgi_cache_key   $uri;\n        uwsgi_cache_purge $purge_method;\n    }\n}\n</pre></blockquote><p> \n</p> <blockquote class=\"note\">\nThis functionality is available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote><p> \n</p>"},{"directive":"uwsgi_cache_path","defaultValue":"—","syntax":"uwsgi_cache_path     path    [levels=levels]    [use_temp_path=on|off]    keys_zone=name:size    [inactive=time]    [max_size=size]    [manager_files=number]    [manager_sleep=time]    [manager_threshold=time]    [loader_files=number]    [loader_sleep=time]    [loader_threshold=time]    [purger=on|off]    [purger_files=number]    [purger_sleep=time]    [purger_threshold=time];","context":"http","description":"<p>\nSets the path and other parameters of a cache.\nCache data are stored in files.\nThe file name in a cache is a result of\napplying the MD5 function to the\n<a href=\"#uwsgi_cache_key\">cache key</a>.\nThe <code>levels</code> parameter defines hierarchy levels of a cache:\nfrom 1 to 3, each level accepts values 1 or 2.\nFor example, in the following configuration\n</p> <blockquote class=\"example\"><pre>\nuwsgi_cache_path /data/nginx/cache levels=1:2 keys_zone=one:10m;\n</pre></blockquote><p> \nfile names in a cache will look like this:\n</p> <blockquote class=\"example\"><pre>\n/data/nginx/cache/<strong>c</strong>/<strong>29</strong>/b7f54b2df7773722d382f4809d650<strong>29c</strong>\n</pre></blockquote><p> \n</p><p>\nA cached response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the cache can be put on\ndifferent file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both cache and a directory\nholding temporary files\nare put on the same file system.\nA directory for temporary files is set based on\nthe <code>use_temp_path</code> parameter (1.7.10).\nIf this parameter is omitted or set to the value <code>on</code>,\nthe directory set by the <a href=\"#uwsgi_temp_path\">uwsgi_temp_path</a> directive\nfor the given location will be used.\nIf the value is set to <code>off</code>,\ntemporary files will be put directly in the cache directory.\n</p><p>\nIn addition, all active keys and information about data are stored\nin a shared memory zone, whose <code><i>name</i></code> and <code><i>size</i></code>\nare configured by the <code>keys_zone</code> parameter.\nOne megabyte zone can store about 8 thousand keys.\n</p><p>\nCached data that are not accessed during the time specified by the\n<code>inactive</code> parameter get removed from the cache\nregardless of their freshness.\nBy default, <code>inactive</code> is set to 10 minutes.\n</p><p>\nThe special “cache manager” process monitors the maximum cache size set\nby the <code>max_size</code> parameter.\nWhen this size is exceeded, it removes the least recently used data.\nThe data is removed in iterations configured by\n<code>manager_files</code>,\n<code>manager_threshold</code>, and\n<code>manager_sleep</code> parameters (1.11.5).\nDuring one iteration no more than <code>manager_files</code> items\nare deleted (by default, 100).\nThe duration of one iteration is limited by the\n<code>manager_threshold</code> parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the <code>manager_sleep</code>\nparameter (by default, 50 milliseconds) is made.\n</p><p>\nA minute after the start the special “cache loader” process is activated.\nIt loads information about previously cached data stored on file system\ninto a cache zone.\nThe loading is also done in iterations.\nDuring one iteration no more than <code>loader_files</code> items\nare loaded (by default, 100).\nBesides, the duration of one iteration is limited by the\n<code>loader_threshold</code> parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the <code>loader_sleep</code>\nparameter (by default, 50 milliseconds) is made.\n</p><p>\nAdditionally,\nthe following parameters are available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>:\n</p><p>\n</p> <dl class=\"compact\">\n\n<dt id=\"purger\">\n<code>purger</code>=<code>on</code>|<code>off</code>\n</dt>\n<dd>\nInstructs whether cache entries that match a\n<a href=\"#uwsgi_cache_purge\">wildcard key</a>\nwill be removed from the disk by the cache purger (1.7.12).\nSetting the parameter to <code>on</code>\n(default is <code>off</code>)\nwill activate the “cache purger” process that\npermanently iterates through all cache entries\nand deletes the entries that match the wildcard key.\n</dd>\n\n<dt id=\"purger_files\">\n<code>purger_files</code>=<code><i>number</i></code>\n</dt>\n<dd>\nSets the number of items that will be scanned during one iteration (1.7.12).\nBy default, <code>purger_files</code> is set to 10.\n</dd>\n\n<dt id=\"purger_threshold\">\n<code>purger_threshold</code>=<code><i>number</i></code>\n</dt>\n<dd>\nSets the duration of one iteration (1.7.12).\nBy default, <code>purger_threshold</code> is set to 50 milliseconds.\n</dd>\n\n<dt id=\"purger_sleep\">\n<code>purger_sleep</code>=<code><i>number</i></code>\n</dt>\n<dd>\nSets a pause between iterations (1.7.12).\nBy default, <code>purger_sleep</code> is set to 50 milliseconds.\n</dd>\n\n</dl><p> \n</p><p>\n</p> <blockquote class=\"note\">\nIn versions 1.7.3, 1.7.7, and 1.11.10 cache header format has been changed.\nPreviously cached responses will be considered invalid\nafter upgrading to a newer nginx version.\n</blockquote><p> \n</p>"},{"directive":"uwsgi_cache_min_uses","defaultValue":"uwsgi_cache_min_uses 1;","syntax":"uwsgi_cache_min_uses number;","context":"http, server, location","description":"<p>\nSets the <code><i>number</i></code> of requests after which the response\nwill be cached.\n</p>"},{"directive":"uwsgi_cache_methods","defaultValue":"uwsgi_cache_methods GET HEAD;","syntax":"uwsgi_cache_methods     GET |    HEAD |    POST    ...;","context":"http, server, location","description":"<p>\nIf the client request method is listed in this directive then\nthe response will be cached.\n“<code>GET</code>” and “<code>HEAD</code>” methods are always\nadded to the list, though it is recommended to specify them explicitly.\nSee also the <a href=\"#uwsgi_no_cache\">uwsgi_no_cache</a> directive.\n</p>"},{"directive":"uwsgi_cache_max_range_offset","defaultValue":"—","syntax":"uwsgi_cache_max_range_offset number;","context":"http, server, location","description":"<p>This directive appeared in version 1.11.6.\n            </p></div><p>\nSets an offset in bytes for byte-range requests.\nIf the range is beyond the offset,\nthe range request will be passed to the uwsgi server\nand the response will not be cached.\n</p>"},{"directive":"uwsgi_cache_lock_timeout","defaultValue":"uwsgi_cache_lock_timeout 5s;","syntax":"uwsgi_cache_lock_timeout time;","context":"http, server, location","description":"<p>This directive appeared in version 1.1.12.\n            </p></div><p>\nSets a timeout for <a href=\"#uwsgi_cache_lock\">uwsgi_cache_lock</a>.\nWhen the <code><i>time</i></code> expires,\nthe request will be passed to the uwsgi server,\nhowever, the response will not be cached.\n</p> <blockquote class=\"note\">\nBefore 1.7.8, the response could be cached.\n</blockquote><p> \n</p>"},{"directive":"uwsgi_cache_lock_age","defaultValue":"uwsgi_cache_lock_age 5s;","syntax":"uwsgi_cache_lock_age time;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.8.\n            </p></div><p>\nIf the last request passed to the uwsgi server\nfor populating a new cache element\nhas not completed for the specified <code><i>time</i></code>,\none more request may be passed to the uwsgi server.\n</p>"},{"directive":"uwsgi_cache_lock","defaultValue":"uwsgi_cache_lock off;","syntax":"uwsgi_cache_lock on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.1.12.\n            </p></div><p>\nWhen enabled, only one request at a time will be allowed to populate\na new cache element identified according to the <a href=\"#uwsgi_cache_key\">uwsgi_cache_key</a>\ndirective by passing a request to a uwsgi server.\nOther requests of the same cache element will either wait\nfor a response to appear in the cache or the cache lock for\nthis element to be released, up to the time set by the\n<a href=\"#uwsgi_cache_lock_timeout\">uwsgi_cache_lock_timeout</a> directive.\n</p>"},{"directive":"uwsgi_cache_key","defaultValue":"—","syntax":"uwsgi_cache_key string;","context":"http, server, location","description":"<p>\nDefines a key for caching, for example\n</p> <blockquote class=\"example\"><pre>\nuwsgi_cache_key localhost:9000$request_uri;\n</pre></blockquote><p> \n</p>"},{"directive":"uwsgi_cache_bypass","defaultValue":"—","syntax":"uwsgi_cache_bypass string ...;","context":"http, server, location","description":"<p>\nDefines conditions under which the response will not be taken from a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to “0” then the response will not be taken from the cache:\n</p> <blockquote class=\"example\"><pre>\nuwsgi_cache_bypass $cookie_nocache $arg_nocache$arg_comment;\nuwsgi_cache_bypass $http_pragma    $http_authorization;\n</pre></blockquote><p> \nCan be used along with the <a href=\"#uwsgi_no_cache\">uwsgi_no_cache</a> directive.\n</p>"},{"directive":"uwsgi_cache_background_update","defaultValue":"uwsgi_cache_background_update off;","syntax":"uwsgi_cache_background_update on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.11.10.\n            </p></div><p>\nAllows starting a background subrequest\nto update an expired cache item,\nwhile a stale cached response is returned to the client.\nNote that it is necessary to\n<a href=\"#uwsgi_cache_use_stale_updating\">allow</a>\nthe usage of a stale cached response when it is being updated.\n</p>"},{"directive":"uwsgi_cache","defaultValue":"uwsgi_cache off;","syntax":"uwsgi_cache zone | off;","context":"http, server, location","description":"<p>\nDefines a shared memory zone used for caching.\nThe same zone can be used in several places.\nParameter value can contain variables (1.7.9).\nThe <code>off</code> parameter disables caching inherited\nfrom the previous configuration level.\n</p>"},{"directive":"uwsgi_busy_buffers_size","defaultValue":"uwsgi_busy_buffers_size 8k|16k;","syntax":"uwsgi_busy_buffers_size size;","context":"http, server, location","description":"<p>\nWhen <a href=\"#uwsgi_buffering\">buffering</a> of responses from the uwsgi\nserver is enabled, limits the total <code><i>size</i></code> of buffers that\ncan be busy sending a response to the client while the response is not\nyet fully read.\nIn the meantime, the rest of the buffers can be used for reading the response\nand, if needed, buffering part of the response to a temporary file.\nBy default, <code><i>size</i></code> is limited by the size of two buffers set by the\n<a href=\"#uwsgi_buffer_size\">uwsgi_buffer_size</a> and <a href=\"#uwsgi_buffers\">uwsgi_buffers</a> directives.\n</p>"},{"directive":"uwsgi_buffers","defaultValue":"uwsgi_buffers 8 4k|8k;","syntax":"uwsgi_buffers number size;","context":"http, server, location","description":"<p>\nSets the <code><i>number</i></code> and <code><i>size</i></code> of the\nbuffers used for reading a response from the uwsgi server,\nfor a single connection.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\n</p>"},{"directive":"uwsgi_buffering","defaultValue":"uwsgi_buffering on;","syntax":"uwsgi_buffering on | off;","context":"http, server, location","description":"<p>\nEnables or disables buffering of responses from the uwsgi server.\n</p><p>\nWhen buffering is enabled, nginx receives a response from the uwsgi server\nas soon as possible, saving it into the buffers set by the\n<a href=\"#uwsgi_buffer_size\">uwsgi_buffer_size</a> and <a href=\"#uwsgi_buffers\">uwsgi_buffers</a> directives.\nIf the whole response does not fit into memory, a part of it can be saved\nto a <a href=\"#uwsgi_temp_path\">temporary file</a> on the disk.\nWriting to temporary files is controlled by the\n<a href=\"#uwsgi_max_temp_file_size\">uwsgi_max_temp_file_size</a> and\n<a href=\"#uwsgi_temp_file_write_size\">uwsgi_temp_file_write_size</a> directives.\n</p><p>\nWhen buffering is disabled, the response is passed to a client synchronously,\nimmediately as it is received.\nnginx will not try to read the whole response from the uwsgi server.\nThe maximum size of the data that nginx can receive from the server\nat a time is set by the <a href=\"#uwsgi_buffer_size\">uwsgi_buffer_size</a> directive.\n</p><p>\nBuffering can also be enabled or disabled by passing\n“<code>yes</code>” or “<code>no</code>” in the\n“X-Accel-Buffering” response header field.\nThis capability can be disabled using the\n<a href=\"#uwsgi_ignore_headers\">uwsgi_ignore_headers</a> directive.\n</p>"},{"directive":"uwsgi_buffer_size","defaultValue":"uwsgi_buffer_size 4k|8k;","syntax":"uwsgi_buffer_size size;","context":"http, server, location","description":"<p>\nSets the <code><i>size</i></code> of the buffer used for reading the first part\nof the response received from the uwsgi server.\nThis part usually contains a small response header.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\nIt can be made smaller, however.\n</p>"},{"directive":"uwsgi_bind","defaultValue":"—","syntax":"uwsgi_bind     address    [transparent] |    off;","context":"http, server, location","description":"<p>\nMakes outgoing connections to a uwsgi server originate\nfrom the specified local IP address with an optional port (1.11.2).\nParameter value can contain variables (1.3.12).\nThe special value <code>off</code> (1.3.12) cancels the effect\nof the <code>uwsgi_bind</code> directive\ninherited from the previous configuration level, which allows the\nsystem to auto-assign the local IP address and port.\n</p>"},{"directive":"userid_service","defaultValue":"userid_service IP address of the server;","syntax":"userid_service number;","context":"http, server, location","description":"<p>\nIf identifiers are issued by multiple servers (services),\neach service should be assigned its own <code><i>number</i></code>\nto ensure that client identifiers are unique.\nFor version 1 cookies, the default value is zero.\nFor version 2 cookies, the default value is the number composed from the last\nfour octets of the server’s IP address.\n</p>"},{"directive":"userid_path","defaultValue":"userid_path /;","syntax":"userid_path path;","context":"http, server, location","description":"<p>\nDefines a path for which the cookie is set.\n</p>"},{"directive":"userid_p3p","defaultValue":"userid_p3p none;","syntax":"userid_p3p string | none;","context":"http, server, location","description":"<p>\nSets a value for the “P3P” header field that will be\nsent along with the cookie.\nIf the directive is set to the special value <code>none</code>,\nthe “P3P” header will not be sent in a response.\n</p>"},{"directive":"userid_name","defaultValue":"userid_name uid;","syntax":"userid_name name;","context":"http, server, location","description":"<p>\nSets the cookie name.\n</p>"},{"directive":"userid_mark","defaultValue":"userid_mark off;","syntax":"userid_mark     letter | digit |    = |    off;","context":"http, server, location","description":"<p>\nIf the parameter is not <code>off</code>, enables the cookie marking\nmechanism and sets the character used as a mark.\nThis mechanism is used to add or change\n<a href=\"#userid_p3p\">userid_p3p</a> and/or a cookie expiration time while\npreserving the client identifier.\nA mark can be any letter of the English alphabet (case-sensitive),\ndigit, or the “<code>=</code>” character.\n</p><p>\nIf the mark is set, it is compared with the first padding symbol\nin the base64 representation of the client identifier passed in a cookie.\nIf they do not match, the cookie is resent with the specified mark,\nexpiration time, and “P3P” header.\n</p>"},{"directive":"userid_expires","defaultValue":"userid_expires off;","syntax":"userid_expires time | max |    off;","context":"http, server, location","description":"<p>\nSets a time during which a browser should keep the cookie.\nThe parameter <code>max</code> will cause the cookie to expire on\n“<code>31 Dec 2037 23:55:55 GMT</code>”.\nThe parameter <code>off</code> will cause the cookie to expire at\nthe end of a browser session.\n</p>"},{"directive":"userid_domain","defaultValue":"userid_domain none;","syntax":"userid_domain name | none;","context":"http, server, location","description":"<p>\nDefines a domain for which the cookie is set.\nThe <code>none</code> parameter disables setting of a domain for the\ncookie.\n</p>"},{"directive":"userid","defaultValue":"userid off;","syntax":"userid     on |    v1 |    log |    off;","context":"http, server, location","description":"<p>\nEnables or disables setting cookies and logging the received cookies:\n</p> <dl class=\"compact\">\n\n<dt><code>on</code></dt>\n<dd>\nenables the setting of version 2 cookies\nand logging of the received cookies;\n</dd>\n\n<dt><code>v1</code></dt>\n<dd>\nenables the setting of version 1 cookies\nand logging of the received cookies;\n</dd>\n\n<dt><code>log</code></dt>\n<dd>\ndisables the setting of cookies,\nbut enables logging of the received cookies;\n</dd>\n\n<dt><code>off</code></dt>\n<dd>\ndisables the setting of cookies and logging of the received cookies.\n</dd>\n\n</dl><p> \n</p>"},{"directive":"user","defaultValue":"user nobody nobody;","syntax":"user user [group];","context":"main","description":"<p>\nDefines <code><i>user</i></code> and <code><i>group</i></code>\ncredentials used by worker processes.\nIf <code><i>group</i></code> is omitted, a group whose name equals\nthat of <code><i>user</i></code> is used.\n</p>"},{"directive":"use","defaultValue":"—","syntax":"use method;","context":"events","description":"<p>\nSpecifies the <a href=\"events.html\">connection processing</a>\n<code><i>method</i></code> to use.\nThere is normally no need to specify it explicitly, because nginx will\nby default use the most efficient method.\n</p>"},{"directive":"upstream_conf","defaultValue":"","syntax":"","context":"","description":null},{"directive":"upstream","defaultValue":"—","syntax":"upstream name { ... }","context":"stream","description":"<p>\nDefines a group of servers.\nServers can listen on different ports.\nIn addition, servers listening on TCP and UNIX-domain sockets\ncan be mixed.\n</p><p>\nExample:\n</p> <blockquote class=\"example\"><pre>\nupstream backend {\n    server backend1.example.com:12345 weight=5;\n    server 127.0.0.1:12345            max_fails=3 fail_timeout=30s;\n    server unix:/tmp/backend2;\n    server backend3.example.com:12345 resolve;\n\n    server backup1.example.com:12345  backup;\n}\n</pre></blockquote><p> \n</p><p>\nBy default, connections are distributed between the servers using a\nweighted round-robin balancing method.\nIn the above example, each 7 connections will be distributed as follows:\n5 connections go to <code>backend1.example.com:12345</code>\nand one connection to each of the second and third servers.\nIf an error occurs during communication with a server, the connection will\nbe passed to the next server, and so on until all of the functioning\nservers will be tried.\nIf communication with all servers fails, the connection will be closed.\n</p>"},{"directive":"upstream","defaultValue":"—","syntax":"upstream name { ... }","context":"http","description":"<p>\nDefines a group of servers.\nServers can listen on different ports.\nIn addition, servers listening on TCP and UNIX-domain sockets\ncan be mixed.\n</p><p>\nExample:\n</p> <blockquote class=\"example\"><pre>\nupstream backend {\n    server backend1.example.com weight=5;\n    server 127.0.0.1:8080       max_fails=3 fail_timeout=30s;\n    server unix:/tmp/backend3;\n\n    server backup1.example.com  backup;\n}\n</pre></blockquote><p> \n</p><p>\nBy default, requests are distributed between the servers using a\nweighted round-robin balancing method.\nIn the above example, each 7 requests will be distributed as follows:\n5 requests go to <code>backend1.example.com</code>\nand one request to each of the second and third servers.\nIf an error occurs during communication with a server, the request will\nbe passed to the next server, and so on until all of the functioning\nservers will be tried.\nIf a successful response could not be obtained from any of the servers,\nthe client will receive the result of the communication with the last server.\n</p>"},{"directive":"uninitialized_variable_warn","defaultValue":"uninitialized_variable_warn on;","syntax":"uninitialized_variable_warn on | off;","context":"http, server, location, if","description":"<p>\nControls whether warnings about uninitialized variables are logged.\n</p>"},{"directive":"underscores_in_headers","defaultValue":"underscores_in_headers off;","syntax":"underscores_in_headers on | off;","context":"http, server","description":"<p>\nEnables or disables the use of underscores in client request header fields.\nWhen the use of underscores is disabled, request header fields whose names\ncontain underscores are\nmarked as invalid and become subject to the\n<a href=\"#ignore_invalid_headers\">ignore_invalid_headers</a> directive.\n</p><p>\nIf the directive is specified on the <a href=\"#server\">server</a> level,\nits value is only used if a server is a default one.\nThe value specified also applies to all virtual servers\nlistening on the same address and port.\n</p>"},{"directive":"types_hash_max_size","defaultValue":"types_hash_max_size 1024;","syntax":"types_hash_max_size size;","context":"http, server, location","description":"<p>\nSets the maximum <code><i>size</i></code> of the types hash tables.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p>"},{"directive":"types_hash_bucket_size","defaultValue":"types_hash_bucket_size 64;","syntax":"types_hash_bucket_size size;","context":"http, server, location","description":"<p>\nSets the bucket size for the types hash tables.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p> <blockquote class=\"note\">\nPrior to version 1.5.13,\nthe default value depended on the size of the processor’s cache line.\n</blockquote><p> \n</p>"},{"directive":"types","defaultValue":"types {    text/html  html;    image/gif  gif;    image/jpeg jpg;}","syntax":"types { ... }","context":"http, server, location","description":"<p>\nMaps file name extensions to MIME types of responses.\nExtensions are case-insensitive.\nSeveral extensions can be mapped to one type, for example:\n</p> <blockquote class=\"example\"><pre>\ntypes {\n    application/octet-stream bin exe dll;\n    application/octet-stream deb;\n    application/octet-stream dmg;\n}\n</pre></blockquote><p> \n</p><p>\nA sufficiently full mapping table is distributed with nginx in the\n<code>conf/mime.types</code> file.\n</p><p>\nTo make a particular location emit the\n“<code>application/octet-stream</code>”\nMIME type for all requests, the following configuration can be used:\n</p> <blockquote class=\"example\"><pre>\nlocation /download/ {\n    types        { }\n    default_type application/octet-stream;\n}\n</pre></blockquote><p> \n</p>"},{"directive":"try_files","defaultValue":"—","syntax":"try_files file ... uri;try_files file ... =code;","context":"server, location","description":"<p>\nChecks the existence of files in the specified order and uses\nthe first found file for request processing; the processing\nis performed in the current context.\nThe path to a file is constructed from the\n<code><i>file</i></code> parameter\naccording to the\n<a href=\"#root\">root</a> and <a href=\"#alias\">alias</a> directives.\nIt is possible to check directory’s existence by specifying\na slash at the end of a name, e.g. “<code>$uri/</code>”.\nIf none of the files were found, an internal redirect to the\n<code><i>uri</i></code> specified in the last parameter is made.\nFor example:\n</p> <blockquote class=\"example\"><pre>\nlocation /images/ {\n    try_files $uri /images/default.gif;\n}\n\nlocation = /images/default.gif {\n    expires 30s;\n}\n</pre></blockquote><p> \nThe last parameter can also point to a named location,\nas shown in examples below.\nStarting from version 0.7.51, the last parameter can also be a\n<code><i>code</i></code>:\n</p> <blockquote class=\"example\"><pre>\nlocation / {\n    try_files $uri $uri/index.html $uri.html =404;\n}\n</pre></blockquote><p> \n</p><p>\nExample in proxying Mongrel:\n</p> <blockquote class=\"example\"><pre>\nlocation / {\n    try_files /system/maintenance.html\n              $uri $uri/index.html $uri.html\n              @mongrel;\n}\n\nlocation @mongrel {\n    proxy_pass http://mongrel;\n}\n</pre></blockquote><p> \n</p><p>\nExample for Drupal/FastCGI:\n</p> <blockquote class=\"example\"><pre>\nlocation / {\n    try_files $uri $uri/ @drupal;\n}\n\nlocation ~ \\.php$ {\n    try_files $uri @drupal;\n\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to$fastcgi_script_name;\n    fastcgi_param SCRIPT_NAME     $fastcgi_script_name;\n    fastcgi_param QUERY_STRING    $args;\n\n    ... other fastcgi_param's\n}\n\nlocation @drupal {\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to/index.php;\n    fastcgi_param SCRIPT_NAME     /index.php;\n    fastcgi_param QUERY_STRING    q=$uri&amp;$args;\n\n    ... other fastcgi_param's\n}\n</pre></blockquote><p> \nIn the following example,\n</p> <blockquote class=\"example\"><pre>\nlocation / {\n    try_files $uri $uri/ @drupal;\n}\n</pre></blockquote><p> \nthe <code>try_files</code> directive is equivalent to\n</p> <blockquote class=\"example\"><pre>\nlocation / {\n    error_page 404 = @drupal;\n    log_not_found off;\n}\n</pre></blockquote><p> \nAnd here,\n</p> <blockquote class=\"example\"><pre>\nlocation ~ \\.php$ {\n    try_files $uri @drupal;\n\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to$fastcgi_script_name;\n\n    ...\n}\n</pre></blockquote><p> \n<code>try_files</code> checks the existence of the PHP file\nbefore passing the request to the FastCGI server.\n</p><p>\nExample for Wordpress and Joomla:\n</p> <blockquote class=\"example\"><pre>\nlocation / {\n    try_files $uri $uri/ @wordpress;\n}\n\nlocation ~ \\.php$ {\n    try_files $uri @wordpress;\n\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to$fastcgi_script_name;\n    ... other fastcgi_param's\n}\n\nlocation @wordpress {\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to/index.php;\n    ... other fastcgi_param's\n}\n</pre></blockquote><p> \n</p>"},{"directive":"timer_resolution","defaultValue":"—","syntax":"timer_resolution interval;","context":"main","description":"<p>\nReduces timer resolution in worker processes, thus reducing the\nnumber of <code>gettimeofday()</code> system calls made.\nBy default, <code>gettimeofday()</code> is called each time\na kernel event is received.\nWith reduced resolution, <code>gettimeofday()</code> is only\ncalled once per specified <code><i>interval</i></code>.\n</p><p>\nExample:\n</p> <blockquote class=\"example\"><pre>\ntimer_resolution 100ms;\n</pre></blockquote><p> \n</p><p>\nInternal implementation of the interval depends on the method used:\n</p> <ul class=\"compact\">\n\n<li>\nthe <code>EVFILT_TIMER</code> filter if <code>kqueue</code> is used;\n</li>\n\n<li>\n<code>timer_create()</code> if <code>eventport</code> is used;\n</li>\n\n<li>\n<code>setitimer()</code> otherwise.\n</li>\n\n</ul><p> \n</p>"},{"directive":"timeout","defaultValue":"","syntax":"","context":"","description":null},{"directive":"thread_pool","defaultValue":"thread_pool default threads=32 max_queue=65536;","syntax":"thread_pool     name    threads=number    [max_queue=number];","context":"main","description":"<p>This directive appeared in version 1.7.11.\n            </p></div><p>\nDefines named thread pools\nused for multi-threaded reading and sending of files\n<a href=\"http/ngx_http_core_module.html#aio\">without blocking</a>\nworker processes.\n</p><p>\nThe <code>threads</code> parameter\ndefines the number of threads in the pool.\n</p><p>\nIn the event that all threads in the pool are busy,\na new task will wait in the queue.\nThe <code>max_queue</code> parameter limits the number\nof tasks allowed to be waiting in the queue.\nBy default, up to 65536 tasks can wait in the queue.\nWhen the queue overflows, the task is completed with an error.\n</p>"},{"directive":"tcp_nopush","defaultValue":"tcp_nopush off;","syntax":"tcp_nopush on | off;","context":"http, server, location","description":"<p>\nEnables or disables the use of\nthe <code>TCP_NOPUSH</code> socket option on FreeBSD\nor the <code>TCP_CORK</code> socket option on Linux.\nThe options are enabled only when <a href=\"#sendfile\">sendfile</a> is used.\nEnabling the option allows\n</p> <ul class=\"compact\">\n\n<li>\nsending the response header and the beginning of a file in one packet,\non Linux and FreeBSD 4.*;\n</li>\n\n<li>\nsending a file in full packets.\n</li>\n\n</ul><p> \n</p>"},{"directive":"tcp_nodelay","defaultValue":"tcp_nodelay on;","syntax":"tcp_nodelay on | off;","context":"stream, server","description":"<p>This directive appeared in version 1.9.4.\n            </p></div><p>\nEnables or disables the use of the <code>TCP_NODELAY</code> option.\nThe option is enabled for both client and proxied server connections.\n</p>"},{"directive":"tcp_nodelay","defaultValue":"tcp_nodelay on;","syntax":"tcp_nodelay on | off;","context":"http, server, location","description":"<p>\nEnables or disables the use of the <code>TCP_NODELAY</code> option.\nThe option is enabled only when a connection is transitioned into the\nkeep-alive state.\n</p>"},{"directive":"sub_filter_types","defaultValue":"","syntax":"","context":"","description":null},{"directive":"sub_filter_once","defaultValue":"sub_filter_once on;","syntax":"sub_filter_once on | off;","context":"http, server, location","description":"<p>\nIndicates whether to look for each string to replace\nonce or repeatedly.\n</p>"},{"directive":"sub_filter_last_modified","defaultValue":"sub_filter_last_modified off;","syntax":"sub_filter_last_modified on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.5.1.\n            </p></div><p>\nAllows preserving the “Last-Modified” header field\nfrom the original response during replacement\nto facilitate response caching.\n</p><p>\nBy default, the header field is removed as contents of the response\nare modified during processing.\n</p>"},{"directive":"sub_filter","defaultValue":"—","syntax":"sub_filter string replacement;","context":"http, server, location","description":"<p>\nSets a string to replace and a replacement string.\nThe string to replace is matched ignoring the case.\nThe string to replace (1.9.4) and replacement string can contain variables.\nSeveral <code>sub_filter</code> directives\ncan be specified on one configuration level (1.9.4).\nThese directives are inherited from the previous level if and only if there are\nno <code>sub_filter</code> directives defined on the current level.\n</p>"},{"directive":"stub_status","defaultValue":"—","syntax":"stub_status;","context":"server, location","description":"<p>\nThe basic status information will be accessible from the surrounding location.\n</p><p>\n</p> <blockquote class=\"note\">\nIn versions prior to 1.7.5,\nthe directive syntax required an arbitrary argument, for example,\n“<code>stub_status on</code>”.\n</blockquote><p> \n</p>"},{"directive":"stream","defaultValue":"—","syntax":"stream { ... }","context":"main","description":"<p>\nProvides the configuration file context in which the stream server directives\nare specified.\n</p>"},{"directive":"sticky_cookie_insert","defaultValue":"—","syntax":"sticky_cookie_insert name[expires=time][domain=domain][path=path];","context":"upstream","description":"<p>\nThis directive is obsolete since version 1.5.7.\nAn equivalent\n<a href=\"#sticky\">sticky</a> directive with a new syntax should be used instead:\n</p> <blockquote class=\"note\">\n<code>sticky cookie</code> <code><i>name</i></code>\n[<code>expires=</code><code><i>time</i></code>]\n[<code>domain=</code><code><i>domain</i></code>]\n[<code>path=</code><code><i>path</i></code>];\n</blockquote><p> \n</p>"},{"directive":"sticky","defaultValue":"—","syntax":"sticky     cookie name    [expires=time]    [domain=domain]    [httponly]    [secure]    [path=path];sticky     route $variable ...;sticky     learn    create=$variable    lookup=$variable    zone=name:size    [timeout=time];","context":"upstream","description":"<p>This directive appeared in version 1.5.7.\n            </p></div><p>\nEnables session affinity, which causes requests from the same client to be\npassed to the same server in a group of servers.\nThree methods are available:\n</p> <dl class=\"compact\">\n<dt id=\"sticky_cookie\"><code>cookie</code></dt>\n<dd>\n\n<p>\nWhen the <code>cookie</code> method is used, information about the\ndesignated server is passed in an HTTP cookie generated by nginx:\n</p> <blockquote class=\"example\"><pre>\nupstream backend {\n    server backend1.example.com;\n    server backend2.example.com;\n\n    sticky cookie srv_id expires=1h domain=.example.com path=/;\n}\n</pre></blockquote><p> \n</p>\n\n<p>\nA request that comes from a client not yet bound to a particular server\nis passed to the server selected by the configured balancing method.\nFurther requests with this cookie will be passed to the designated server.\nIf the designated server cannot process a request, the new server is\nselected as if the client has not been bound yet.\n</p>\n\n<p>\nThe first parameter sets the name of the cookie to be set or inspected.\nAdditional parameters may be as follows:\n</p> <dl class=\"compact\">\n\n<dt><code>expires=</code><code><i>time</i></code></dt>\n<dd>\nSets the <code><i>time</i></code> for which a browser should keep the cookie.\nThe special value <code>max</code> will cause the cookie to expire on\n“<code>31 Dec 2037 23:55:55 GMT</code>”.\nIf the parameter is not specified, it will cause the cookie to expire at\nthe end of a browser session.\n</dd>\n\n<dt><code>domain=</code><code><i>domain</i></code></dt>\n<dd>\nDefines the <code><i>domain</i></code> for which the cookie is set.\nParameter value can contain variables (1.11.5).\n</dd>\n\n<dt><code>httponly</code></dt>\n<dd>\nAdds the <code>HttpOnly</code> attribute to the cookie (1.7.11).\n</dd>\n\n<dt><code>secure</code></dt>\n<dd>\nAdds the <code>Secure</code> attribute to the cookie (1.7.11).\n\n</dd>\n\n<dt><code>path=</code><code><i>path</i></code></dt>\n<dd>\nDefines the <code><i>path</i></code> for which the cookie is set.\n</dd>\n\n</dl><p> \nIf any parameters are omitted, the corresponding cookie fields are not set.\n</p>\n</dd>\n\n<dt id=\"sticky_route\"><code>route</code></dt>\n<dd>\n\n<p>\nWhen the <code>route</code> method is used, proxied server assigns\nclient a route on receipt of the first request.\nAll subsequent requests from this client will carry routing information\nin a cookie or URI.\nThis information is compared with the “<code>route</code>” parameter\nof the <a href=\"#server\">server</a> directive to identify the server to which the\nrequest should be proxied.\nIf the “<code>route</code>” parameter is not specified, the route name\nwill be a hexadecimal representation of the MD5 hash of the IP address and port,\nor of the UNIX-domain socket path.\nIf the designated server cannot process a request, the new server is\nselected by the configured balancing method as if there is no routing\ninformation in the request.\n</p>\n\n<p>\nThe parameters of the <code>route</code> method specify variables that\nmay contain routing information.\nThe first non-empty variable is used to find the matching server.\n</p>\n\n<p>\nExample:\n</p> <blockquote class=\"example\"><pre>\nmap $cookie_jsessionid $route_cookie {\n    ~.+\\.(?P&lt;route&gt;\\w+)$ $route;\n}\n\nmap $request_uri $route_uri {\n    ~jsessionid=.+\\.(?P&lt;route&gt;\\w+)$ $route;\n}\n\nupstream backend {\n    server backend1.example.com route=a;\n    server backend2.example.com route=b;\n\n    sticky route $route_cookie $route_uri;\n}\n</pre></blockquote><p> \nHere, the route is taken from the “<code>JSESSIONID</code>” cookie\nif present in a request.\nOtherwise, the route from the URI is used.\n</p>\n\n</dd>\n\n<dt id=\"sticky_learn\"><code>learn</code></dt>\n<dd>\n<p>\nWhen the <code>learn</code> method (1.7.1) is used, nginx\nanalyzes upstream server responses and learns server-initiated sessions\nusually passed in an HTTP cookie.\n</p> <blockquote class=\"example\"><pre>\nupstream backend {\n   server backend1.example.com:8080;\n   server backend2.example.com:8081;\n\n   sticky learn\n          create=$upstream_cookie_examplecookie\n          lookup=$cookie_examplecookie\n          zone=client_sessions:1m;\n}\n</pre></blockquote><p> \n\nIn the example, the upstream server creates a session by setting the\ncookie “<code>EXAMPLECOOKIE</code>” in the response.\nFurther requests with this cookie will be passed to the same server.\nIf the server cannot process the request, the new server is\nselected as if the client has not been bound yet.\n</p>\n\n<p>\nThe parameters <code>create</code> and <code>lookup</code>\nspecify variables that indicate how new sessions are created and existing\nsessions are searched, respectively.\nBoth parameters may be specified more than once, in which case the first\nnon-empty variable is used.\n</p>\n\n<p>\nSessions are stored in a shared memory zone, whose <code><i>name</i></code> and\n<code><i>size</i></code> are configured by the <code>zone</code> parameter.\nOne megabyte zone can store about 8000 sessions on the 64-bit platform.\nThe sessions that are not accessed during the time specified by the\n<code>timeout</code> parameter get removed from the zone.\nBy default, <code>timeout</code> is set to 10 minutes.\n</p>\n\n</dd>\n</dl><p> \n</p><p>\n</p> <blockquote class=\"note\">\nThis directive is available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote><p> \n</p>"},{"directive":"status_zone","defaultValue":"—","syntax":"status_zone zone;","context":"server","description":"<p>\nEnables collection of virtual\n<a href=\"ngx_http_core_module.html#server\">http</a>\nor\n<a href=\"../stream/ngx_stream_core_module.html#server\">stream</a>\n(1.7.11) server status information in the specified <code><i>zone</i></code>.\nSeveral servers may share the same zone.\n</p>"},{"directive":"status_format","defaultValue":"status_format json;","syntax":"status_format json;status_format jsonp [callback];","context":"http, server, location","description":"<p>\nBy default, status information is output in the JSON format.\n</p><p>\nAlternatively, data may be output as JSONP.\nThe <code><i>callback</i></code> parameter specifies the name of a callback function.\nThe value can contain variables.\nIf parameter is omitted, or the computed value is an empty string,\nthen “<code>ngx_status_jsonp_callback</code>” is used.\n</p>"},{"directive":"status","defaultValue":"—","syntax":"status;","context":"location","description":"<p>\nThe status information will be accessible from the surrounding location.\nAccess to this location should be\n<a href=\"ngx_http_core_module.html#satisfy\">limited</a>.\n</p>"},{"directive":"state","defaultValue":"—","syntax":"state file;","context":"upstream","description":"<p>This directive appeared in version 1.9.7.\n            </p></div><p>\nSpecifies a <code><i>file</i></code> that keeps the state\nof the dynamically configurable group.\n</p><p>\nExamples:\n</p> <blockquote class=\"example\"><pre>\nstate /var/lib/nginx/state/servers.conf; # path for Linux\nstate /var/db/nginx/state/servers.conf;  # path for FreeBSD\n</pre></blockquote><p> \n</p><p>\nThe state is currently limited to the list of servers with their parameters.\nThe file is read when parsing the configuration and is updated each time\nthe upstream configuration is\n<a href=\"ngx_http_upstream_conf_module.html#upstream_conf\">changed</a>.\nChanging the file content directly should be avoided.\nThe directive cannot be used\nalong with the <a href=\"#server\">server</a> directive.\n</p><p>\n</p> <blockquote class=\"note\">\nChanges made during\n<a href=\"../control.html#reconfiguration\">configuration reload</a>\nor <a href=\"../control.html#upgrade\">binary upgrade</a>\ncan be lost.\n</blockquote><p> \n</p><p>\n</p> <blockquote class=\"note\">\nThis directive is available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote><p> \n</p>"},{"directive":"state","defaultValue":"—","syntax":"state file;","context":"upstream","description":"<p>This directive appeared in version 1.9.7.\n            </p></div><p>\nSpecifies a <code><i>file</i></code> that keeps the state\nof the dynamically configurable group.\n</p><p>\nExamples:\n</p> <blockquote class=\"example\"><pre>\nstate /var/lib/nginx/state/servers.conf; # path for Linux\nstate /var/db/nginx/state/servers.conf;  # path for FreeBSD\n</pre></blockquote><p> \n</p><p>\nThe state is currently limited to the list of servers with their parameters.\nThe file is read when parsing the configuration and is updated each time\nthe upstream configuration is\n<a href=\"ngx_http_upstream_conf_module.html#upstream_conf\">changed</a>.\nChanging the file content directly should be avoided.\nThe directive cannot be used\nalong with the <a href=\"#server\">server</a> directive.\n</p><p>\n</p> <blockquote class=\"note\">\nChanges made during\n<a href=\"../control.html#reconfiguration\">configuration reload</a>\nor <a href=\"../control.html#upgrade\">binary upgrade</a>\ncan be lost.\n</blockquote><p> \n</p><p>\n</p> <blockquote class=\"note\">\nThis directive is available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote><p> \n</p>"},{"directive":"starttls","defaultValue":"","syntax":"","context":"","description":null},{"directive":"ssl_verify_depth","defaultValue":"ssl_verify_depth 1;","syntax":"ssl_verify_depth number;","context":"stream, server","description":"<p>This directive appeared in version 1.11.8.\n            </p></div><p>\nSets the verification depth in the client certificates chain.\n</p>"},{"directive":"ssl_verify_depth","defaultValue":"ssl_verify_depth 1;","syntax":"ssl_verify_depth number;","context":"mail, server","description":"<p>This directive appeared in version 1.7.11.\n            </p></div><p>\nSets the verification depth in the client certificates chain.\n</p>"},{"directive":"ssl_verify_depth","defaultValue":"ssl_verify_depth 1;","syntax":"ssl_verify_depth number;","context":"http, server","description":"<p>\nSets the verification depth in the client certificates chain.\n</p>"},{"directive":"ssl_verify_client","defaultValue":"ssl_verify_client off;","syntax":"ssl_verify_client     on | off |    optional | optional_no_ca;","context":"stream, server","description":"<p>This directive appeared in version 1.11.8.\n            </p></div><p>\nEnables verification of client certificates.\nThe verification result is stored in the\n<a href=\"#var_ssl_client_verify\">$ssl_client_verify</a> variable.\nIf an error has occurred during the client certificate verification\nor a client has not presented the required certificate,\nthe connection is closed.\n</p><p>\nThe <code>optional</code> parameter requests the client\ncertificate and verifies it if the certificate is present.\n</p><p>\nThe <code>optional_no_ca</code> parameter\nrequests the client\ncertificate but does not require it to be signed by a trusted CA certificate.\nThis is intended for the use in cases when a service that is external to nginx\nperforms the actual certificate verification.\nThe contents of the certificate is accessible through the\n<a href=\"#var_ssl_client_cert\">$ssl_client_cert</a> variable.\n</p>"},{"directive":"ssl_verify_client","defaultValue":"ssl_verify_client off;","syntax":"ssl_verify_client     on | off |    optional | optional_no_ca;","context":"mail, server","description":"<p>This directive appeared in version 1.7.11.\n            </p></div><p>\nEnables verification of client certificates.\nThe verification result is passed in the\n“Auth-SSL-Verify” header of the\n<a href=\"ngx_mail_auth_http_module.html#auth_http\">authentication</a>\nrequest.\n</p><p>\nThe <code>optional</code> parameter requests the client\ncertificate and verifies it if the certificate is present.\n</p><p>\nThe <code>optional_no_ca</code> parameter\nrequests the client\ncertificate but does not require it to be signed by a trusted CA certificate.\nThis is intended for the use in cases when a service that is external to nginx\nperforms the actual certificate verification.\nThe contents of the certificate is accessible through requests\n<a href=\"ngx_mail_auth_http_module.html#auth_http_pass_client_cert\">sent</a>\nto the authentication server.\n</p>"},{"directive":"ssl_verify_client","defaultValue":"ssl_verify_client off;","syntax":"ssl_verify_client     on | off |    optional | optional_no_ca;","context":"http, server","description":"<p>\nEnables verification of client certificates.\nThe verification result is stored in the\n<a href=\"#var_ssl_client_verify\">$ssl_client_verify</a> variable.\n</p><p>\nThe <code>optional</code> parameter (0.8.7+) requests the client\ncertificate and verifies it if the certificate is present.\n</p><p>\nThe <code>optional_no_ca</code> parameter (1.3.8, 1.2.5)\nrequests the client\ncertificate but does not require it to be signed by a trusted CA certificate.\nThis is intended for the use in cases when a service that is external to nginx\nperforms the actual certificate verification.\nThe contents of the certificate is accessible through the\n<a href=\"#var_ssl_client_cert\">$ssl_client_cert</a> variable.\n</p>"},{"directive":"ssl_trusted_certificate","defaultValue":"—","syntax":"ssl_trusted_certificate file;","context":"stream, server","description":"<p>This directive appeared in version 1.11.8.\n            </p></div><p>\nSpecifies a <code><i>file</i></code> with trusted CA certificates in the PEM format\nused to <a href=\"#ssl_verify_client\">verify</a> client certificates.\n</p><p>\nIn contrast to the certificate set by <a href=\"#ssl_client_certificate\">ssl_client_certificate</a>,\nthe list of these certificates will not be sent to clients.\n</p>"},{"directive":"ssl_trusted_certificate","defaultValue":"—","syntax":"ssl_trusted_certificate file;","context":"mail, server","description":"<p>This directive appeared in version 1.7.11.\n            </p></div><p>\nSpecifies a <code><i>file</i></code> with trusted CA certificates in the PEM format\nused to <a href=\"#ssl_verify_client\">verify</a> client certificates.\n</p><p>\nIn contrast to the certificate set by <a href=\"#ssl_client_certificate\">ssl_client_certificate</a>,\nthe list of these certificates will not be sent to clients.\n</p>"},{"directive":"ssl_trusted_certificate","defaultValue":"—","syntax":"ssl_trusted_certificate file;","context":"http, server","description":"<p>This directive appeared in version 1.3.7.\n            </p></div><p>\nSpecifies a <code><i>file</i></code> with trusted CA certificates in the PEM format\nused to <a href=\"#ssl_verify_client\">verify</a> client certificates and\nOCSP responses if <a href=\"#ssl_stapling\">ssl_stapling</a> is enabled.\n</p><p>\nIn contrast to the certificate set by <a href=\"#ssl_client_certificate\">ssl_client_certificate</a>,\nthe list of these certificates will not be sent to clients.\n</p>"},{"directive":"ssl_stapling_verify","defaultValue":"ssl_stapling_verify off;","syntax":"ssl_stapling_verify on | off;","context":"http, server","description":"<p>This directive appeared in version 1.3.7.\n            </p></div><p>\nEnables or disables verification of OCSP responses by the server.\n</p><p>\nFor verification to work, the certificate of the server certificate\nissuer, the root certificate, and all intermediate certificates\nshould be configured as trusted using the\n<a href=\"#ssl_trusted_certificate\">ssl_trusted_certificate</a> directive.\n</p>"},{"directive":"ssl_stapling_responder","defaultValue":"—","syntax":"ssl_stapling_responder url;","context":"http, server","description":"<p>This directive appeared in version 1.3.7.\n            </p></div><p>\nOverrides the URL of the OCSP responder specified in the\n“<a href=\"https://tools.ietf.org/html/rfc5280#section-4.2.2.1\">Authority\nInformation Access</a>” certificate extension.\n</p><p>\nOnly “<code>http://</code>” OCSP responders are supported:\n</p> <blockquote class=\"example\"><pre>\nssl_stapling_responder http://ocsp.example.com/;\n</pre></blockquote><p> \n</p>"},{"directive":"ssl_stapling_file","defaultValue":"—","syntax":"ssl_stapling_file file;","context":"http, server","description":"<p>This directive appeared in version 1.3.7.\n            </p></div><p>\nWhen set, the stapled OCSP response will be taken from the\nspecified <code><i>file</i></code> instead of querying\nthe OCSP responder specified in the server certificate.\n</p><p>\nThe file should be in the DER format as produced by the\n“<code>openssl ocsp</code>” command.\n</p>"},{"directive":"ssl_stapling","defaultValue":"ssl_stapling off;","syntax":"ssl_stapling on | off;","context":"http, server","description":"<p>This directive appeared in version 1.3.7.\n            </p></div><p>\nEnables or disables\n<a href=\"https://tools.ietf.org/html/rfc4366#section-3.6\">stapling\nof OCSP responses</a> by the server.\nExample:\n</p> <blockquote class=\"example\"><pre>\nssl_stapling on;\nresolver 192.0.2.1;\n</pre></blockquote><p> \n</p><p>\nFor the OCSP stapling to work, the certificate of the server certificate\nissuer should be known.\nIf the <a href=\"#ssl_certificate\">ssl_certificate</a> file does\nnot contain intermediate certificates,\nthe certificate of the server certificate issuer should be\npresent in the\n<a href=\"#ssl_trusted_certificate\">ssl_trusted_certificate</a> file.\n</p><p>\nFor a resolution of the OCSP responder hostname,\nthe <a href=\"ngx_http_core_module.html#resolver\">resolver</a> directive\nshould also be specified.\n</p>"},{"directive":"ssl_session_timeout","defaultValue":"ssl_session_timeout 5m;","syntax":"ssl_session_timeout time;","context":"stream, server","description":"<p>\nSpecifies a time during which a client may reuse the\nsession parameters.\n</p>"},{"directive":"ssl_session_timeout","defaultValue":"ssl_session_timeout 5m;","syntax":"ssl_session_timeout time;","context":"mail, server","description":"<p>\nSpecifies a time during which a client may reuse the\nsession parameters.\n</p>"},{"directive":"ssl_session_timeout","defaultValue":"ssl_session_timeout 5m;","syntax":"ssl_session_timeout time;","context":"http, server","description":"<p>\nSpecifies a time during which a client may reuse the\nsession parameters.\n</p>"},{"directive":"ssl_session_tickets","defaultValue":"ssl_session_tickets on;","syntax":"ssl_session_tickets on | off;","context":"stream, server","description":"<p>\nEnables or disables session resumption through\n<a href=\"https://tools.ietf.org/html/rfc5077\">TLS session tickets</a>.\n</p>"},{"directive":"ssl_session_tickets","defaultValue":"ssl_session_tickets on;","syntax":"ssl_session_tickets on | off;","context":"mail, server","description":"<p>This directive appeared in version 1.5.9.\n            </p></div><p>\nEnables or disables session resumption through\n<a href=\"https://tools.ietf.org/html/rfc5077\">TLS session tickets</a>.\n</p>"},{"directive":"ssl_session_tickets","defaultValue":"ssl_session_tickets on;","syntax":"ssl_session_tickets on | off;","context":"http, server","description":"<p>This directive appeared in version 1.5.9.\n            </p></div><p>\nEnables or disables session resumption through\n<a href=\"https://tools.ietf.org/html/rfc5077\">TLS session tickets</a>.\n</p>"},{"directive":"ssl_session_ticket_key","defaultValue":"—","syntax":"ssl_session_ticket_key file;","context":"stream, server","description":"<p>\nSets a <code><i>file</i></code> with the secret key used to encrypt\nand decrypt TLS session tickets.\nThe directive is necessary if the same key has to be shared between\nmultiple servers.\nBy default, a randomly generated key is used.\n</p><p>\nIf several keys are specified, only the first key is\nused to encrypt TLS session tickets.\nThis allows configuring key rotation, for example:\n</p> <blockquote class=\"example\"><pre>\nssl_session_ticket_key current.key;\nssl_session_ticket_key previous.key;\n</pre></blockquote><p> \n</p><p>\nThe <code><i>file</i></code> must contain 80 or 48 bytes\nof random data and can be created using the following command:\n</p> <blockquote class=\"example\"><pre>\nopenssl rand 80 &gt; ticket.key\n</pre></blockquote><p> \nDepending on the file size either AES256 (for 80-byte keys, 1.11.8)\nor AES128 (for 48-byte keys) is used for encryption.\n</p>"},{"directive":"ssl_session_ticket_key","defaultValue":"—","syntax":"ssl_session_ticket_key file;","context":"mail, server","description":"<p>This directive appeared in version 1.5.7.\n            </p></div><p>\nSets a <code><i>file</i></code> with the secret key used to encrypt\nand decrypt TLS session tickets.\nThe directive is necessary if the same key has to be shared between\nmultiple servers.\nBy default, a randomly generated key is used.\n</p><p>\nIf several keys are specified, only the first key is\nused to encrypt TLS session tickets.\nThis allows configuring key rotation, for example:\n</p> <blockquote class=\"example\"><pre>\nssl_session_ticket_key current.key;\nssl_session_ticket_key previous.key;\n</pre></blockquote><p> \n</p><p>\nThe <code><i>file</i></code> must contain 80 or 48 bytes\nof random data and can be created using the following command:\n</p> <blockquote class=\"example\"><pre>\nopenssl rand 80 &gt; ticket.key\n</pre></blockquote><p> \nDepending on the file size either AES256 (for 80-byte keys, 1.11.8)\nor AES128 (for 48-byte keys) is used for encryption.\n</p>"},{"directive":"ssl_session_ticket_key","defaultValue":"—","syntax":"ssl_session_ticket_key file;","context":"http, server","description":"<p>This directive appeared in version 1.5.7.\n            </p></div><p>\nSets a <code><i>file</i></code> with the secret key used to encrypt\nand decrypt TLS session tickets.\nThe directive is necessary if the same key has to be shared between\nmultiple servers.\nBy default, a randomly generated key is used.\n</p><p>\nIf several keys are specified, only the first key is\nused to encrypt TLS session tickets.\nThis allows configuring key rotation, for example:\n</p> <blockquote class=\"example\"><pre>\nssl_session_ticket_key current.key;\nssl_session_ticket_key previous.key;\n</pre></blockquote><p> \n</p><p>\nThe <code><i>file</i></code> must contain 80 or 48 bytes\nof random data and can be created using the following command:\n</p> <blockquote class=\"example\"><pre>\nopenssl rand 80 &gt; ticket.key\n</pre></blockquote><p> \nDepending on the file size either AES256 (for 80-byte keys, 1.11.8)\nor AES128 (for 48-byte keys) is used for encryption.\n</p>"},{"directive":"ssl_session_cache","defaultValue":"ssl_session_cache none;","syntax":"ssl_session_cache     off |    none |    [builtin[:size]]    [shared:name:size];","context":"stream, server","description":"<p>\nSets the types and sizes of caches that store session parameters.\nA cache can be of any of the following types:\n</p> <dl class=\"compact\">\n\n<dt><code>off</code></dt>\n<dd>\nthe use of a session cache is strictly prohibited:\nnginx explicitly tells a client that sessions may not be reused.\n</dd>\n\n<dt><code>none</code></dt>\n<dd>\nthe use of a session cache is gently disallowed:\nnginx tells a client that sessions may be reused, but does not\nactually store session parameters in the cache.\n</dd>\n\n<dt><code>builtin</code></dt>\n<dd>\na cache built in OpenSSL; used by one worker process only.\nThe cache size is specified in sessions.\nIf size is not given, it is equal to 20480 sessions.\nUse of the built-in cache can cause memory fragmentation.\n</dd>\n\n<dt><code>shared</code></dt>\n<dd>\na cache shared between all worker processes.\nThe cache size is specified in bytes; one megabyte can store\nabout 4000 sessions.\nEach shared cache should have an arbitrary name.\nA cache with the same name can be used in several\nservers.\n</dd>\n\n</dl><p> \n</p><p>\nBoth cache types can be used simultaneously, for example:\n</p> <blockquote class=\"example\"><pre>\nssl_session_cache builtin:1000 shared:SSL:10m;\n</pre></blockquote><p> \nbut using only shared cache without the built-in cache should\nbe more efficient.\n</p>"},{"directive":"ssl_session_cache","defaultValue":"ssl_session_cache none;","syntax":"ssl_session_cache     off |    none |    [builtin[:size]]    [shared:name:size];","context":"mail, server","description":"<p>\nSets the types and sizes of caches that store session parameters.\nA cache can be of any of the following types:\n</p> <dl class=\"compact\">\n\n<dt><code>off</code></dt>\n<dd>\nthe use of a session cache is strictly prohibited:\nnginx explicitly tells a client that sessions may not be reused.\n</dd>\n\n<dt><code>none</code></dt>\n<dd>\nthe use of a session cache is gently disallowed:\nnginx tells a client that sessions may be reused, but does not\nactually store session parameters in the cache.\n</dd>\n\n<dt><code>builtin</code></dt>\n<dd>\na cache built in OpenSSL; used by one worker process only.\nThe cache size is specified in sessions.\nIf size is not given, it is equal to 20480 sessions.\nUse of the built-in cache can cause memory fragmentation.\n</dd>\n\n<dt><code>shared</code></dt>\n<dd>\na cache shared between all worker processes.\nThe cache size is specified in bytes; one megabyte can store\nabout 4000 sessions.\nEach shared cache should have an arbitrary name.\nA cache with the same name can be used in several\nservers.\n</dd>\n\n</dl><p> \n</p><p>\nBoth cache types can be used simultaneously, for example:\n</p> <blockquote class=\"example\"><pre>\nssl_session_cache builtin:1000 shared:SSL:10m;\n</pre></blockquote><p> \nbut using only shared cache without the built-in cache should\nbe more efficient.\n</p>"},{"directive":"ssl_session_cache","defaultValue":"ssl_session_cache none;","syntax":"ssl_session_cache     off |    none |    [builtin[:size]]    [shared:name:size];","context":"http, server","description":"<p>\nSets the types and sizes of caches that store session parameters.\nA cache can be of any of the following types:\n</p> <dl class=\"compact\">\n\n<dt><code>off</code></dt>\n<dd>\nthe use of a session cache is strictly prohibited:\nnginx explicitly tells a client that sessions may not be reused.\n</dd>\n\n<dt><code>none</code></dt>\n<dd>\nthe use of a session cache is gently disallowed:\nnginx tells a client that sessions may be reused, but does not\nactually store session parameters in the cache.\n</dd>\n\n<dt><code>builtin</code></dt>\n<dd>\na cache built in OpenSSL; used by one worker process only.\nThe cache size is specified in sessions.\nIf size is not given, it is equal to 20480 sessions.\nUse of the built-in cache can cause memory fragmentation.\n</dd>\n\n<dt><code>shared</code></dt>\n<dd>\na cache shared between all worker processes.\nThe cache size is specified in bytes; one megabyte can store\nabout 4000 sessions.\nEach shared cache should have an arbitrary name.\nA cache with the same name can be used in several virtual servers.\n</dd>\n\n</dl><p> \n</p><p>\nBoth cache types can be used simultaneously, for example:\n</p> <blockquote class=\"example\"><pre>\nssl_session_cache builtin:1000 shared:SSL:10m;\n</pre></blockquote><p> \nbut using only shared cache without the built-in cache should\nbe more efficient.\n</p>"},{"directive":"ssl_protocols","defaultValue":"ssl_protocols TLSv1 TLSv1.1 TLSv1.2;","syntax":"ssl_protocols     [SSLv2]    [SSLv3]    [TLSv1]    [TLSv1.1]    [TLSv1.2]    [TLSv1.3];","context":"stream, server","description":"<p>\nEnables the specified protocols.\n</p> <blockquote class=\"note\">\nThe <code>TLSv1.1</code> and <code>TLSv1.2</code> parameters work\nonly when OpenSSL 1.0.1 or higher is used.\n</blockquote><p> \n</p> <blockquote class=\"note\">\nThe <code>TLSv1.3</code> parameter (1.13.0) works only when\nOpenSSL 1.1.1 built with TLSv1.3 support is used.\n</blockquote><p> \n</p>"},{"directive":"ssl_protocols","defaultValue":"ssl_protocols TLSv1 TLSv1.1 TLSv1.2;","syntax":"ssl_protocols     [SSLv2]    [SSLv3]    [TLSv1]    [TLSv1.1]    [TLSv1.2]    [TLSv1.3];","context":"mail, server","description":"<p>\nEnables the specified protocols.\n</p> <blockquote class=\"note\">\nThe <code>TLSv1.1</code> and <code>TLSv1.2</code> parameters\n(1.1.13, 1.0.12) work only when OpenSSL 1.0.1 or higher is used.\n</blockquote><p> \n</p> <blockquote class=\"note\">\nThe <code>TLSv1.3</code> parameter (1.13.0) works only when\nOpenSSL 1.1.1 built with TLSv1.3 support is used.\n</blockquote><p> \n</p>"},{"directive":"ssl_protocols","defaultValue":"ssl_protocols TLSv1 TLSv1.1 TLSv1.2;","syntax":"ssl_protocols     [SSLv2]    [SSLv3]    [TLSv1]    [TLSv1.1]    [TLSv1.2]    [TLSv1.3];","context":"http, server","description":"<p>\nEnables the specified protocols.\n</p> <blockquote class=\"note\">\nThe <code>TLSv1.1</code> and <code>TLSv1.2</code> parameters\n(1.1.13, 1.0.12) work only when OpenSSL 1.0.1 or higher is used.\n</blockquote><p> \n</p> <blockquote class=\"note\">\nThe <code>TLSv1.3</code> parameter (1.13.0) works only when\nOpenSSL 1.1.1 built with TLSv1.3 support is used.\n</blockquote><p> \n</p>"},{"directive":"ssl_preread","defaultValue":"ssl_preread off;","syntax":"ssl_preread on | off;","context":"stream, server","description":"<p>\nEnables extracting information from the ClientHello message at\nthe <a href=\"stream_processing.html#preread_phase\">preread</a> phase.\n</p>"},{"directive":"ssl_prefer_server_ciphers","defaultValue":"ssl_prefer_server_ciphers off;","syntax":"ssl_prefer_server_ciphers on | off;","context":"stream, server","description":"<p>\nSpecifies that server ciphers should be preferred over client ciphers\nwhen the SSLv3 and TLS protocols are used.\n</p>"},{"directive":"ssl_prefer_server_ciphers","defaultValue":"ssl_prefer_server_ciphers off;","syntax":"ssl_prefer_server_ciphers on | off;","context":"mail, server","description":"<p>\nSpecifies that server ciphers should be preferred over client ciphers\nwhen the SSLv3 and TLS protocols are used.\n</p>"},{"directive":"ssl_prefer_server_ciphers","defaultValue":"ssl_prefer_server_ciphers off;","syntax":"ssl_prefer_server_ciphers on | off;","context":"http, server","description":"<p>\nSpecifies that server ciphers should be preferred over client\nciphers when using the SSLv3 and TLS protocols.\n</p>"},{"directive":"ssl_password_file","defaultValue":"—","syntax":"ssl_password_file file;","context":"stream, server","description":"<p>\nSpecifies a <code><i>file</i></code> with passphrases for\n<a href=\"#ssl_certificate_key\">secret keys</a>\nwhere each passphrase is specified on a separate line.\nPassphrases are tried in turn when loading the key.\n</p><p>\nExample:\n</p> <blockquote class=\"example\"><pre>\nstream {\n    ssl_password_file /etc/keys/global.pass;\n    ...\n\n    server {\n        listen 127.0.0.1:12345;\n        ssl_certificate_key /etc/keys/first.key;\n    }\n\n    server {\n        listen 127.0.0.1:12346;\n\n        # named pipe can also be used instead of a file\n        ssl_password_file /etc/keys/fifo;\n        ssl_certificate_key /etc/keys/second.key;\n    }\n}\n</pre></blockquote><p> \n</p>"},{"directive":"ssl_password_file","defaultValue":"—","syntax":"ssl_password_file file;","context":"mail, server","description":"<p>This directive appeared in version 1.7.3.\n            </p></div><p>\nSpecifies a <code><i>file</i></code> with passphrases for\n<a href=\"#ssl_certificate_key\">secret keys</a>\nwhere each passphrase is specified on a separate line.\nPassphrases are tried in turn when loading the key.\n</p><p>\nExample:\n</p> <blockquote class=\"example\"><pre>\nmail {\n    ssl_password_file /etc/keys/global.pass;\n    ...\n\n    server {\n        server_name mail1.example.com;\n        ssl_certificate_key /etc/keys/first.key;\n    }\n\n    server {\n        server_name mail2.example.com;\n\n        # named pipe can also be used instead of a file\n        ssl_password_file /etc/keys/fifo;\n        ssl_certificate_key /etc/keys/second.key;\n    }\n}\n</pre></blockquote><p> \n</p>"},{"directive":"ssl_password_file","defaultValue":"—","syntax":"ssl_password_file file;","context":"http, server","description":"<p>This directive appeared in version 1.7.3.\n            </p></div><p>\nSpecifies a <code><i>file</i></code> with passphrases for\n<a href=\"#ssl_certificate_key\">secret keys</a>\nwhere each passphrase is specified on a separate line.\nPassphrases are tried in turn when loading the key.\n</p><p>\nExample:\n</p> <blockquote class=\"example\"><pre>\nhttp {\n    ssl_password_file /etc/keys/global.pass;\n    ...\n\n    server {\n        server_name www1.example.com;\n        ssl_certificate_key /etc/keys/first.key;\n    }\n\n    server {\n        server_name www2.example.com;\n\n        # named pipe can also be used instead of a file\n        ssl_password_file /etc/keys/fifo;\n        ssl_certificate_key /etc/keys/second.key;\n    }\n}\n</pre></blockquote><p> \n</p>"},{"directive":"ssl_handshake_timeout","defaultValue":"ssl_handshake_timeout 60s;","syntax":"ssl_handshake_timeout time;","context":"stream, server","description":"<p>\nSpecifies a timeout for the SSL handshake to complete.\n</p>"},{"directive":"ssl_engine","defaultValue":"—","syntax":"ssl_engine device;","context":"main","description":"<p>\nDefines the name of the hardware SSL accelerator.\n</p>"},{"directive":"ssl_ecdh_curve","defaultValue":"ssl_ecdh_curve auto;","syntax":"ssl_ecdh_curve curve;","context":"stream, server","description":"<p>\nSpecifies a <code><i>curve</i></code> for ECDHE ciphers.\n</p><p>\nWhen using OpenSSL 1.0.2 or higher,\nit is possible to specify multiple curves (1.11.0), for example:\n</p> <blockquote class=\"example\"><pre>\nssl_ecdh_curve prime256v1:secp384r1;\n</pre></blockquote><p> \n</p><p>\nThe special value <code>auto</code> (1.11.0) instructs nginx to use\na list built into the OpenSSL library when using OpenSSL 1.0.2 or higher,\nor <code>prime256v1</code> with older versions.\n</p><p>\n</p> <blockquote class=\"note\">\nPrior to version 1.11.0,\nthe <code>prime256v1</code> curve was used by default.\n</blockquote><p> \n</p>"},{"directive":"ssl_ecdh_curve","defaultValue":"ssl_ecdh_curve auto;","syntax":"ssl_ecdh_curve curve;","context":"mail, server","description":"<p>\n                    This directive appeared in versions 1.1.0 and 1.0.6.\n                    \n                        </p>\n                    </div><p>\nSpecifies a <code><i>curve</i></code> for ECDHE ciphers.\n</p><p>\nWhen using OpenSSL 1.0.2 or higher,\nit is possible to specify multiple curves (1.11.0), for example:\n</p> <blockquote class=\"example\"><pre>\nssl_ecdh_curve prime256v1:secp384r1;\n</pre></blockquote><p> \n</p><p>\nThe special value <code>auto</code> (1.11.0) instructs nginx to use\na list built into the OpenSSL library when using OpenSSL 1.0.2 or higher,\nor <code>prime256v1</code> with older versions.\n</p><p>\n</p> <blockquote class=\"note\">\nPrior to version 1.11.0,\nthe <code>prime256v1</code> curve was used by default.\n</blockquote><p> \n</p>"},{"directive":"ssl_ecdh_curve","defaultValue":"ssl_ecdh_curve auto;","syntax":"ssl_ecdh_curve curve;","context":"http, server","description":"<p>\n                    This directive appeared in versions 1.1.0 and 1.0.6.\n                    \n                        </p>\n                    </div><p>\nSpecifies a <code><i>curve</i></code> for ECDHE ciphers.\n</p><p>\nWhen using OpenSSL 1.0.2 or higher,\nit is possible to specify multiple curves (1.11.0), for example:\n</p> <blockquote class=\"example\"><pre>\nssl_ecdh_curve prime256v1:secp384r1;\n</pre></blockquote><p> \n</p><p>\nThe special value <code>auto</code> (1.11.0) instructs nginx to use\na list built into the OpenSSL library when using OpenSSL 1.0.2 or higher,\nor <code>prime256v1</code> with older versions.\n</p><p>\n</p> <blockquote class=\"note\">\nPrior to version 1.11.0,\nthe <code>prime256v1</code> curve was used by default.\n</blockquote><p> \n</p>"},{"directive":"ssl_dhparam","defaultValue":"—","syntax":"ssl_dhparam file;","context":"stream, server","description":"<p>\nSpecifies a <code><i>file</i></code> with DH parameters for DHE ciphers.\n</p>"},{"directive":"ssl_dhparam","defaultValue":"—","syntax":"ssl_dhparam file;","context":"mail, server","description":"<p>This directive appeared in version 0.7.2.\n            </p></div><p>\nSpecifies a <code><i>file</i></code> with DH parameters for DHE ciphers.\n</p>"},{"directive":"ssl_dhparam","defaultValue":"—","syntax":"ssl_dhparam file;","context":"http, server","description":"<p>This directive appeared in version 0.7.2.\n            </p></div><p>\nSpecifies a <code><i>file</i></code> with DH parameters for DHE ciphers.\n</p>"},{"directive":"ssl_crl","defaultValue":"—","syntax":"ssl_crl file;","context":"stream, server","description":"<p>This directive appeared in version 1.11.8.\n            </p></div><p>\nSpecifies a <code><i>file</i></code> with revoked certificates (CRL)\nin the PEM format used to <a href=\"#ssl_verify_client\">verify</a>\nclient certificates.\n</p>"},{"directive":"ssl_crl","defaultValue":"—","syntax":"ssl_crl file;","context":"mail, server","description":"<p>This directive appeared in version 1.7.11.\n            </p></div><p>\nSpecifies a <code><i>file</i></code> with revoked certificates (CRL)\nin the PEM format used to <a href=\"#ssl_verify_client\">verify</a>\nclient certificates.\n</p>"},{"directive":"ssl_crl","defaultValue":"—","syntax":"ssl_crl file;","context":"http, server","description":"<p>This directive appeared in version 0.8.7.\n            </p></div><p>\nSpecifies a <code><i>file</i></code> with revoked certificates (CRL)\nin the PEM format used to <a href=\"#ssl_verify_client\">verify</a>\nclient certificates.\n</p>"},{"directive":"ssl_client_certificate","defaultValue":"—","syntax":"ssl_client_certificate file;","context":"stream, server","description":"<p>This directive appeared in version 1.11.8.\n            </p></div><p>\nSpecifies a <code><i>file</i></code> with trusted CA certificates in the PEM format\nused to <a href=\"#ssl_verify_client\">verify</a> client certificates.\n</p><p>\nThe list of certificates will be sent to clients.\nIf this is not desired, the <a href=\"#ssl_trusted_certificate\">ssl_trusted_certificate</a>\ndirective can be used.\n</p>"},{"directive":"ssl_client_certificate","defaultValue":"—","syntax":"ssl_client_certificate file;","context":"mail, server","description":"<p>This directive appeared in version 1.7.11.\n            </p></div><p>\nSpecifies a <code><i>file</i></code> with trusted CA certificates in the PEM format\nused to <a href=\"#ssl_verify_client\">verify</a> client certificates.\n</p><p>\nThe list of certificates will be sent to clients.\nIf this is not desired, the <a href=\"#ssl_trusted_certificate\">ssl_trusted_certificate</a>\ndirective can be used.\n</p>"},{"directive":"ssl_client_certificate","defaultValue":"—","syntax":"ssl_client_certificate file;","context":"http, server","description":"<p>\nSpecifies a <code><i>file</i></code> with trusted CA certificates in the PEM format\nused to <a href=\"#ssl_verify_client\">verify</a> client certificates and\nOCSP responses if <a href=\"#ssl_stapling\">ssl_stapling</a> is enabled.\n</p><p>\nThe list of certificates will be sent to clients.\nIf this is not desired, the <a href=\"#ssl_trusted_certificate\">ssl_trusted_certificate</a>\ndirective can be used.\n</p>"},{"directive":"ssl_ciphers","defaultValue":"ssl_ciphers HIGH:!aNULL:!MD5;","syntax":"ssl_ciphers ciphers;","context":"stream, server","description":"<p>\nSpecifies the enabled ciphers.\nThe ciphers are specified in the format understood by the\nOpenSSL library, for example:\n</p> <blockquote class=\"example\"><pre>\nssl_ciphers ALL:!aNULL:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;\n</pre></blockquote><p> \n</p><p>\nThe full list can be viewed using the\n“<code>openssl ciphers</code>” command.\n</p>"},{"directive":"ssl_ciphers","defaultValue":"ssl_ciphers HIGH:!aNULL:!MD5;","syntax":"ssl_ciphers ciphers;","context":"mail, server","description":"<p>\nSpecifies the enabled ciphers.\nThe ciphers are specified in the format understood by the\nOpenSSL library, for example:\n</p> <blockquote class=\"example\"><pre>\nssl_ciphers ALL:!aNULL:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;\n</pre></blockquote><p> \n</p><p>\nThe full list can be viewed using the\n“<code>openssl ciphers</code>” command.\n</p><p>\n</p> <blockquote class=\"note\">\nThe previous versions of nginx used\n<a href=\"../http/configuring_https_servers.html#compatibility\">different</a>\nciphers by default.\n</blockquote><p> \n</p>"},{"directive":"ssl_ciphers","defaultValue":"ssl_ciphers HIGH:!aNULL:!MD5;","syntax":"ssl_ciphers ciphers;","context":"http, server","description":"<p>\nSpecifies the enabled ciphers.\nThe ciphers are specified in the format understood by the\nOpenSSL library, for example:\n</p> <blockquote class=\"example\"><pre>\nssl_ciphers ALL:!aNULL:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;\n</pre></blockquote><p> \n</p><p>\nThe full list can be viewed using the\n“<code>openssl ciphers</code>” command.\n</p><p>\n</p> <blockquote class=\"note\">\nThe previous versions of nginx used\n<a href=\"configuring_https_servers.html#compatibility\">different</a>\nciphers by default.\n</blockquote><p> \n</p>"},{"directive":"ssl_certificate_key","defaultValue":"—","syntax":"ssl_certificate_key file;","context":"stream, server","description":"<p>\nSpecifies a <code><i>file</i></code> with the secret key in the PEM format\nfor the given server.\n</p><p>\nThe value\n<code>engine</code>:<code><i>name</i></code>:<code><i>id</i></code>\ncan be specified instead of the <code><i>file</i></code>,\nwhich loads a secret key with a specified <code><i>id</i></code>\nfrom the OpenSSL engine <code><i>name</i></code>.\n</p>"},{"directive":"ssl_certificate_key","defaultValue":"—","syntax":"ssl_certificate_key file;","context":"mail, server","description":"<p>\nSpecifies a <code><i>file</i></code> with the secret key in the PEM format\nfor the given server.\n</p><p>\nThe value\n<code>engine</code>:<code><i>name</i></code>:<code><i>id</i></code>\ncan be specified instead of the <code><i>file</i></code> (1.7.9),\nwhich loads a secret key with a specified <code><i>id</i></code>\nfrom the OpenSSL engine <code><i>name</i></code>.\n</p>"},{"directive":"ssl_certificate_key","defaultValue":"—","syntax":"ssl_certificate_key file;","context":"http, server","description":"<p>\nSpecifies a <code><i>file</i></code> with the secret key in the PEM format\nfor the given virtual server.\n</p><p>\nThe value\n<code>engine</code>:<code><i>name</i></code>:<code><i>id</i></code>\ncan be specified instead of the <code><i>file</i></code> (1.7.9),\nwhich loads a secret key with a specified <code><i>id</i></code>\nfrom the OpenSSL engine <code><i>name</i></code>.\n</p>"},{"directive":"ssl_certificate","defaultValue":"—","syntax":"ssl_certificate file;","context":"stream, server","description":"<p>\nSpecifies a <code><i>file</i></code> with the certificate in the PEM format\nfor the given server.\nIf intermediate certificates should be specified in addition to a primary\ncertificate, they should be specified in the same file in the following\norder: the primary certificate comes first, then the intermediate certificates.\nA secret key in the PEM format may be placed in the same file.\n</p><p>\nSince version 1.11.0,\nthis directive can be specified multiple times\nto load certificates of different types, for example, RSA and ECDSA:\n</p> <blockquote class=\"example\"><pre>\nserver {\n    listen              12345 ssl;\n\n    ssl_certificate     example.com.rsa.crt;\n    ssl_certificate_key example.com.rsa.key;\n\n    ssl_certificate     example.com.ecdsa.crt;\n    ssl_certificate_key example.com.ecdsa.key;\n\n    ...\n}\n</pre></blockquote><p> \n</p> <blockquote class=\"note\">\nOnly OpenSSL 1.0.2 or higher supports separate certificate chains\nfor different certificates.\nWith older versions, only one certificate chain can be used.\n</blockquote><p> \n</p>"},{"directive":"ssl_certificate","defaultValue":"—","syntax":"ssl_certificate file;","context":"mail, server","description":"<p>\nSpecifies a <code><i>file</i></code> with the certificate in the PEM format\nfor the given server.\nIf intermediate certificates should be specified in addition to a primary\ncertificate, they should be specified in the same file in the following\norder: the primary certificate comes first, then the intermediate certificates.\nA secret key in the PEM format may be placed in the same file.\n</p><p>\nSince version 1.11.0,\nthis directive can be specified multiple times\nto load certificates of different types, for example, RSA and ECDSA:\n</p> <blockquote class=\"example\"><pre>\nserver {\n    listen              993 ssl;\n\n    ssl_certificate     example.com.rsa.crt;\n    ssl_certificate_key example.com.rsa.key;\n\n    ssl_certificate     example.com.ecdsa.crt;\n    ssl_certificate_key example.com.ecdsa.key;\n\n    ...\n}\n</pre></blockquote><p> \n</p> <blockquote class=\"note\">\nOnly OpenSSL 1.0.2 or higher supports separate certificate chains\nfor different certificates.\nWith older versions, only one certificate chain can be used.\n</blockquote><p> \n</p>"},{"directive":"ssl_certificate","defaultValue":"—","syntax":"ssl_certificate file;","context":"http, server","description":"<p>\nSpecifies a <code><i>file</i></code> with the certificate in the PEM format\nfor the given virtual server.\nIf intermediate certificates should be specified in addition to a primary\ncertificate, they should be specified in the same file in the following\norder: the primary certificate comes first, then the intermediate certificates.\nA secret key in the PEM format may be placed in the same file.\n</p><p>\nSince version 1.11.0,\nthis directive can be specified multiple times\nto load certificates of different types, for example, RSA and ECDSA:\n</p> <blockquote class=\"example\"><pre>\nserver {\n    listen              443 ssl;\n    server_name         example.com;\n\n    ssl_certificate     example.com.rsa.crt;\n    ssl_certificate_key example.com.rsa.key;\n\n    ssl_certificate     example.com.ecdsa.crt;\n    ssl_certificate_key example.com.ecdsa.key;\n\n    ...\n}\n</pre></blockquote><p> \n</p> <blockquote class=\"note\">\nOnly OpenSSL 1.0.2 or higher supports separate\n<a href=\"configuring_https_servers.html#chains\">certificate chains</a>\nfor different certificates.\nWith older versions, only one certificate chain can be used.\n</blockquote><p> \n</p><p>\nIt should be kept in mind that due to the HTTPS protocol limitations\nvirtual servers should listen on different IP addresses:\n</p> <blockquote class=\"example\"><pre>\nserver {\n    listen          192.168.1.1:443;\n    server_name     one.example.com;\n    ssl_certificate one.example.com.crt;\n    ...\n}\n\nserver {\n    listen          192.168.1.2:443;\n    server_name     two.example.com;\n    ssl_certificate two.example.com.crt;\n    ...\n}\n</pre></blockquote><p> \notherwise\n<a href=\"configuring_https_servers.html#name_based_https_servers\">the first server’s certificate</a>\nwill be issued for the second site.\n</p>"},{"directive":"ssl_buffer_size","defaultValue":"ssl_buffer_size 16k;","syntax":"ssl_buffer_size size;","context":"http, server","description":"<p>This directive appeared in version 1.5.9.\n            </p></div><p>\nSets the size of the buffer used for sending data.\n</p><p>\nBy default, the buffer size is 16k, which corresponds to minimal\noverhead when sending big responses.\nTo minimize Time To First Byte it may be beneficial to use smaller values,\nfor example:\n</p> <blockquote class=\"example\"><pre>\nssl_buffer_size 4k;\n</pre></blockquote><p> \n</p>"},{"directive":"ssl","defaultValue":"ssl off;","syntax":"ssl on | off;","context":"mail, server","description":"<p>\nEnables the SSL/TLS protocol for the given server.\n</p>"},{"directive":"ssl","defaultValue":"ssl off;","syntax":"ssl on | off;","context":"http, server","description":"<p>\nEnables the HTTPS protocol for the given virtual server.\n</p> <blockquote class=\"note\">\nIt is recommended to use the <code>ssl</code> parameter of the\n<a href=\"ngx_http_core_module.html#listen\">listen</a> directive instead\nof this directive.\n</blockquote><p> \n</p>"},{"directive":"ssi_value_length","defaultValue":"ssi_value_length 256;","syntax":"ssi_value_length length;","context":"http, server, location","description":"<p>\nSets the maximum length of parameter values in SSI commands.\n</p>"},{"directive":"ssi_types","defaultValue":"ssi_types text/html;","syntax":"ssi_types mime-type ...;","context":"http, server, location","description":"<p>\nEnables processing of SSI commands in responses with the specified MIME types\nin addition to “<code>text/html</code>”.\nThe special value “<code>*</code>” matches any MIME type (0.8.29).\n</p>"},{"directive":"ssi_silent_errors","defaultValue":"ssi_silent_errors off;","syntax":"ssi_silent_errors on | off;","context":"http, server, location","description":"<p>\nIf enabled, suppresses the output of the\n“<code>[an error occurred while processing the directive]</code>”\nstring if an error occurred during SSI processing.\n</p>"},{"directive":"ssi_min_file_chunk","defaultValue":"ssi_min_file_chunk 1k;","syntax":"ssi_min_file_chunk size;","context":"http, server, location","description":"<p>\nSets the minimum <code><i>size</i></code> for parts of a response stored on disk,\nstarting from which it makes sense to send them using\n<a href=\"ngx_http_core_module.html#sendfile\">sendfile</a>.\n</p>"},{"directive":"ssi_last_modified","defaultValue":"ssi_last_modified off;","syntax":"ssi_last_modified on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.5.1.\n            </p></div><p>\nAllows preserving the “Last-Modified” header field\nfrom the original response during SSI processing\nto facilitate response caching.\n</p><p>\nBy default, the header field is removed as contents of the response\nare modified during processing and may contain dynamically generated elements\nor parts that are changed independently of the original response.\n</p>"},{"directive":"ssi","defaultValue":"ssi off;","syntax":"ssi on | off;","context":"http, server, location, if in location","description":"<p>\nEnables or disables processing of SSI commands in responses.\n</p>"},{"directive":"split_clients","defaultValue":"","syntax":"","context":"","description":null},{"directive":"split_clients","defaultValue":"","syntax":"","context":"","description":null},{"directive":"spdy_headers_comp","defaultValue":"spdy_headers_comp 0;","syntax":"spdy_headers_comp level;","context":"http, server","description":"<p>\nSets the header compression <code><i>level</i></code> of a response in a range from\n1 (fastest, less compression) to 9 (slowest, best compression).\nThe special value 0 turns off the header compression.\n</p>"},{"directive":"spdy_chunk_size","defaultValue":"spdy_chunk_size 8k;","syntax":"spdy_chunk_size size;","context":"http, server, location","description":"<p>This directive appeared in version 1.5.9.\n            </p></div><p>\nSets the maximum size of chunks\ninto which the response body is\n<a href=\"http://www.chromium.org/spdy/spdy-protocol/spdy-protocol-draft2#TOC-Data-frames\">\nsliced</a>.\nA too low value results in higher overhead.\nA too high value impairs prioritization due to\n<a href=\"http://en.wikipedia.org/wiki/Head-of-line_blocking\">\nHOL blocking</a>.\n</p>"},{"directive":"source_charset","defaultValue":"","syntax":"","context":"","description":null},{"directive":"smtp_capabilities","defaultValue":"","syntax":"","context":"","description":null},{"directive":"smtp_auth","defaultValue":"smtp_auth login plain;","syntax":"smtp_auth method ...;","context":"mail, server","description":"<p>\nSets permitted methods of\n<a href=\"https://tools.ietf.org/html/rfc2554\">SASL authentication</a>\nfor SMTP clients.\nSupported methods are:\n</p> <dl class=\"compact\">\n\n<dt><code>login</code></dt>\n<dd>\n<a href=\"https://tools.ietf.org/html/draft-murchison-sasl-login-00\">AUTH LOGIN</a>\n</dd>\n\n<dt><code>plain</code></dt>\n<dd>\n<a href=\"https://tools.ietf.org/html/rfc4616\">AUTH PLAIN</a>\n</dd>\n\n<dt><code>cram-md5</code></dt>\n<dd>\n<a href=\"https://tools.ietf.org/html/rfc2195\">AUTH CRAM-MD5</a>.\nIn order for this method to work, the password must be stored unencrypted.\n</dd>\n\n<dt><code>external</code></dt>\n<dd>\n<a href=\"https://tools.ietf.org/html/rfc4422\">AUTH EXTERNAL</a> (1.11.6).\n</dd>\n\n<dt><code>none</code></dt>\n<dd>\nAuthentication is not required.\n</dd>\n\n</dl><p> \n</p>"},{"directive":"slice","defaultValue":"slice 0;","syntax":"slice size;","context":"http, server, location","description":"<p>\nSets the <code><i>size</i></code> of the slice.\nThe zero value disables splitting responses into slices.\nNote that a too low value may result in excessive memory usage\nand opening a large number of files.\n</p><p>\nIn order for a subrequest to return the required range,\nthe <code>$slice_range</code> variable should be\n<a href=\"ngx_http_proxy_module.html#proxy_set_header\">passed</a> to\nthe proxied server as the <code>Range</code> request header field.\nIf\n<a href=\"ngx_http_proxy_module.html#proxy_cache\">caching</a>\nis enabled, <code>$slice_range</code> should be added to the\n<a href=\"ngx_http_proxy_module.html#proxy_cache_key\">cache key</a>\nand caching of responses with 206 status code should be\n<a href=\"ngx_http_proxy_module.html#proxy_cache_valid\">enabled</a>.\n</p>"},{"directive":"set_real_ip_from","defaultValue":"—","syntax":"set_real_ip_from     address |    CIDR |    unix:;","context":"stream, server","description":"<p>\nDefines trusted addresses that are known to send correct\nreplacement addresses.\nIf the special value <code>unix:</code> is specified,\nall UNIX-domain sockets will be trusted.\n</p>"},{"directive":"set_real_ip_from","defaultValue":"—","syntax":"set_real_ip_from     address |    CIDR |    unix:;","context":"http, server, location","description":"<p>\nDefines trusted addresses that are known to send correct\nreplacement addresses.\nIf the special value <code>unix:</code> is specified,\nall UNIX-domain sockets will be trusted.\nTrusted addresses may also be specified using a hostname (1.13.1).\n</p> <blockquote class=\"note\">\nIPv6 addresses are supported starting from versions 1.3.0 and 1.2.1.\n</blockquote><p> \n</p>"},{"directive":"set","defaultValue":"—","syntax":"set $variable value;","context":"server, location, if","description":"<p>\nSets a <code><i>value</i></code> for the specified <code><i>variable</i></code>.\nThe <code><i>value</i></code> can contain text, variables, and their combination.\n</p>"},{"directive":"session_log_zone","defaultValue":"—","syntax":"session_log_zone     path    zone=name:size    [format=format]    [timeout=time]    [id=id]    [md5=md5];","context":"http","description":"<p>\nSets the path to a log file and configures the shared memory zone that is used\nto store currently active sessions.\n</p><p>\nA session is considered active for as long as the time elapsed since\nthe last request in the session does not exceed the specified\n<code>timeout</code> (by default, 30 seconds).\nOnce a session is no longer active, it is written to the log.\n</p><p>\nThe <code>id</code> parameter identifies the\nsession to which a request is mapped.\nThe <code>id</code> parameter is set to the hexadecimal representation\nof an MD5 hash (for example, obtained from a cookie using variables).\nIf this parameter is not specified or does not represent the valid\nMD5 hash, nginx computes the MD5 hash from the value of\nthe <code>md5</code> parameter and creates a new session using this hash.\nBoth the <code>id</code> and <code>md5</code> parameters\ncan contain variables.\n</p><p>\nThe <code>format</code> parameter sets the custom session log\nformat configured by the <a href=\"#session_log_format\">session_log_format</a> directive.\nIf <code>format</code> is not specified, the predefined\n“<code>combined</code>” format is used.\n</p>"},{"directive":"session_log_format","defaultValue":"session_log_format combined \"...\";","syntax":"session_log_format     name    string ...;","context":"http","description":"<p>\nSpecifies the output format of a log.\nThe value of the <code>$body_bytes_sent</code> variable is aggregated across\nall requests in a session.\nThe values of all other variables available for logging correspond to the\nfirst request in a session.\n</p>"},{"directive":"session_log","defaultValue":"session_log off;","syntax":"session_log name | off;","context":"http, server, location","description":"<p>\nEnables the use of the specified session log.\nThe special value <code>off</code> cancels all\n<code>session_log</code> directives inherited from the previous\nconfiguration level.\n</p>"},{"directive":"server_tokens","defaultValue":"server_tokens on;","syntax":"server_tokens     on |    off |    build |    string;","context":"http, server, location","description":"<p>\nEnables or disables emitting nginx version on error pages and in the\n“Server” response header field.\n</p>"},{"directive":"server_names_hash_max_size","defaultValue":"server_names_hash_max_size 512;","syntax":"server_names_hash_max_size size;","context":"http","description":"<p>\nSets the maximum <code><i>size</i></code> of the server names hash tables.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p>"},{"directive":"server_names_hash_bucket_size","defaultValue":"server_names_hash_bucket_size 32|64|128;","syntax":"server_names_hash_bucket_size size;","context":"http","description":"<p>\nSets the bucket size for the server names hash tables.\nThe default value depends on the size of the processor’s cache line.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p>"},{"directive":"server_name_in_redirect","defaultValue":"server_name_in_redirect off;","syntax":"server_name_in_redirect on | off;","context":"http, server, location","description":"<p>\nEnables or disables the use of the primary server name, specified by the\n<a href=\"#server_name\">server_name</a> directive,\nin <a href=\"#absolute_redirect\">absolute</a> redirects issued by nginx.\nWhen the use of the primary server name is disabled, the name from the\n“Host” request header field is used.\nIf this field is not present, the IP address of the server is used.\n</p><p>\nThe use of a port in redirects is controlled by\nthe <a href=\"#port_in_redirect\">port_in_redirect</a> directive.\n</p>"},{"directive":"server_name","defaultValue":"server_name hostname;","syntax":"server_name name;","context":"mail, server","description":"<p>\nSets the server name that is used:\n</p> <ul class=\"compact\">\n\n<li>\nin the initial POP3/SMTP server greeting;\n</li>\n\n<li>\nin the salt during the SASL CRAM-MD5 authentication;\n</li>\n\n<li>\nin the <code>EHLO</code> command when connecting to the SMTP backend,\nif the passing of the\n<a href=\"ngx_mail_proxy_module.html#xclient\">XCLIENT</a> command\nis enabled.\n</li>\n\n</ul><p> \n</p><p>\nIf the directive is not specified, the machine’s hostname is used.\n</p>"},{"directive":"server_name","defaultValue":"server_name \"\";","syntax":"server_name name ...;","context":"server","description":"<p>\nSets names of a virtual server, for example:\n</p> <blockquote class=\"example\"><pre>\nserver {\n    server_name example.com www.example.com;\n}\n</pre></blockquote><p> \n</p><p>\nThe first name becomes the primary server name.\n</p><p>\nServer names can include an asterisk (“<code>*</code>”)\nreplacing the first or last part of a name:\n</p> <blockquote class=\"example\"><pre>\nserver {\n    server_name example.com *.example.com www.example.*;\n}\n</pre></blockquote><p> \nSuch names are called wildcard names.\n</p><p>\nThe first two of the names mentioned above can be combined in one:\n</p> <blockquote class=\"example\"><pre>\nserver {\n    server_name .example.com;\n}\n</pre></blockquote><p> \n</p><p>\nIt is also possible to use regular expressions in server names,\npreceding the name with a tilde (“<code>~</code>”):\n</p> <blockquote class=\"example\"><pre>\nserver {\n    server_name www.example.com ~^www\\d+\\.example\\.com$;\n}\n</pre></blockquote><p> \n</p><p>\nRegular expressions can contain captures (0.7.40) that can later\nbe used in other directives:\n</p> <blockquote class=\"example\"><pre>\nserver {\n    server_name ~^(www\\.)?(.+)$;\n\n    location / {\n        root /sites/$2;\n    }\n}\n\nserver {\n    server_name _;\n\n    location / {\n        root /sites/default;\n    }\n}\n</pre></blockquote><p> \n</p><p>\nNamed captures in regular expressions create variables (0.8.25)\nthat can later be used in other directives:\n</p> <blockquote class=\"example\"><pre>\nserver {\n    server_name ~^(www\\.)?(?&lt;domain&gt;.+)$;\n\n    location / {\n        root /sites/$domain;\n    }\n}\n\nserver {\n    server_name _;\n\n    location / {\n        root /sites/default;\n    }\n}\n</pre></blockquote><p> \n</p><p>\nIf the directive’s parameter is set to “<code>$hostname</code>” (0.9.4), the\nmachine’s hostname is inserted.\n</p><p>\nIt is also possible to specify an empty server name (0.7.11):\n</p> <blockquote class=\"example\"><pre>\nserver {\n    server_name www.example.com \"\";\n}\n</pre></blockquote><p> \nIt allows this server to process requests without the “Host”\nheader field — instead of the default server — for the given address:port pair.\nThis is the default setting.\n</p> <blockquote class=\"note\">\nBefore 0.8.48, the machine’s hostname was used by default.\n</blockquote><p> \n</p><p>\nDuring searching for a virtual server by name,\nif the name matches more than one of the specified variants,\n(e.g. both a wildcard name and regular expression match), the first matching\nvariant will be chosen, in the following order of priority:\n</p> <ol class=\"compact\">\n\n<li>\nthe exact name\n</li>\n\n<li>\nthe longest wildcard name starting with an asterisk,\ne.g. “<code>*.example.com</code>”\n</li>\n\n<li>\nthe longest wildcard name ending with an asterisk,\ne.g. “<code>mail.*</code>”\n</li>\n\n<li>\nthe first matching regular expression\n(in order of appearance in the configuration file)\n</li>\n\n</ol><p> \n</p><p>\nDetailed description of server names is provided in a separate\n<a href=\"server_names.html\">Server names</a> document.\n</p>"},{"directive":"server","defaultValue":"—","syntax":"server address [parameters];","context":"upstream","description":"<p>\nDefines the <code><i>address</i></code> and other <code><i>parameters</i></code>\nof a server.\nThe address can be specified as a domain name or IP address\nwith an obligatory port, or as a UNIX-domain socket path\nspecified after the “<code>unix:</code>” prefix.\nA domain name that resolves to several IP addresses defines\nmultiple servers at once.\n</p><p>\nThe following parameters can be defined:\n</p> <dl class=\"compact\">\n\n<dt id=\"weight\">\n<code>weight</code>=<code><i>number</i></code>\n</dt>\n<dd>\nsets the weight of the server, by default, 1.\n</dd>\n\n<dt id=\"max_conns\">\n<code>max_conns</code>=<code><i>number</i></code>\n</dt>\n<dd>\nlimits the maximum <code><i>number</i></code> of simultaneous\nconnections to the proxied server (1.11.5).\nDefault value is zero, meaning there is no limit.\nIf the server group does not reside in the <a href=\"#zone\">shared memory</a>,\nthe limitation works per each worker process.\n<blockquote class=\"note\">\nPrior to version 1.11.5, this parameter was available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote>\n</dd>\n\n<dt id=\"max_fails\">\n<code>max_fails</code>=<code><i>number</i></code>\n</dt>\n<dd>\nsets the number of unsuccessful attempts to communicate with the server\nthat should happen in the duration set by the <code>fail_timeout</code>\nparameter to consider the server unavailable for a duration also set by the\n<code>fail_timeout</code> parameter.\nBy default, the number of unsuccessful attempts is set to 1.\nThe zero value disables the accounting of attempts.\nHere, an unsuccessful attempt is an error or timeout\nwhile establishing a connection with the server.\n</dd>\n\n<dt id=\"fail_timeout\">\n<code>fail_timeout</code>=<code><i>time</i></code>\n</dt>\n<dd>\nsets\n<ul class=\"compact\">\n\n<li>\nthe time during which the specified number of unsuccessful attempts to\ncommunicate with the server should happen to consider the server unavailable;\n</li>\n\n<li>\nand the period of time the server will be considered unavailable.\n</li>\n\n</ul>\nBy default, the parameter is set to 10 seconds.\n</dd>\n\n<dt id=\"backup\">\n<code>backup</code>\n</dt>\n<dd>\nmarks the server as a backup server.\nConnections to the backup server will be passed\nwhen the primary servers are unavailable.\n</dd>\n\n<dt id=\"down\">\n<code>down</code>\n</dt>\n<dd>\nmarks the server as permanently unavailable.\n</dd>\n\n</dl><p> \n</p><p>\nAdditionally,\nthe following parameters are available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>:\n</p> <dl class=\"compact\">\n\n<dt id=\"resolve\">\n<code>resolve</code>\n</dt>\n<dd>\nmonitors changes of the IP addresses\nthat correspond to a domain name of the server,\nand automatically modifies the upstream configuration\nwithout the need of restarting nginx.\nThe server group must reside in the <a href=\"#zone\">shared memory</a>.\n<p>\nIn order for this parameter to work,\nthe <a href=\"ngx_stream_core_module.html#resolver\">resolver</a> directive\nmust be specified in the\n<a href=\"ngx_stream_core_module.html#stream\">stream</a> block.\nExample:\n</p> <blockquote class=\"example\"><pre>\nstream {\n    resolver 10.0.0.1;\n\n    upstream u {\n        zone ...;\n        ...\n        server example.com:12345 resolve;\n    }\n}\n</pre></blockquote><p> \n</p>\n</dd>\n\n<dt id=\"service\">\n<code>service</code>=<code><i>name</i></code>\n</dt>\n<dd>\nenables resolving of DNS\n<a href=\"https://tools.ietf.org/html/rfc2782\">SRV</a>\nrecords and sets the service <code><i>name</i></code> (1.9.13).\nIn order for this parameter to work, it is necessary to specify\nthe <a href=\"#resolve\">resolve</a> parameter for the server\nand specify a hostname without a port number.\n<p>\nIf the service name does not contain a dot (“<code>.</code>”), then\nthe <a href=\"https://tools.ietf.org/html/rfc2782\">RFC</a>-compliant name\nis constructed\nand the TCP protocol is added to the service prefix.\nFor example, to look up the\n<code>_http._tcp.backend.example.com</code> SRV record,\nit is necessary to specify the directive:\n</p> <blockquote class=\"example\"><pre>\nserver backend.example.com service=http resolve;\n</pre></blockquote><p> \nIf the service name contains one or more dots, then the name is constructed\nby joining the service prefix and the server name.\nFor example, to look up the <code>_http._tcp.backend.example.com</code>\nand <code>server1.backend.example.com</code> SRV records,\nit is necessary to specify the directives:\n</p> <blockquote class=\"example\"><pre>\nserver backend.example.com service=_http._tcp resolve;\nserver example.com service=server1.backend resolve;\n</pre></blockquote><p> \n</p>\n\n<p>\nHighest-priority SRV records\n(records with the same lowest-number priority value)\nare resolved as primary servers,\nthe rest of SRV records are resolved as backup servers.\nIf the <a href=\"#backup\">backup</a> parameter is specified for the server,\nhigh-priority SRV records are resolved as backup servers,\nthe rest of SRV records are ignored.\n</p>\n</dd>\n\n<dt id=\"slow_start\">\n<code>slow_start</code>=<code><i>time</i></code>\n</dt>\n<dd>\nsets the <code><i>time</i></code> during which the server will recover its weight\nfrom zero to a nominal value, when unhealthy server becomes\n<a href=\"ngx_stream_upstream_hc_module.html#health_check\">healthy</a>,\nor when the server becomes available after a period of time\nit was considered <a href=\"#fail_timeout\">unavailable</a>.\nDefault value is zero, i.e. slow start is disabled.\n<blockquote class=\"note\">\nThe parameter cannot be used along with the\n<a href=\"#hash\">hash</a> load balancing method.\n</blockquote>\n</dd>\n\n</dl><p> \n</p><p>\n</p> <blockquote class=\"note\">\nIf there is only a single server in a group, <code>max_fails</code>,\n<code>fail_timeout</code> and <code>slow_start</code> parameters\nare ignored, and such a server will never be considered unavailable.\n</blockquote><p> \n</p>"},{"directive":"server","defaultValue":"—","syntax":"server { ... }","context":"stream","description":"<p>\nSets the configuration for a server.\n</p>"},{"directive":"server","defaultValue":"—","syntax":"server { ... }","context":"mail","description":"<p>\nSets the configuration for a server.\n</p>"},{"directive":"server","defaultValue":"—","syntax":"server address [parameters];","context":"upstream","description":"<p>\nDefines the <code><i>address</i></code> and other <code><i>parameters</i></code>\nof a server.\nThe address can be specified as a domain name or IP address,\nwith an optional port, or as a UNIX-domain socket path\nspecified after the “<code>unix:</code>” prefix.\nIf a port is not specified, the port 80 is used.\nA domain name that resolves to several IP addresses defines\nmultiple servers at once.\n</p><p>\nThe following parameters can be defined:\n</p> <dl class=\"compact\">\n\n<dt id=\"weight\">\n<code>weight</code>=<code><i>number</i></code>\n</dt>\n<dd>\nsets the weight of the server, by default, 1.\n</dd>\n\n<dt id=\"max_conns\">\n<code>max_conns</code>=<code><i>number</i></code>\n</dt>\n<dd>\nlimits the maximum <code><i>number</i></code> of simultaneous active\nconnections to the proxied server (1.11.5).\nDefault value is zero, meaning there is no limit.\nIf the server group does not reside in the <a href=\"#zone\">shared memory</a>,\nthe limitation works per each worker process.\n<blockquote class=\"note\">\nIf <a href=\"#keepalive\">idle keepalive</a> connections,\nmultiple <a href=\"../ngx_core_module.html#worker_processes\">workers</a>,\nand the <a href=\"#zone\">shared memory</a> are enabled,\nthe total number of active and idle connections to the proxied server\nmay exceed the <code>max_conns</code> value.\n</blockquote>\n<blockquote class=\"note\">\nSince version 1.5.9 and prior to version 1.11.5,\nthis parameter was available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote>\n</dd>\n\n<dt id=\"max_fails\">\n<code>max_fails</code>=<code><i>number</i></code>\n</dt>\n<dd>\nsets the number of unsuccessful attempts to communicate with the server\nthat should happen in the duration set by the <code>fail_timeout</code>\nparameter to consider the server unavailable for a duration also set by the\n<code>fail_timeout</code> parameter.\nBy default, the number of unsuccessful attempts is set to 1.\nThe zero value disables the accounting of attempts.\nWhat is considered an unsuccessful attempt is defined by the\n<a href=\"ngx_http_proxy_module.html#proxy_next_upstream\">proxy_next_upstream</a>,\n<a href=\"ngx_http_fastcgi_module.html#fastcgi_next_upstream\">fastcgi_next_upstream</a>,\n<a href=\"ngx_http_uwsgi_module.html#uwsgi_next_upstream\">uwsgi_next_upstream</a>,\n<a href=\"ngx_http_scgi_module.html#scgi_next_upstream\">scgi_next_upstream</a>, and\n<a href=\"ngx_http_memcached_module.html#memcached_next_upstream\">memcached_next_upstream</a>\ndirectives.\n</dd>\n\n<dt id=\"fail_timeout\">\n<code>fail_timeout</code>=<code><i>time</i></code>\n</dt>\n<dd>\nsets\n<ul class=\"compact\">\n\n<li>\nthe time during which the specified number of unsuccessful attempts to\ncommunicate with the server should happen to consider the server unavailable;\n</li>\n\n<li>\nand the period of time the server will be considered unavailable.\n</li>\n\n</ul>\nBy default, the parameter is set to 10 seconds.\n</dd>\n\n<dt id=\"backup\">\n<code>backup</code>\n</dt>\n<dd>\nmarks the server as a backup server.\nIt will be passed requests when the primary servers are unavailable.\n</dd>\n\n<dt id=\"down\">\n<code>down</code>\n</dt>\n<dd>\nmarks the server as permanently unavailable.\n</dd>\n\n</dl><p> \n</p><p>\nAdditionally,\nthe following parameters are available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>:\n</p> <dl class=\"compact\">\n\n<dt id=\"resolve\">\n<code>resolve</code>\n</dt>\n<dd>\nmonitors changes of the IP addresses\nthat correspond to a domain name of the server,\nand automatically modifies the upstream configuration\nwithout the need of restarting nginx (1.5.12).\nThe server group must reside in the <a href=\"#zone\">shared memory</a>.\n<p>\nIn order for this parameter to work,\nthe <a href=\"ngx_http_core_module.html#resolver\">resolver</a> directive\nmust be specified in the\n<a href=\"ngx_http_core_module.html#http\">http</a> block.\nExample:\n</p> <blockquote class=\"example\"><pre>\nhttp {\n    resolver 10.0.0.1;\n\n    upstream u {\n        zone ...;\n        ...\n        server example.com resolve;\n    }\n}\n</pre></blockquote><p> \n</p>\n</dd>\n\n<dt id=\"route\">\n<code>route</code>=<code><i>string</i></code>\n</dt>\n<dd>\nsets the server route name.\n</dd>\n\n<dt id=\"service\">\n<code>service</code>=<code><i>name</i></code>\n</dt>\n<dd>\nenables resolving of DNS\n<a href=\"https://tools.ietf.org/html/rfc2782\">SRV</a>\nrecords and sets the service <code><i>name</i></code> (1.9.13).\nIn order for this parameter to work, it is necessary to specify\nthe <a href=\"#resolve\">resolve</a> parameter for the server\nand specify a hostname without a port number.\n<p>\nIf the service name does not contain a dot (“<code>.</code>”), then\nthe <a href=\"https://tools.ietf.org/html/rfc2782\">RFC</a>-compliant name\nis constructed\nand the TCP protocol is added to the service prefix.\nFor example, to look up the\n<code>_http._tcp.backend.example.com</code> SRV record,\nit is necessary to specify the directive:\n</p> <blockquote class=\"example\"><pre>\nserver backend.example.com service=http resolve;\n</pre></blockquote><p> \nIf the service name contains one or more dots, then the name is constructed\nby joining the service prefix and the server name.\nFor example, to look up the <code>_http._tcp.backend.example.com</code>\nand <code>server1.backend.example.com</code> SRV records,\nit is necessary to specify the directives:\n</p> <blockquote class=\"example\"><pre>\nserver backend.example.com service=_http._tcp resolve;\nserver example.com service=server1.backend resolve;\n</pre></blockquote><p> \n</p>\n\n<p>\nHighest-priority SRV records\n(records with the same lowest-number priority value)\nare resolved as primary servers,\nthe rest of SRV records are resolved as backup servers.\nIf the <a href=\"#backup\">backup</a> parameter is specified for the server,\nhigh-priority SRV records are resolved as backup servers,\nthe rest of SRV records are ignored.\n</p>\n</dd>\n\n<dt id=\"slow_start\">\n<code>slow_start</code>=<code><i>time</i></code>\n</dt>\n<dd>\nsets the <code><i>time</i></code> during which the server will recover its weight\nfrom zero to a nominal value, when unhealthy server becomes\n<a href=\"ngx_http_upstream_hc_module.html#health_check\">healthy</a>,\nor when the server becomes available after a period of time\nit was considered <a href=\"#fail_timeout\">unavailable</a>.\nDefault value is zero, i.e. slow start is disabled.\n<blockquote class=\"note\">\nThe parameter cannot be used along with the\n<a href=\"#hash\">hash</a> and <a href=\"#ip_hash\">ip_hash</a> load balancing methods.\n</blockquote>\n</dd>\n\n</dl><p> \n</p><p>\n</p> <blockquote class=\"note\">\nIf there is only a single server in a group, <code>max_fails</code>,\n<code>fail_timeout</code> and <code>slow_start</code> parameters\nare ignored, and such a server will never be considered unavailable.\n</blockquote><p> \n</p>"},{"directive":"server","defaultValue":"—","syntax":"server { ... }","context":"http","description":"<p>\nSets configuration for a virtual server.\nThere is no clear separation between IP-based (based on the IP address)\nand name-based (based on the “Host” request header field)\nvirtual servers.\nInstead, the <a href=\"#listen\">listen</a> directives describe all\naddresses and ports that should accept connections for the server, and the\n<a href=\"#server_name\">server_name</a> directive lists all server names.\nExample configurations are provided in the\n“<a href=\"request_processing.html\">How nginx processes a request</a>” document.\n</p>"},{"directive":"sendfile_max_chunk","defaultValue":"sendfile_max_chunk 0;","syntax":"sendfile_max_chunk size;","context":"http, server, location","description":"<p>\nWhen set to a non-zero value, limits the amount of data that can be\ntransferred in a single <code>sendfile()</code> call.\nWithout the limit, one fast connection may seize the worker process entirely.\n</p>"},{"directive":"sendfile","defaultValue":"sendfile off;","syntax":"sendfile on | off;","context":"http, server, location, if in location","description":"<p>\nEnables or disables the use of\n<code>sendfile()</code>.\n</p><p>\nStarting from nginx 0.8.12 and FreeBSD 5.2.1,\n<a href=\"#aio\">aio</a> can be used to pre-load data\nfor <code>sendfile()</code>:\n</p> <blockquote class=\"example\"><pre>\nlocation /video/ {\n    sendfile       on;\n    tcp_nopush     on;\n    aio            on;\n}\n</pre></blockquote><p> \nIn this configuration, <code>sendfile()</code> is called with\nthe <code>SF_NODISKIO</code> flag which causes it not to block on disk I/O,\nbut, instead, report back that the data are not in memory.\nnginx then initiates an asynchronous data load by reading one byte.\nOn the first read, the FreeBSD kernel loads the first 128K bytes\nof a file into memory, although next reads will only load data in 16K chunks.\nThis can be changed using the\n<a href=\"#read_ahead\">read_ahead</a> directive.\n</p> <blockquote class=\"note\">\nBefore version 1.7.11, pre-loading could be enabled with\n<code>aio sendfile;</code>.\n</blockquote><p> \n</p>"},{"directive":"send_timeout","defaultValue":"send_timeout 60s;","syntax":"send_timeout time;","context":"http, server, location","description":"<p>\nSets a timeout for transmitting a response to the client.\nThe timeout is set only between two successive write operations,\nnot for the transmission of the whole response.\nIf the client does not receive anything within this time,\nthe connection is closed.\n</p>"},{"directive":"send_lowat","defaultValue":"send_lowat 0;","syntax":"send_lowat size;","context":"http, server, location","description":"<p>\nIf the directive is set to a non-zero value, nginx will try to minimize\nthe number of send operations on client sockets by using either\n<code>NOTE_LOWAT</code> flag of the\n<a href=\"../events.html#kqueue\">kqueue</a> method\nor the <code>SO_SNDLOWAT</code> socket option.\nIn both cases the specified <code><i>size</i></code> is used.\n</p><p>\nThis directive is ignored on Linux, Solaris, and Windows.\n</p>"},{"directive":"secure_link_secret","defaultValue":"—","syntax":"secure_link_secret word;","context":"location","description":"<p>\nDefines a secret <code><i>word</i></code> used to check authenticity\nof requested links.\n</p><p>\nThe full URI of a requested link looks as follows:\n</p> <blockquote class=\"example\"><pre>\n/<code><i>prefix</i></code>/<code><i>hash</i></code>/<code><i>link</i></code>\n</pre></blockquote><p> \nwhere <code><i>hash</i></code> is a hexadecimal representation of the\nMD5 hash computed for the concatenation of the link and secret word,\nand <code><i>prefix</i></code> is an arbitrary string without slashes.\n</p><p>\nIf the requested link passes the authenticity check,\nthe <code>$secure_link</code> variable is set to the link\nextracted from the request URI.\nOtherwise, the <code>$secure_link</code> variable\nis set to an empty string.\n</p><p>\nExample:\n</p> <blockquote class=\"example\"><pre>\nlocation /p/ {\n    secure_link_secret secret;\n\n    if ($secure_link = \"\") {\n        return 403;\n    }\n\n    rewrite ^ /secure/$secure_link;\n}\n\nlocation /secure/ {\n    internal;\n}\n</pre></blockquote><p> \nA request of “<code>/p/5e814704a28d9bc1914ff19fa0c4a00a/link</code>”\nwill be internally redirected to\n“<code>/secure/link</code>”.\n</p><p>\nOn UNIX, the hash value for this example can be obtained as:\n</p> <blockquote class=\"example\"><pre>\necho -n 'linksecret' | openssl md5 -hex\n</pre></blockquote><p> \n</p>"},{"directive":"secure_link_md5","defaultValue":"—","syntax":"secure_link_md5 expression;","context":"http, server, location","description":"<p>\nDefines an expression for which the MD5 hash value will\nbe computed and compared with the value passed in a request.\n</p><p>\nThe expression should contain the secured part of a link (resource)\nand a secret ingredient.\nIf the link has a limited lifetime,\nthe expression should also contain <code>$secure_link_expires</code>.\n</p><p>\nTo prevent unauthorized access, the expression may contain some\ninformation about the client, such as its address and browser version.\n</p><p>\nExample:\n</p> <blockquote class=\"example\"><pre>\nlocation /s/ {\n    secure_link $arg_md5,$arg_expires;\n    secure_link_md5 \"$secure_link_expires$uri$remote_addr secret\";\n\n    if ($secure_link = \"\") {\n        return 403;\n    }\n\n    if ($secure_link = \"0\") {\n        return 410;\n    }\n\n    ...\n}\n</pre></blockquote><p> \nThe\n“<code>/s/link?md5=_e4Nc3iduzkWRm01TBBNYw&amp;expires=2147483647</code>”\nlink\nrestricts access to “<code>/s/link</code>” for the client with the\nIP address 127.0.0.1.\nThe link also has the limited lifetime until January 19, 2038 (GMT).\n</p><p>\nOn UNIX, the <code><i>md5</i></code> request argument value can be obtained as:\n</p> <blockquote class=\"example\"><pre>\necho -n '2147483647/s/link127.0.0.1 secret' | \\\n    openssl md5 -binary | openssl base64 | tr +/ -_ | tr -d =\n</pre></blockquote><p> \n</p>"},{"directive":"secure_link","defaultValue":"—","syntax":"secure_link expression;","context":"http, server, location","description":"<p>\nDefines a string with variables from which the\nchecksum value and lifetime of a link will be extracted.\n</p><p>\nVariables used in an <code><i>expression</i></code> are usually associated\nwith a request; see <a href=\"#secure_link_md5\">example</a> below.\n</p><p>\nThe checksum value extracted from the string is compared with\nthe MD5 hash value of the expression defined by the\n<a href=\"#secure_link_md5\">secure_link_md5</a> directive.\nIf the checksums are different, the <code>$secure_link</code> variable\nis set to an empty string.\nIf the checksums are the same, the link lifetime is checked.\nIf the link has a limited lifetime and the time has expired,\nthe <code>$secure_link</code> variable is set to “<code>0</code>”.\nOtherwise, it is set to “<code>1</code>”.\nThe MD5 hash value passed in a request is encoded in\n<a href=\"https://tools.ietf.org/html/rfc4648#section-5\">base64url</a>.\n</p><p>\nIf a link has a limited lifetime, the expiration time\nis set in seconds since Epoch (Thu, 01 Jan 1970 00:00:00 GMT).\nThe value is specified in the expression after the MD5 hash,\nand is separated by a comma.\nThe expiration time passed in a request is available through\nthe <code>$secure_link_expires</code> variable for a use in\nthe <a href=\"#secure_link_md5\">secure_link_md5</a> directive.\nIf the expiration time is not specified, a link has the unlimited\nlifetime.\n</p>"},{"directive":"scgi_temp_path","defaultValue":"","syntax":"","context":"","description":null},{"directive":"scgi_temp_file_write_size","defaultValue":"scgi_temp_file_write_size 8k|16k;","syntax":"scgi_temp_file_write_size size;","context":"http, server, location","description":"<p>\nLimits the <code><i>size</i></code> of data written to a temporary file\nat a time, when buffering of responses from the SCGI server\nto temporary files is enabled.\nBy default, <code><i>size</i></code> is limited by two buffers set by the\n<a href=\"#scgi_buffer_size\">scgi_buffer_size</a> and <a href=\"#scgi_buffers\">scgi_buffers</a> directives.\nThe maximum size of a temporary file is set by the\n<a href=\"#scgi_max_temp_file_size\">scgi_max_temp_file_size</a> directive.\n</p>"},{"directive":"scgi_store_access","defaultValue":"scgi_store_access user:rw;","syntax":"scgi_store_access users:permissions ...;","context":"http, server, location","description":"<p>\nSets access permissions for newly created files and directories, e.g.:\n</p> <blockquote class=\"example\"><pre>\nscgi_store_access user:rw group:rw all:r;\n</pre></blockquote><p> \n</p><p>\nIf any <code>group</code> or <code>all</code> access permissions\nare specified then <code>user</code> permissions may be omitted:\n</p> <blockquote class=\"example\"><pre>\nscgi_store_access group:rw all:r;\n</pre></blockquote><p> \n</p>"},{"directive":"scgi_store","defaultValue":"scgi_store off;","syntax":"scgi_store     on |    off |    string;","context":"http, server, location","description":"<p>\nEnables saving of files to a disk.\nThe <code>on</code> parameter saves files with paths\ncorresponding to the directives\n<a href=\"ngx_http_core_module.html#alias\">alias</a> or\n<a href=\"ngx_http_core_module.html#root\">root</a>.\nThe <code>off</code> parameter disables saving of files.\nIn addition, the file name can be set explicitly using the\n<code><i>string</i></code> with variables:\n</p> <blockquote class=\"example\"><pre>\nscgi_store /data/www$original_uri;\n</pre></blockquote><p> \n</p><p>\nThe modification time of files is set according to the received\n“Last-Modified” response header field.\nThe response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the persistent store\ncan be put on different file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both saved files and a\ndirectory holding temporary files, set by the <a href=\"#scgi_temp_path\">scgi_temp_path</a>\ndirective, are put on the same file system.\n</p><p>\nThis directive can be used to create local copies of static unchangeable\nfiles, e.g.:\n</p> <blockquote class=\"example\"><pre>\nlocation /images/ {\n    root              /data/www;\n    error_page        404 = /fetch$uri;\n}\n\nlocation /fetch/ {\n    internal;\n\n    scgi_pass         backend:9000;\n    ...\n\n    scgi_store        on;\n    scgi_store_access user:rw group:rw all:r;\n    scgi_temp_path    /data/temp;\n\n    alias             /data/www/;\n}\n</pre></blockquote><p> \n</p>"},{"directive":"scgi_send_timeout","defaultValue":"scgi_send_timeout 60s;","syntax":"scgi_send_timeout time;","context":"http, server, location","description":"<p>\nSets a timeout for transmitting a request to the SCGI server.\nThe timeout is set only between two successive write operations,\nnot for the transmission of the whole request.\nIf the SCGI server does not receive anything within this time,\nthe connection is closed.\n</p>"},{"directive":"scgi_request_buffering","defaultValue":"scgi_request_buffering on;","syntax":"scgi_request_buffering on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.11.\n            </p></div><p>\nEnables or disables buffering of a client request body.\n</p><p>\nWhen buffering is enabled, the entire request body is\n<a href=\"ngx_http_core_module.html#client_body_buffer_size\">read</a>\nfrom the client before sending the request to an SCGI server.\n</p><p>\nWhen buffering is disabled, the request body is sent to the SCGI server\nimmediately as it is received.\nIn this case, the request cannot be passed to the\n<a href=\"#scgi_next_upstream\">next server</a>\nif nginx already started sending the request body.\n</p><p>\nWhen HTTP/1.1 chunked transfer encoding is used\nto send the original request body,\nthe request body will be buffered regardless of the directive value.\n</p>"},{"directive":"scgi_read_timeout","defaultValue":"scgi_read_timeout 60s;","syntax":"scgi_read_timeout time;","context":"http, server, location","description":"<p>\nDefines a timeout for reading a response from the SCGI server.\nThe timeout is set only between two successive read operations,\nnot for the transmission of the whole response.\nIf the SCGI server does not transmit anything within this time,\nthe connection is closed.\n</p>"},{"directive":"scgi_pass_request_headers","defaultValue":"scgi_pass_request_headers on;","syntax":"scgi_pass_request_headers on | off;","context":"http, server, location","description":"<p>\nIndicates whether the header fields of the original request are passed\nto the SCGI server.\nSee also the <a href=\"#scgi_pass_request_body\">scgi_pass_request_body</a> directive.\n</p>"},{"directive":"scgi_pass_request_body","defaultValue":"scgi_pass_request_body on;","syntax":"scgi_pass_request_body on | off;","context":"http, server, location","description":"<p>\nIndicates whether the original request body is passed\nto the SCGI server.\nSee also the <a href=\"#scgi_pass_request_headers\">scgi_pass_request_headers</a> directive.\n</p>"},{"directive":"scgi_pass_header","defaultValue":"—","syntax":"scgi_pass_header field;","context":"http, server, location","description":"<p>\nPermits passing <a href=\"#scgi_hide_header\">otherwise disabled</a> header\nfields from an SCGI server to a client.\n</p>"},{"directive":"scgi_pass","defaultValue":"—","syntax":"scgi_pass address;","context":"location, if in location","description":"<p>\nSets the address of an SCGI server.\nThe address can be specified as a domain name or IP address,\nand a port:\n</p> <blockquote class=\"example\"><pre>\nscgi_pass localhost:9000;\n</pre></blockquote><p> \nor as a UNIX-domain socket path:\n</p> <blockquote class=\"example\"><pre>\nscgi_pass unix:/tmp/scgi.socket;\n</pre></blockquote><p> \n</p><p>\nIf a domain name resolves to several addresses, all of them will be\nused in a round-robin fashion.\nIn addition, an address can be specified as a\n<a href=\"ngx_http_upstream_module.html\">server group</a>.\n</p><p>\nParameter value can contain variables.\nIn this case, if an address is specified as a domain name,\nthe name is searched among the described\n<a href=\"ngx_http_upstream_module.html\">server groups</a>,\nand, if not found, is determined using a\n<a href=\"ngx_http_core_module.html#resolver\">resolver</a>.\n</p>"},{"directive":"scgi_param","defaultValue":"—","syntax":"scgi_param     parameter value    [if_not_empty];","context":"http, server, location","description":"<p>\nSets a <code><i>parameter</i></code> that should be passed to the SCGI server.\nThe <code><i>value</i></code> can contain text, variables, and their combination.\nThese directives are inherited from the previous level if and\nonly if there are no\n<code>scgi_param</code>\ndirectives defined on the current level.\n</p><p>\nStandard\n<a href=\"https://tools.ietf.org/html/rfc3875#section-4.1\">CGI\nenvironment variables</a>\nshould be provided as SCGI headers, see the <code>scgi_params</code> file\nprovided in the distribution:\n</p> <blockquote class=\"example\"><pre>\nlocation / {\n    include scgi_params;\n    ...\n}\n</pre></blockquote><p> \n</p><p>\nIf the directive is specified with <code>if_not_empty</code> (1.1.11) then\nsuch a parameter will not be passed to the server until its value is not empty:\n</p> <blockquote class=\"example\"><pre>\nscgi_param HTTPS $https if_not_empty;\n</pre></blockquote><p> \n</p>"},{"directive":"scgi_no_cache","defaultValue":"—","syntax":"scgi_no_cache string ...;","context":"http, server, location","description":"<p>\nDefines conditions under which the response will not be saved to a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to “0” then the response will not be saved:\n</p> <blockquote class=\"example\"><pre>\nscgi_no_cache $cookie_nocache $arg_nocache$arg_comment;\nscgi_no_cache $http_pragma    $http_authorization;\n</pre></blockquote><p> \nCan be used along with the <a href=\"#scgi_cache_bypass\">scgi_cache_bypass</a> directive.\n</p>"},{"directive":"scgi_next_upstream_tries","defaultValue":"scgi_next_upstream_tries 0;","syntax":"scgi_next_upstream_tries number;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.5.\n            </p></div><p>\nLimits the number of possible tries for passing a request to the\n<a href=\"#scgi_next_upstream\">next server</a>.\nThe <code>0</code> value turns off this limitation.\n</p>"},{"directive":"scgi_next_upstream_timeout","defaultValue":"scgi_next_upstream_timeout 0;","syntax":"scgi_next_upstream_timeout time;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.5.\n            </p></div><p>\nLimits the time during which a request can be passed to the\n<a href=\"#scgi_next_upstream\">next server</a>.\nThe <code>0</code> value turns off this limitation.\n</p>"},{"directive":"scgi_next_upstream","defaultValue":"scgi_next_upstream error timeout;","syntax":"scgi_next_upstream     error |    timeout |    invalid_header |    http_500 |    http_503 |    http_403 |    http_404 |    http_429 |    non_idempotent |    off    ...;","context":"http, server, location","description":"<p>\nSpecifies in which cases a request should be passed to the next server:\n</p> <dl class=\"compact\">\n\n<dt><code>error</code></dt>\n<dd>an error occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;</dd>\n\n<dt><code>timeout</code></dt>\n<dd>a timeout has occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;</dd>\n\n<dt><code>invalid_header</code></dt>\n<dd>a server returned an empty or invalid response;</dd>\n\n<dt><code>http_500</code></dt>\n<dd>a server returned a response with the code 500;</dd>\n\n<dt><code>http_503</code></dt>\n<dd>a server returned a response with the code 503;</dd>\n\n<dt><code>http_403</code></dt>\n<dd>a server returned a response with the code 403;</dd>\n\n<dt><code>http_404</code></dt>\n<dd>a server returned a response with the code 404;</dd>\n\n<dt><code>http_429</code></dt>\n<dd>a server returned a response with the code 429 (1.11.13);</dd>\n\n<dt id=\"non_idempotent\"><code>non_idempotent</code></dt>\n<dd>normally, requests with a\n<a href=\"https://tools.ietf.org/html/rfc7231#section-4.2.2\">non-idempotent</a>\nmethod\n(<code>POST</code>, <code>LOCK</code>, <code>PATCH</code>)\nare not passed to the next server\nif a request has been sent to an upstream server (1.9.13);\nenabling this option explicitly allows retrying such requests;\n</dd>\n\n<dt><code>off</code></dt>\n<dd>disables passing a request to the next server.</dd>\n\n</dl><p> \n</p><p>\nOne should bear in mind that passing a request to the next server is\nonly possible if nothing has been sent to a client yet.\nThat is, if an error or timeout occurs in the middle of the\ntransferring of a response, fixing this is impossible.\n</p><p>\nThe directive also defines what is considered an\n<a href=\"ngx_http_upstream_module.html#max_fails\">unsuccessful\nattempt</a> of communication with a server.\nThe cases of <code>error</code>, <code>timeout</code> and\n<code>invalid_header</code> are always considered unsuccessful attempts,\neven if they are not specified in the directive.\nThe cases of <code>http_500</code>, <code>http_503</code>,\nand <code>http_429</code> are\nconsidered unsuccessful attempts only if they are specified in the directive.\nThe cases of <code>http_403</code> and <code>http_404</code>\nare never considered unsuccessful attempts.\n</p><p>\nPassing a request to the next server can be limited by\n<a href=\"#scgi_next_upstream_tries\">the number of tries</a>\nand by <a href=\"#scgi_next_upstream_timeout\">time</a>.\n</p>"},{"directive":"scgi_max_temp_file_size","defaultValue":"scgi_max_temp_file_size 1024m;","syntax":"scgi_max_temp_file_size size;","context":"http, server, location","description":"<p>\nWhen <a href=\"#scgi_buffering\">buffering</a> of responses from the SCGI\nserver is enabled, and the whole response does not fit into the buffers\nset by the <a href=\"#scgi_buffer_size\">scgi_buffer_size</a> and <a href=\"#scgi_buffers\">scgi_buffers</a>\ndirectives, a part of the response can be saved to a temporary file.\nThis directive sets the maximum <code><i>size</i></code> of the temporary file.\nThe size of data written to the temporary file at a time is set\nby the <a href=\"#scgi_temp_file_write_size\">scgi_temp_file_write_size</a> directive.\n</p><p>\nThe zero value disables buffering of responses to temporary files.\n</p><p>\n</p> <blockquote class=\"note\">\nThis restriction does not apply to responses\nthat will be <a href=\"#scgi_cache\">cached</a>\nor <a href=\"#scgi_store\">stored</a> on disk.\n</blockquote><p> \n</p>"},{"directive":"scgi_limit_rate","defaultValue":"scgi_limit_rate 0;","syntax":"scgi_limit_rate rate;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.7.\n            </p></div><p>\nLimits the speed of reading the response from the SCGI server.\nThe <code><i>rate</i></code> is specified in bytes per second.\nThe zero value disables rate limiting.\nThe limit is set per a request, and so if nginx simultaneously opens\ntwo connections to the SCGI server,\nthe overall rate will be twice as much as the specified limit.\nThe limitation works only if\n<a href=\"#scgi_buffering\">buffering</a> of responses from the SCGI\nserver is enabled.\n</p>"},{"directive":"scgi_intercept_errors","defaultValue":"scgi_intercept_errors off;","syntax":"scgi_intercept_errors on | off;","context":"http, server, location","description":"<p>\nDetermines whether an SCGI server responses with codes greater than or equal\nto 300 should be passed to a client\nor be intercepted and redirected to nginx for processing\nwith the <a href=\"ngx_http_core_module.html#error_page\">error_page</a> directive.\n</p>"},{"directive":"scgi_ignore_headers","defaultValue":"—","syntax":"scgi_ignore_headers field ...;","context":"http, server, location","description":"<p>\nDisables processing of certain response header fields from the SCGI server.\nThe following fields can be ignored: “X-Accel-Redirect”,\n“X-Accel-Expires”, “X-Accel-Limit-Rate” (1.1.6),\n“X-Accel-Buffering” (1.1.6),\n“X-Accel-Charset” (1.1.6), “Expires”,\n“Cache-Control”, “Set-Cookie” (0.8.44),\nand “Vary” (1.7.7).\n</p><p>\nIf not disabled, processing of these header fields has the following\neffect:\n</p> <ul>\n\n<li>\n“X-Accel-Expires”, “Expires”,\n“Cache-Control”, “Set-Cookie”,\nand “Vary”\nset the parameters of response <a href=\"#scgi_cache_valid\">caching</a>;\n</li>\n\n<li>\n“X-Accel-Redirect” performs an\n<a href=\"ngx_http_core_module.html#internal\">internal\nredirect</a> to the specified URI;\n</li>\n\n<li>\n“X-Accel-Limit-Rate” sets the\n<a href=\"ngx_http_core_module.html#limit_rate\">rate\nlimit</a> for transmission of a response to a client;\n</li>\n\n<li>\n“X-Accel-Buffering” enables or disables\n<a href=\"#scgi_buffering\">buffering</a> of a response;\n</li>\n\n<li>\n“X-Accel-Charset” sets the desired\n<a href=\"ngx_http_charset_module.html#charset\">charset</a>\nof a response.\n</li>\n\n</ul><p> \n</p>"},{"directive":"scgi_ignore_client_abort","defaultValue":"scgi_ignore_client_abort off;","syntax":"scgi_ignore_client_abort on | off;","context":"http, server, location","description":"<p>\nDetermines whether the connection with an SCGI server should be\nclosed when a client closes the connection without waiting\nfor a response.\n</p>"},{"directive":"scgi_hide_header","defaultValue":"—","syntax":"scgi_hide_header field;","context":"http, server, location","description":"<p>\nBy default,\nnginx does not pass the header fields “Status” and\n“X-Accel-...” from the response of an SCGI\nserver to a client.\nThe <code>scgi_hide_header</code> directive sets additional fields\nthat will not be passed.\nIf, on the contrary, the passing of fields needs to be permitted,\nthe <a href=\"#scgi_pass_header\">scgi_pass_header</a> directive can be used.\n</p>"},{"directive":"scgi_force_ranges","defaultValue":"scgi_force_ranges off;","syntax":"scgi_force_ranges on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.7.\n            </p></div><p>\nEnables byte-range support\nfor both cached and uncached responses from the SCGI server\nregardless of the “Accept-Ranges” field in these responses.\n</p>"},{"directive":"scgi_connect_timeout","defaultValue":"scgi_connect_timeout 60s;","syntax":"scgi_connect_timeout time;","context":"http, server, location","description":"<p>\nDefines a timeout for establishing a connection with an SCGI server.\nIt should be noted that this timeout cannot usually exceed 75 seconds.\n</p>"},{"directive":"scgi_cache_valid","defaultValue":"—","syntax":"scgi_cache_valid [code ...] time;","context":"http, server, location","description":"<p>\nSets caching time for different response codes.\nFor example, the following directives\n</p> <blockquote class=\"example\"><pre>\nscgi_cache_valid 200 302 10m;\nscgi_cache_valid 404      1m;\n</pre></blockquote><p> \nset 10 minutes of caching for responses with codes 200 and 302\nand 1 minute for responses with code 404.\n</p><p>\nIf only caching <code><i>time</i></code> is specified\n</p> <blockquote class=\"example\"><pre>\nscgi_cache_valid 5m;\n</pre></blockquote><p> \nthen only 200, 301, and 302 responses are cached.\n</p><p>\nIn addition, the <code>any</code> parameter can be specified\nto cache any responses:\n</p> <blockquote class=\"example\"><pre>\nscgi_cache_valid 200 302 10m;\nscgi_cache_valid 301      1h;\nscgi_cache_valid any      1m;\n</pre></blockquote><p> \n</p><p>\nParameters of caching can also be set directly\nin the response header.\nThis has higher priority than setting of caching time using the directive.\n</p> <ul>\n\n<li>\nThe “X-Accel-Expires” header field sets caching time of a\nresponse in seconds.\nThe zero value disables caching for a response.\nIf the value starts with the <code>@</code> prefix, it sets an absolute\ntime in seconds since Epoch, up to which the response may be cached.\n</li>\n\n<li>\nIf the header does not include the “X-Accel-Expires” field,\nparameters of caching may be set in the header fields\n“Expires” or “Cache-Control”.\n</li>\n\n<li>\nIf the header includes the “Set-Cookie” field, such a\nresponse will not be cached.\n</li>\n\n<li>\nIf the header includes the “Vary” field\nwith the special value “<code>*</code>”, such a\nresponse will not be cached (1.7.7).\nIf the header includes the “Vary” field\nwith another value, such a response will be cached\ntaking into account the corresponding request header fields (1.7.7).\n</li>\n\n</ul><p> \nProcessing of one or more of these response header fields can be disabled\nusing the <a href=\"#scgi_ignore_headers\">scgi_ignore_headers</a> directive.\n</p>"},{"directive":"scgi_cache_use_stale","defaultValue":"scgi_cache_use_stale off;","syntax":"scgi_cache_use_stale     error |    timeout |    invalid_header |    updating |    http_500 |    http_503 |    http_403 |    http_404 |    http_429 |    off    ...;","context":"http, server, location","description":"<p>\nDetermines in which cases a stale cached response can be used\nwhen an error occurs during communication with the SCGI server.\nThe directive’s parameters match the parameters of the\n<a href=\"#scgi_next_upstream\">scgi_next_upstream</a> directive.\n</p><p>\nThe <code>error</code> parameter also permits\nusing a stale cached response if an SCGI server to process a request\ncannot be selected.\n</p>"},{"directive":"scgi_cache_revalidate","defaultValue":"scgi_cache_revalidate off;","syntax":"scgi_cache_revalidate on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.5.7.\n            </p></div><p>\nEnables revalidation of expired cache items using conditional requests with\nthe “If-Modified-Since” and “If-None-Match”\nheader fields.\n</p>"},{"directive":"scgi_cache_purge","defaultValue":"—","syntax":"scgi_cache_purge string ...;","context":"http, server, location","description":"<p>This directive appeared in version 1.5.7.\n            </p></div><p>\nDefines conditions under which the request will be considered a cache\npurge request.\nIf at least one value of the string parameters is not empty and is not equal\nto “0” then the cache entry with a corresponding\n<a href=\"#scgi_cache_key\">cache key</a> is removed.\nThe result of successful operation is indicated by returning\nthe 204 (No Content) response.\n</p><p>\nIf the <a href=\"#scgi_cache_key\">cache key</a> of a purge request ends\nwith an asterisk (“<code>*</code>”), all cache entries matching the\nwildcard key will be removed from the cache.\nHowever, these entries will remain on the disk until they are deleted\nfor either <a href=\"#scgi_cache_path\">inactivity</a>,\nor processed by the <a href=\"#purger\">cache purger</a> (1.7.12),\nor a client attempts to access them.\n</p><p>\nExample configuration:\n</p> <blockquote class=\"example\"><pre>\nscgi_cache_path /data/nginx/cache keys_zone=cache_zone:10m;\n\nmap $request_method $purge_method {\n    PURGE   1;\n    default 0;\n}\n\nserver {\n    ...\n    location / {\n        scgi_pass        backend;\n        scgi_cache       cache_zone;\n        scgi_cache_key   $uri;\n        scgi_cache_purge $purge_method;\n    }\n}\n</pre></blockquote><p> \n</p> <blockquote class=\"note\">\nThis functionality is available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote><p> \n</p>"},{"directive":"scgi_cache_path","defaultValue":"—","syntax":"scgi_cache_path     path    [levels=levels]    [use_temp_path=on|off]    keys_zone=name:size    [inactive=time]    [max_size=size]    [manager_files=number]    [manager_sleep=time]    [manager_threshold=time]    [loader_files=number]    [loader_sleep=time]    [loader_threshold=time]    [purger=on|off]    [purger_files=number]    [purger_sleep=time]    [purger_threshold=time];","context":"http","description":"<p>\nSets the path and other parameters of a cache.\nCache data are stored in files.\nThe file name in a cache is a result of\napplying the MD5 function to the\n<a href=\"#scgi_cache_key\">cache key</a>.\nThe <code>levels</code> parameter defines hierarchy levels of a cache:\nfrom 1 to 3, each level accepts values 1 or 2.\nFor example, in the following configuration\n</p> <blockquote class=\"example\"><pre>\nscgi_cache_path /data/nginx/cache levels=1:2 keys_zone=one:10m;\n</pre></blockquote><p> \nfile names in a cache will look like this:\n</p> <blockquote class=\"example\"><pre>\n/data/nginx/cache/<strong>c</strong>/<strong>29</strong>/b7f54b2df7773722d382f4809d650<strong>29c</strong>\n</pre></blockquote><p> \n</p><p>\nA cached response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the cache can be put on\ndifferent file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both cache and a directory\nholding temporary files\nare put on the same file system.\nA directory for temporary files is set based on\nthe <code>use_temp_path</code> parameter (1.7.10).\nIf this parameter is omitted or set to the value <code>on</code>,\nthe directory set by the <a href=\"#scgi_temp_path\">scgi_temp_path</a> directive\nfor the given location will be used.\nIf the value is set to <code>off</code>,\ntemporary files will be put directly in the cache directory.\n</p><p>\nIn addition, all active keys and information about data are stored\nin a shared memory zone, whose <code><i>name</i></code> and <code><i>size</i></code>\nare configured by the <code>keys_zone</code> parameter.\nOne megabyte zone can store about 8 thousand keys.\n</p><p>\nCached data that are not accessed during the time specified by the\n<code>inactive</code> parameter get removed from the cache\nregardless of their freshness.\nBy default, <code>inactive</code> is set to 10 minutes.\n</p><p>\nThe special “cache manager” process monitors the maximum cache size set\nby the <code>max_size</code> parameter.\nWhen this size is exceeded, it removes the least recently used data.\nThe data is removed in iterations configured by\n<code>manager_files</code>,\n<code>manager_threshold</code>, and\n<code>manager_sleep</code> parameters (1.11.5).\nDuring one iteration no more than <code>manager_files</code> items\nare deleted (by default, 100).\nThe duration of one iteration is limited by the\n<code>manager_threshold</code> parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the <code>manager_sleep</code>\nparameter (by default, 50 milliseconds) is made.\n</p><p>\nA minute after the start the special “cache loader” process is activated.\nIt loads information about previously cached data stored on file system\ninto a cache zone.\nThe loading is also done in iterations.\nDuring one iteration no more than <code>loader_files</code> items\nare loaded (by default, 100).\nBesides, the duration of one iteration is limited by the\n<code>loader_threshold</code> parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the <code>loader_sleep</code>\nparameter (by default, 50 milliseconds) is made.\n</p><p>\nAdditionally,\nthe following parameters are available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>:\n</p><p>\n</p> <dl class=\"compact\">\n\n<dt id=\"purger\">\n<code>purger</code>=<code>on</code>|<code>off</code>\n</dt>\n<dd>\nInstructs whether cache entries that match a\n<a href=\"#scgi_cache_purge\">wildcard key</a>\nwill be removed from the disk by the cache purger (1.7.12).\nSetting the parameter to <code>on</code>\n(default is <code>off</code>)\nwill activate the “cache purger” process that\npermanently iterates through all cache entries\nand deletes the entries that match the wildcard key.\n</dd>\n\n<dt id=\"purger_files\">\n<code>purger_files</code>=<code><i>number</i></code>\n</dt>\n<dd>\nSets the number of items that will be scanned during one iteration (1.7.12).\nBy default, <code>purger_files</code> is set to 10.\n</dd>\n\n<dt id=\"purger_threshold\">\n<code>purger_threshold</code>=<code><i>number</i></code>\n</dt>\n<dd>\nSets the duration of one iteration (1.7.12).\nBy default, <code>purger_threshold</code> is set to 50 milliseconds.\n</dd>\n\n<dt id=\"purger_sleep\">\n<code>purger_sleep</code>=<code><i>number</i></code>\n</dt>\n<dd>\nSets a pause between iterations (1.7.12).\nBy default, <code>purger_sleep</code> is set to 50 milliseconds.\n</dd>\n\n</dl><p> \n</p><p>\n</p> <blockquote class=\"note\">\nIn versions 1.7.3, 1.7.7, and 1.11.10 cache header format has been changed.\nPreviously cached responses will be considered invalid\nafter upgrading to a newer nginx version.\n</blockquote><p> \n</p>"},{"directive":"scgi_cache_min_uses","defaultValue":"scgi_cache_min_uses 1;","syntax":"scgi_cache_min_uses number;","context":"http, server, location","description":"<p>\nSets the <code><i>number</i></code> of requests after which the response\nwill be cached.\n</p>"},{"directive":"scgi_cache_methods","defaultValue":"scgi_cache_methods GET HEAD;","syntax":"scgi_cache_methods     GET |    HEAD |    POST    ...;","context":"http, server, location","description":"<p>\nIf the client request method is listed in this directive then\nthe response will be cached.\n“<code>GET</code>” and “<code>HEAD</code>” methods are always\nadded to the list, though it is recommended to specify them explicitly.\nSee also the <a href=\"#scgi_no_cache\">scgi_no_cache</a> directive.\n</p>"},{"directive":"scgi_cache_max_range_offset","defaultValue":"—","syntax":"scgi_cache_max_range_offset number;","context":"http, server, location","description":"<p>This directive appeared in version 1.11.6.\n            </p></div><p>\nSets an offset in bytes for byte-range requests.\nIf the range is beyond the offset,\nthe range request will be passed to the SCGI server\nand the response will not be cached.\n</p>"},{"directive":"scgi_cache_lock_timeout","defaultValue":"scgi_cache_lock_timeout 5s;","syntax":"scgi_cache_lock_timeout time;","context":"http, server, location","description":"<p>This directive appeared in version 1.1.12.\n            </p></div><p>\nSets a timeout for <a href=\"#scgi_cache_lock\">scgi_cache_lock</a>.\nWhen the <code><i>time</i></code> expires,\nthe request will be passed to the SCGI server,\nhowever, the response will not be cached.\n</p> <blockquote class=\"note\">\nBefore 1.7.8, the response could be cached.\n</blockquote><p> \n</p>"},{"directive":"scgi_cache_lock_age","defaultValue":"scgi_cache_lock_age 5s;","syntax":"scgi_cache_lock_age time;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.8.\n            </p></div><p>\nIf the last request passed to the SCGI server\nfor populating a new cache element\nhas not completed for the specified <code><i>time</i></code>,\none more request may be passed to the SCGI server.\n</p>"},{"directive":"scgi_cache_lock","defaultValue":"scgi_cache_lock off;","syntax":"scgi_cache_lock on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.1.12.\n            </p></div><p>\nWhen enabled, only one request at a time will be allowed to populate\na new cache element identified according to the <a href=\"#scgi_cache_key\">scgi_cache_key</a>\ndirective by passing a request to an SCGI server.\nOther requests of the same cache element will either wait\nfor a response to appear in the cache or the cache lock for\nthis element to be released, up to the time set by the\n<a href=\"#scgi_cache_lock_timeout\">scgi_cache_lock_timeout</a> directive.\n</p>"},{"directive":"scgi_cache_key","defaultValue":"—","syntax":"scgi_cache_key string;","context":"http, server, location","description":"<p>\nDefines a key for caching, for example\n</p> <blockquote class=\"example\"><pre>\nscgi_cache_key localhost:9000$request_uri;\n</pre></blockquote><p> \n</p>"},{"directive":"scgi_cache_bypass","defaultValue":"—","syntax":"scgi_cache_bypass string ...;","context":"http, server, location","description":"<p>\nDefines conditions under which the response will not be taken from a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to “0” then the response will not be taken from the cache:\n</p> <blockquote class=\"example\"><pre>\nscgi_cache_bypass $cookie_nocache $arg_nocache$arg_comment;\nscgi_cache_bypass $http_pragma    $http_authorization;\n</pre></blockquote><p> \nCan be used along with the <a href=\"#scgi_no_cache\">scgi_no_cache</a> directive.\n</p>"},{"directive":"scgi_cache_background_update","defaultValue":"scgi_cache_background_update off;","syntax":"scgi_cache_background_update on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.11.10.\n            </p></div><p>\nAllows starting a background subrequest\nto update an expired cache item,\nwhile a stale cached response is returned to the client.\nNote that it is necessary to\n<a href=\"#scgi_cache_use_stale_updating\">allow</a>\nthe usage of a stale cached response when it is being updated.\n</p>"},{"directive":"scgi_cache","defaultValue":"scgi_cache off;","syntax":"scgi_cache zone | off;","context":"http, server, location","description":"<p>\nDefines a shared memory zone used for caching.\nThe same zone can be used in several places.\nParameter value can contain variables (1.7.9).\nThe <code>off</code> parameter disables caching inherited\nfrom the previous configuration level.\n</p>"},{"directive":"scgi_busy_buffers_size","defaultValue":"scgi_busy_buffers_size 8k|16k;","syntax":"scgi_busy_buffers_size size;","context":"http, server, location","description":"<p>\nWhen <a href=\"#scgi_buffering\">buffering</a> of responses from the SCGI\nserver is enabled, limits the total <code><i>size</i></code> of buffers that\ncan be busy sending a response to the client while the response is not\nyet fully read.\nIn the meantime, the rest of the buffers can be used for reading the response\nand, if needed, buffering part of the response to a temporary file.\nBy default, <code><i>size</i></code> is limited by the size of two buffers set by the\n<a href=\"#scgi_buffer_size\">scgi_buffer_size</a> and <a href=\"#scgi_buffers\">scgi_buffers</a> directives.\n</p>"},{"directive":"scgi_buffers","defaultValue":"scgi_buffers 8 4k|8k;","syntax":"scgi_buffers number size;","context":"http, server, location","description":"<p>\nSets the <code><i>number</i></code> and <code><i>size</i></code> of the\nbuffers used for reading a response from the SCGI server,\nfor a single connection.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\n</p>"},{"directive":"scgi_buffering","defaultValue":"scgi_buffering on;","syntax":"scgi_buffering on | off;","context":"http, server, location","description":"<p>\nEnables or disables buffering of responses from the SCGI server.\n</p><p>\nWhen buffering is enabled, nginx receives a response from the SCGI server\nas soon as possible, saving it into the buffers set by the\n<a href=\"#scgi_buffer_size\">scgi_buffer_size</a> and <a href=\"#scgi_buffers\">scgi_buffers</a> directives.\nIf the whole response does not fit into memory, a part of it can be saved\nto a <a href=\"#scgi_temp_path\">temporary file</a> on the disk.\nWriting to temporary files is controlled by the\n<a href=\"#scgi_max_temp_file_size\">scgi_max_temp_file_size</a> and\n<a href=\"#scgi_temp_file_write_size\">scgi_temp_file_write_size</a> directives.\n</p><p>\nWhen buffering is disabled, the response is passed to a client synchronously,\nimmediately as it is received.\nnginx will not try to read the whole response from the SCGI server.\nThe maximum size of the data that nginx can receive from the server\nat a time is set by the <a href=\"#scgi_buffer_size\">scgi_buffer_size</a> directive.\n</p><p>\nBuffering can also be enabled or disabled by passing\n“<code>yes</code>” or “<code>no</code>” in the\n“X-Accel-Buffering” response header field.\nThis capability can be disabled using the\n<a href=\"#scgi_ignore_headers\">scgi_ignore_headers</a> directive.\n</p>"},{"directive":"scgi_buffer_size","defaultValue":"scgi_buffer_size 4k|8k;","syntax":"scgi_buffer_size size;","context":"http, server, location","description":"<p>\nSets the <code><i>size</i></code> of the buffer used for reading the first part\nof the response received from the SCGI server.\nThis part usually contains a small response header.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\nIt can be made smaller, however.\n</p>"},{"directive":"scgi_bind","defaultValue":"—","syntax":"scgi_bind     address    [transparent] |    off;","context":"http, server, location","description":"<p>\nMakes outgoing connections to an SCGI server originate\nfrom the specified local IP address with an optional port (1.11.2).\nParameter value can contain variables (1.3.12).\nThe special value <code>off</code> (1.3.12) cancels the effect\nof the <code>scgi_bind</code> directive\ninherited from the previous configuration level, which allows the\nsystem to auto-assign the local IP address and port.\n</p>"},{"directive":"satisfy","defaultValue":"satisfy all;","syntax":"satisfy all | any;","context":"http, server, location","description":"<p>\nAllows access if all (<code>all</code>) or at least one\n(<code>any</code>) of the\n<a href=\"ngx_http_access_module.html\">ngx_http_access_module</a>,\n<a href=\"ngx_http_auth_basic_module.html\">ngx_http_auth_basic_module</a>,\n<a href=\"ngx_http_auth_request_module.html\">ngx_http_auth_request_module</a>,\nor\n<a href=\"ngx_http_auth_jwt_module.html\">ngx_http_auth_jwt_module</a>\nmodules allow access.\n</p><p>\nExample:\n</p> <blockquote class=\"example\"><pre>\nlocation / {\n    satisfy any;\n\n    allow 192.168.1.0/32;\n    deny  all;\n\n    auth_basic           \"closed site\";\n    auth_basic_user_file conf/htpasswd;\n}\n</pre></blockquote><p> \n</p>"},{"directive":"root","defaultValue":"root html;","syntax":"root path;","context":"http, server, location, if in location","description":"<p>\nSets the root directory for requests.\nFor example, with the following configuration\n</p> <blockquote class=\"example\"><pre>\nlocation /i/ {\n    root /data/w3;\n}\n</pre></blockquote><p> \nThe <code>/data/w3/i/top.gif</code> file will be sent in response to\nthe “<code>/i/top.gif</code>” request.\n</p><p>\nThe <code><i>path</i></code> value can contain variables,\nexcept <code>$document_root</code> and <code>$realpath_root</code>.\n</p><p>\nA path to the file is constructed by merely adding a URI to the value\nof the <code>root</code> directive.\nIf a URI has to be modified, the\n<a href=\"#alias\">alias</a> directive should be used.\n</p>"},{"directive":"rewrite_log","defaultValue":"rewrite_log off;","syntax":"rewrite_log on | off;","context":"http, server, location, if","description":"<p>\nEnables or disables logging of <code>ngx_http_rewrite_module</code>\nmodule directives processing results\ninto the <a href=\"../ngx_core_module.html#error_log\">error_log</a> at\nthe <code>notice</code> level.\n</p>"},{"directive":"rewrite","defaultValue":"—","syntax":"rewrite     regex    replacement    [flag];","context":"server, location, if","description":"<p>\nIf the specified regular expression matches a request URI, URI is changed\nas specified in the <code><i>replacement</i></code> string.\nThe <code>rewrite</code> directives are executed sequentially\nin order of their appearance in the configuration file.\nIt is possible to terminate further processing of the directives using flags.\nIf a replacement string starts with “<code>http://</code>”,\n“<code>https://</code>”, or “<code>$scheme</code>”,\nthe processing stops and the redirect is returned to a client.\n</p><p>\nAn optional <code><i>flag</i></code> parameter can be one of:\n</p> <dl class=\"compact\">\n\n<dt><code>last</code></dt>\n<dd>\nstops processing the current set of\n<code>ngx_http_rewrite_module</code> directives and starts\na search for a new location matching the changed URI;\n</dd>\n\n<dt><code>break</code></dt>\n<dd>\nstops processing the current set of\n<code>ngx_http_rewrite_module</code> directives\nas with the <a href=\"#break\">break</a> directive;\n</dd>\n\n<dt><code>redirect</code></dt>\n<dd>\nreturns a temporary redirect with the 302 code;\nused if a replacement string does not start with\n“<code>http://</code>”, “<code>https://</code>”,\nor “<code>$scheme</code>”;\n</dd>\n\n<dt><code>permanent</code></dt>\n<dd>\nreturns a permanent redirect with the 301 code.\n</dd>\n\n</dl><p> \nThe full redirect URL is formed according to the\nrequest scheme (<code>$scheme</code>) and the\n<a href=\"ngx_http_core_module.html#server_name_in_redirect\">server_name_in_redirect</a> and\n<a href=\"ngx_http_core_module.html#port_in_redirect\">port_in_redirect</a> directives.\n</p><p>\nExample:\n</p> <blockquote class=\"example\"><pre>\nserver {\n    ...\n    rewrite ^(/download/.*)/media/(.*)\\..*$ $1/mp3/$2.mp3 last;\n    rewrite ^(/download/.*)/audio/(.*)\\..*$ $1/mp3/$2.ra  last;\n    return  403;\n    ...\n}\n</pre></blockquote><p> \n</p><p>\nBut if these directives are put inside the “<code>/download/</code>”\nlocation, the <code>last</code> flag should be replaced by\n<code>break</code>, or otherwise nginx will make 10 cycles and\nreturn the 500 error:\n</p> <blockquote class=\"example\"><pre>\nlocation /download/ {\n    rewrite ^(/download/.*)/media/(.*)\\..*$ $1/mp3/$2.mp3 break;\n    rewrite ^(/download/.*)/audio/(.*)\\..*$ $1/mp3/$2.ra  break;\n    return  403;\n}\n</pre></blockquote><p> \n</p><p>\nIf a <code><i>replacement</i></code> string includes the new request arguments,\nthe previous request arguments are appended after them.\nIf this is undesired, putting a question mark at the end of a replacement\nstring avoids having them appended, for example:\n</p> <blockquote class=\"example\"><pre>\nrewrite ^/users/(.*)$ /show?user=$1? last;\n</pre></blockquote><p> \n</p><p>\nIf a regular expression includes the “<code>}</code>”\nor “<code>;</code>” characters, the whole expressions should be enclosed\nin single or double quotes.\n</p>"},{"directive":"return","defaultValue":"","syntax":"","context":"","description":null},{"directive":"return","defaultValue":"—","syntax":"return code [text];return code URL;return URL;","context":"server, location, if","description":"<p>\nStops processing and returns the specified <code><i>code</i></code> to a client.\nThe non-standard code 444 closes a connection without sending\na response header.\n</p><p>\nStarting from version 0.8.42, it is possible to specify\neither a redirect URL (for codes 301, 302, 303, 307, and 308)\nor the response body <code><i>text</i></code> (for other codes).\nA response body text and redirect URL can contain variables.\nAs a special case, a redirect URL can be specified as a URI\nlocal to this server, in which case the full redirect URL\nis formed according to the request scheme (<code>$scheme</code>) and the\n<a href=\"ngx_http_core_module.html#server_name_in_redirect\">server_name_in_redirect</a> and\n<a href=\"ngx_http_core_module.html#port_in_redirect\">port_in_redirect</a> directives.\n</p><p>\nIn addition, a <code><i>URL</i></code> for temporary redirect with the code 302\ncan be specified as the sole parameter.\nSuch a parameter should start with the “<code>http://</code>”,\n“<code>https://</code>”, or “<code>$scheme</code>” string.\nA <code><i>URL</i></code> can contain variables.\n</p><p>\n</p> <blockquote class=\"note\">\nOnly the following codes could be returned before version 0.7.51:\n204, 400, 402 — 406, 408, 410, 411, 413, 416, and 500 — 504.\n</blockquote><p> \n\n</p> <blockquote class=\"note\">\nThe code 307 was not treated as a redirect until versions 1.1.16 and 1.0.13.\n</blockquote><p> \n\n</p> <blockquote class=\"note\">\nThe code 308 was not treated as a redirect until version 1.13.0.\n</blockquote><p> \n</p><p>\nSee also the <a href=\"ngx_http_core_module.html#error_page\">error_page</a> directive.\n</p>"},{"directive":"resolver_timeout","defaultValue":"resolver_timeout 30s;","syntax":"resolver_timeout time;","context":"stream, server","description":"<p>This directive appeared in version 1.11.3.\n            </p></div><p>\nSets a timeout for name resolution, for example:\n</p> <blockquote class=\"example\"><pre>\nresolver_timeout 5s;\n</pre></blockquote><p> \n</p> <blockquote class=\"note\">\nBefore version 1.11.3, this directive was available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote><p> \n</p>"},{"directive":"resolver_timeout","defaultValue":"resolver_timeout 30s;","syntax":"resolver_timeout time;","context":"mail, server","description":"<p>\nSets a timeout for DNS operations, for example:\n</p> <blockquote class=\"example\"><pre>\nresolver_timeout 5s;\n</pre></blockquote><p> \n</p>"},{"directive":"resolver_timeout","defaultValue":"resolver_timeout 30s;","syntax":"resolver_timeout time;","context":"http, server, location","description":"<p>\nSets a timeout for name resolution, for example:\n</p> <blockquote class=\"example\"><pre>\nresolver_timeout 5s;\n</pre></blockquote><p> \n</p>"},{"directive":"resolver","defaultValue":"—","syntax":"resolver     address ...    [valid=time]    [ipv6=on|off];","context":"stream, server","description":"<p>This directive appeared in version 1.11.3.\n            </p></div><p>\nConfigures name servers used to resolve names of upstream servers\ninto addresses, for example:\n</p> <blockquote class=\"example\"><pre>\nresolver 127.0.0.1 [::1]:5353;\n</pre></blockquote><p> \nAn address can be specified as a domain name or IP address,\nand an optional port.\nIf port is not specified, the port 53 is used.\nName servers are queried in a round-robin fashion.\n</p><p>\nBy default, nginx will look up both IPv4 and IPv6 addresses while resolving.\nIf looking up of IPv6 addresses is not desired,\nthe <code>ipv6=off</code> parameter can be specified.\n</p><p>\nBy default, nginx caches answers using the TTL value of a response.\nThe optional <code>valid</code> parameter allows overriding it:\n</p> <blockquote class=\"example\"><pre>\nresolver 127.0.0.1 [::1]:5353 valid=30s;\n</pre></blockquote><p> \n</p> <blockquote class=\"note\">\nBefore version 1.11.3, this directive was available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote><p> \n</p>"},{"directive":"resolver","defaultValue":"resolver off;","syntax":"resolver address ...[valid=time];resolver off;","context":"mail, server","description":"<p>\nConfigures name servers used to find the client’s hostname\nto pass it to the\n<a href=\"ngx_mail_auth_http_module.html\">authentication server</a>,\nand in the\n<a href=\"ngx_mail_proxy_module.html#xclient\">XCLIENT</a>\ncommand when proxying SMTP.\nFor example:\n</p> <blockquote class=\"example\"><pre>\nresolver 127.0.0.1 [::1]:5353;\n</pre></blockquote><p> \nAn address can be specified as a domain name or IP address,\nand an optional port (1.3.1, 1.2.2).\nIf port is not specified, the port 53 is used.\nName servers are queried in a round-robin fashion.\n</p> <blockquote class=\"note\">\nBefore version 1.1.7, only a single name server could be configured.\nSpecifying name servers using IPv6 addresses is supported\nstarting from versions 1.3.1 and 1.2.2.\n</blockquote><p> \nBy default, nginx caches answers using the TTL value of a response.\nAn optional <code>valid</code> parameter allows overriding it:\n</p> <blockquote class=\"example\"><pre>\nresolver 127.0.0.1 [::1]:5353 valid=30s;\n</pre></blockquote><p> \n</p> <blockquote class=\"note\">\nBefore version 1.1.9, tuning of caching time was not possible,\nand nginx always cached answers for the duration of 5 minutes.\n</blockquote><p> \n</p><p>\nThe special value <code>off</code> disables resolving.\n</p>"},{"directive":"resolver","defaultValue":"—","syntax":"resolver     address ...    [valid=time]    [ipv6=on|off];","context":"http, server, location","description":"<p>\nConfigures name servers used to resolve names of upstream servers\ninto addresses, for example:\n</p> <blockquote class=\"example\"><pre>\nresolver 127.0.0.1 [::1]:5353;\n</pre></blockquote><p> \nAn address can be specified as a domain name or IP address,\nand an optional port (1.3.1, 1.2.2).\nIf port is not specified, the port 53 is used.\nName servers are queried in a round-robin fashion.\n</p> <blockquote class=\"note\">\nBefore version 1.1.7, only a single name server could be configured.\nSpecifying name servers using IPv6 addresses is supported\nstarting from versions 1.3.1 and 1.2.2.\n</blockquote><p> \nBy default, nginx will look up both IPv4 and IPv6 addresses while resolving.\nIf looking up of IPv6 addresses is not desired,\nthe <code>ipv6=off</code> parameter can be specified.\n</p> <blockquote class=\"note\">\nResolving of names into IPv6 addresses is supported\nstarting from version 1.5.8.\n</blockquote><p> \nBy default, nginx caches answers using the TTL value of a response.\nAn optional <code>valid</code> parameter allows overriding it:\n</p> <blockquote class=\"example\"><pre>\nresolver 127.0.0.1 [::1]:5353 valid=30s;\n</pre></blockquote><p> \n</p> <blockquote class=\"note\">\nBefore version 1.1.9, tuning of caching time was not possible,\nand nginx always cached answers for the duration of 5 minutes.\n</blockquote><p> \n</p> <blockquote class=\"note\">\nTo prevent DNS spoofing, it is recommended\nconfiguring DNS servers in a properly secured trusted local network.\n</blockquote><p> \n</p>"},{"directive":"reset_timedout_connection","defaultValue":"reset_timedout_connection off;","syntax":"reset_timedout_connection on | off;","context":"http, server, location","description":"<p>\nEnables or disables resetting timed out connections.\nThe reset is performed as follows.\nBefore closing a socket, the\n<code>SO_LINGER</code>\noption is set on it with a timeout value of 0.\nWhen the socket is closed, TCP RST is sent to the client, and all memory\noccupied by this socket is released.\nThis helps avoid keeping an already closed socket with filled buffers\nin a FIN_WAIT1 state for a long time.\n</p><p>\nIt should be noted that timed out keep-alive connections are\nclosed normally.\n</p>"},{"directive":"request_pool_size","defaultValue":"request_pool_size 4k;","syntax":"request_pool_size size;","context":"http, server","description":"<p>\nAllows accurate tuning of per-request memory allocations.\nThis directive has minimal impact on performance\nand should not generally be used.\n</p>"},{"directive":"referer_hash_max_size","defaultValue":"referer_hash_max_size 2048;","syntax":"referer_hash_max_size size;","context":"server, location","description":"<p>This directive appeared in version 1.0.5.\n            </p></div><p>\nSets the maximum <code><i>size</i></code> of the valid referers hash tables.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p>"},{"directive":"referer_hash_bucket_size","defaultValue":"referer_hash_bucket_size 64;","syntax":"referer_hash_bucket_size size;","context":"server, location","description":"<p>This directive appeared in version 1.0.5.\n            </p></div><p>\nSets the bucket size for the valid referers hash tables.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p>"},{"directive":"recursive_error_pages","defaultValue":"recursive_error_pages off;","syntax":"recursive_error_pages on | off;","context":"http, server, location","description":"<p>\nEnables or disables doing several redirects using the\n<a href=\"#error_page\">error_page</a>\ndirective.\nThe number of such redirects is <a href=\"#internal\">limited</a>.\n</p>"},{"directive":"real_ip_recursive","defaultValue":"real_ip_recursive off;","syntax":"real_ip_recursive on | off;","context":"http, server, location","description":"<p>\n                    This directive appeared in versions 1.3.0 and 1.2.1.\n                    \n                        </p>\n                    </div><p>\nIf recursive search is disabled, the original client address that\nmatches one of the trusted addresses is replaced by the last\naddress sent in the request header field defined by the\n<a href=\"#real_ip_header\">real_ip_header</a> directive.\nIf recursive search is enabled, the original client address that\nmatches one of the trusted addresses is replaced by the last\nnon-trusted address sent in the request header field.\n</p>"},{"directive":"real_ip_header","defaultValue":"real_ip_header X-Real-IP;","syntax":"real_ip_header     field |    X-Real-IP |    X-Forwarded-For |    proxy_protocol;","context":"http, server, location","description":"<p>\nDefines the request header field\nwhose value will be used to replace the client address.\n</p><p>\nThe request header field value that contains an optional port\nis also used to replace the client port (1.11.0).\nThe address and port should be specified according to\n<a href=\"https://tools.ietf.org/html/rfc3986\">RFC 3986</a>.\n</p><p>\nThe <code>proxy_protocol</code> parameter (1.5.12) changes\nthe client address to the one from the PROXY protocol header.\nThe PROXY protocol must be previously enabled by setting the\n<code>proxy_protocol</code> parameter\nin the <a href=\"ngx_http_core_module.html#listen\">listen</a> directive.\n</p>"},{"directive":"read_ahead","defaultValue":"read_ahead 0;","syntax":"read_ahead size;","context":"http, server, location","description":"<p>\nSets the amount of pre-reading for the kernel when working with file.\n</p><p>\nOn Linux, the\n<code>posix_fadvise(0, 0, 0, POSIX_FADV_SEQUENTIAL)</code>\nsystem call is used, and so the <code><i>size</i></code> parameter is ignored.\n</p><p>\nOn FreeBSD, the\n<code>fcntl(O_READAHEAD,</code>\n<code><i>size</i></code><code>)</code>\nsystem call, supported since FreeBSD 9.0-CURRENT, is used.\nFreeBSD 7 has to be\n<a href=\"http://sysoev.ru/freebsd/patch.readahead.txt\">patched</a>.\n</p>"},{"directive":"random_index","defaultValue":"","syntax":"","context":"","description":null},{"directive":"queue","defaultValue":"—","syntax":"queue number[timeout=time];","context":"upstream","description":"<p>This directive appeared in version 1.5.12.\n            </p></div><p>\nIf an upstream server cannot be selected immediately\nwhile processing a request,\nthe request will be placed into the queue.\nThe directive specifies the maximum number of requests that can be in the queue\nat the same time.\nIf the queue is filled up,\nor the server to pass the request to cannot be selected within\nthe time period specified in the <code>timeout</code> parameter,\nthe 502 (Bad Gateway)\nerror will be returned to the client.\n</p><p>\nThe default value of the <code>timeout</code> parameter is 60 seconds.\n</p><p>\n</p> <blockquote class=\"note\">\nWhen using load balancer methods other than the default\nround-robin method, it is necessary to activate them before\nthe <code>queue</code> directive.\n</blockquote><p> \n\n</p> <blockquote class=\"note\">\nThis directive is available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote><p> \n</p>"},{"directive":"proxy_upload_rate","defaultValue":"","syntax":"","context":"","description":null},{"directive":"proxy_timeout","defaultValue":"proxy_timeout 10m;","syntax":"proxy_timeout timeout;","context":"stream, server","description":"<p>\nSets the <code><i>timeout</i></code> between two successive\nread or write operations on client or proxied server connections.\nIf no data is transmitted within this time, the connection is closed.\n</p>"},{"directive":"proxy_timeout","defaultValue":"proxy_timeout 24h;","syntax":"proxy_timeout timeout;","context":"mail, server","description":"<p>\nSets the <code><i>timeout</i></code> between two successive\nread or write operations on client or proxied server connections.\nIf no data is transmitted within this time, the connection is closed.\n</p>"},{"directive":"proxy_temp_path","defaultValue":"proxy_temp_path proxy_temp;","syntax":"proxy_temp_path     path    [level1    [level2    [level3]]];","context":"http, server, location","description":"<p>\nDefines a directory for storing temporary files\nwith data received from proxied servers.\nUp to three-level subdirectory hierarchy can be used underneath the specified\ndirectory.\nFor example, in the following configuration\n</p> <blockquote class=\"example\"><pre>\nproxy_temp_path /spool/nginx/proxy_temp 1 2;\n</pre></blockquote><p> \na temporary file might look like this:\n</p> <blockquote class=\"example\"><pre>\n/spool/nginx/proxy_temp/<strong>7</strong>/<strong>45</strong>/00000123<strong>457</strong>\n</pre></blockquote><p> \n</p><p>\nSee also the <code>use_temp_path</code> parameter of the\n<a href=\"#proxy_cache_path\">proxy_cache_path</a> directive.\n</p>"},{"directive":"proxy_temp_file_write_size","defaultValue":"proxy_temp_file_write_size 8k|16k;","syntax":"proxy_temp_file_write_size size;","context":"http, server, location","description":"<p>\nLimits the <code><i>size</i></code> of data written to a temporary file\nat a time, when buffering of responses from the proxied server\nto temporary files is enabled.\nBy default, <code><i>size</i></code> is limited by two buffers set by the\n<a href=\"#proxy_buffer_size\">proxy_buffer_size</a> and <a href=\"#proxy_buffers\">proxy_buffers</a> directives.\nThe maximum size of a temporary file is set by the\n<a href=\"#proxy_max_temp_file_size\">proxy_max_temp_file_size</a> directive.\n</p>"},{"directive":"proxy_store_access","defaultValue":"proxy_store_access user:rw;","syntax":"proxy_store_access users:permissions ...;","context":"http, server, location","description":"<p>\nSets access permissions for newly created files and directories, e.g.:\n</p> <blockquote class=\"example\"><pre>\nproxy_store_access user:rw group:rw all:r;\n</pre></blockquote><p> \n</p><p>\nIf any <code>group</code> or <code>all</code> access permissions\nare specified then <code>user</code> permissions may be omitted:\n</p> <blockquote class=\"example\"><pre>\nproxy_store_access group:rw all:r;\n</pre></blockquote><p> \n</p>"},{"directive":"proxy_store","defaultValue":"proxy_store off;","syntax":"proxy_store     on |    off |    string;","context":"http, server, location","description":"<p>\nEnables saving of files to a disk.\nThe <code>on</code> parameter saves files with paths\ncorresponding to the directives\n<a href=\"ngx_http_core_module.html#alias\">alias</a> or\n<a href=\"ngx_http_core_module.html#root\">root</a>.\nThe <code>off</code> parameter disables saving of files.\nIn addition, the file name can be set explicitly using the\n<code><i>string</i></code> with variables:\n</p> <blockquote class=\"example\"><pre>\nproxy_store /data/www$original_uri;\n</pre></blockquote><p> \n</p><p>\nThe modification time of files is set according to the received\n“Last-Modified” response header field.\nThe response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the persistent store\ncan be put on different file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both saved files and a\ndirectory holding temporary files, set by the <a href=\"#proxy_temp_path\">proxy_temp_path</a>\ndirective, are put on the same file system.\n</p><p>\nThis directive can be used to create local copies of static unchangeable\nfiles, e.g.:\n</p> <blockquote class=\"example\"><pre>\nlocation /images/ {\n    root               /data/www;\n    error_page         404 = /fetch$uri;\n}\n\nlocation /fetch/ {\n    internal;\n\n    proxy_pass         http://backend/;\n    proxy_store        on;\n    proxy_store_access user:rw group:rw all:r;\n    proxy_temp_path    /data/temp;\n\n    alias              /data/www/;\n}\n</pre></blockquote><p> \n</p><p>\nor like this:\n</p> <blockquote class=\"example\"><pre>\nlocation /images/ {\n    root               /data/www;\n    error_page         404 = @fetch;\n}\n\nlocation @fetch {\n    internal;\n\n    proxy_pass         http://backend;\n    proxy_store        on;\n    proxy_store_access user:rw group:rw all:r;\n    proxy_temp_path    /data/temp;\n\n    root               /data/www;\n}\n</pre></blockquote><p> \n</p>"},{"directive":"proxy_ssl_verify_depth","defaultValue":"proxy_ssl_verify_depth 1;","syntax":"proxy_ssl_verify_depth number;","context":"stream, server","description":"<p>\nSets the verification depth in the proxied server certificates chain.\n</p>"},{"directive":"proxy_ssl_verify_depth","defaultValue":"proxy_ssl_verify_depth 1;","syntax":"proxy_ssl_verify_depth number;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.0.\n            </p></div><p>\nSets the verification depth in the proxied HTTPS server certificates chain.\n</p>"},{"directive":"proxy_ssl_verify","defaultValue":"proxy_ssl_verify off;","syntax":"proxy_ssl_verify on | off;","context":"stream, server","description":"<p>\nEnables or disables verification of the proxied server certificate.\n</p>"},{"directive":"proxy_ssl_verify","defaultValue":"proxy_ssl_verify off;","syntax":"proxy_ssl_verify on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.0.\n            </p></div><p>\nEnables or disables verification of the proxied HTTPS server certificate.\n</p>"},{"directive":"proxy_ssl_trusted_certificate","defaultValue":"—","syntax":"proxy_ssl_trusted_certificate file;","context":"stream, server","description":"<p>\nSpecifies a <code><i>file</i></code> with trusted CA certificates in the PEM format\nused to <a href=\"#proxy_ssl_verify\">verify</a>\nthe certificate of the proxied server.\n</p>"},{"directive":"proxy_ssl_trusted_certificate","defaultValue":"—","syntax":"proxy_ssl_trusted_certificate file;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.0.\n            </p></div><p>\nSpecifies a <code><i>file</i></code> with trusted CA certificates in the PEM format\nused to <a href=\"#proxy_ssl_verify\">verify</a>\nthe certificate of the proxied HTTPS server.\n</p>"},{"directive":"proxy_ssl_session_reuse","defaultValue":"proxy_ssl_session_reuse on;","syntax":"proxy_ssl_session_reuse on | off;","context":"stream, server","description":"<p>\nDetermines whether SSL sessions can be reused when working with\nthe proxied server.\nIf the errors\n“<code>SSL3_GET_FINISHED:digest check failed</code>”\nappear in the logs, try disabling session reuse.\n</p>"},{"directive":"proxy_ssl_session_reuse","defaultValue":"proxy_ssl_session_reuse on;","syntax":"proxy_ssl_session_reuse on | off;","context":"http, server, location","description":"<p>\nDetermines whether SSL sessions can be reused when working with\nthe proxied server.\nIf the errors\n“<code>SSL3_GET_FINISHED:digest check failed</code>”\nappear in the logs, try disabling session reuse.\n</p>"},{"directive":"proxy_ssl_server_name","defaultValue":"proxy_ssl_server_name off;","syntax":"proxy_ssl_server_name on | off;","context":"stream, server","description":"<p>\nEnables or disables passing of the server name through\n<a href=\"http://en.wikipedia.org/wiki/Server_Name_Indication\">TLS\nServer Name Indication extension</a> (SNI, RFC 6066)\nwhen establishing a connection with the proxied server.\n</p>"},{"directive":"proxy_ssl_server_name","defaultValue":"proxy_ssl_server_name off;","syntax":"proxy_ssl_server_name on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.0.\n            </p></div><p>\nEnables or disables passing of the server name through\n<a href=\"http://en.wikipedia.org/wiki/Server_Name_Indication\">TLS\nServer Name Indication extension</a> (SNI, RFC 6066)\nwhen establishing a connection with the proxied HTTPS server.\n</p>"},{"directive":"proxy_ssl_protocols","defaultValue":"proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2;","syntax":"proxy_ssl_protocols     [SSLv2]    [SSLv3]    [TLSv1]    [TLSv1.1]    [TLSv1.2]    [TLSv1.3];","context":"stream, server","description":"<p>\nEnables the specified protocols for connections to a proxied server.\n</p>"},{"directive":"proxy_ssl_protocols","defaultValue":"proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2;","syntax":"proxy_ssl_protocols     [SSLv2]    [SSLv3]    [TLSv1]    [TLSv1.1]    [TLSv1.2]    [TLSv1.3];","context":"http, server, location","description":"<p>This directive appeared in version 1.5.6.\n            </p></div><p>\nEnables the specified protocols for requests to a proxied HTTPS server.\n</p>"},{"directive":"proxy_ssl_password_file","defaultValue":"—","syntax":"proxy_ssl_password_file file;","context":"stream, server","description":"<p>\nSpecifies a <code><i>file</i></code> with passphrases for\n<a href=\"#proxy_ssl_certificate_key\">secret keys</a>\nwhere each passphrase is specified on a separate line.\nPassphrases are tried in turn when loading the key.\n</p>"},{"directive":"proxy_ssl_password_file","defaultValue":"—","syntax":"proxy_ssl_password_file file;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.8.\n            </p></div><p>\nSpecifies a <code><i>file</i></code> with passphrases for\n<a href=\"#proxy_ssl_certificate_key\">secret keys</a>\nwhere each passphrase is specified on a separate line.\nPassphrases are tried in turn when loading the key.\n</p>"},{"directive":"proxy_ssl_name","defaultValue":"proxy_ssl_name host from proxy_pass;","syntax":"proxy_ssl_name name;","context":"stream, server","description":"<p>\nAllows overriding the server name used to\n<a href=\"#proxy_ssl_verify\">verify</a>\nthe certificate of the proxied server and to be\n<a href=\"#proxy_ssl_server_name\">passed through SNI</a>\nwhen establishing a connection with the proxied server.\nThe server name can also be specified using variables (1.11.3).\n</p><p>\nBy default, the host part of the <a href=\"#proxy_pass\">proxy_pass</a> address is used.\n</p>"},{"directive":"proxy_ssl_name","defaultValue":"proxy_ssl_name $proxy_host;","syntax":"proxy_ssl_name name;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.0.\n            </p></div><p>\nAllows overriding the server name used to\n<a href=\"#proxy_ssl_verify\">verify</a>\nthe certificate of the proxied HTTPS server and to be\n<a href=\"#proxy_ssl_server_name\">passed through SNI</a>\nwhen establishing a connection with the proxied HTTPS server.\n</p><p>\nBy default, the host part of the <a href=\"#proxy_pass\">proxy_pass</a> URL is used.\n</p>"},{"directive":"proxy_ssl_crl","defaultValue":"—","syntax":"proxy_ssl_crl file;","context":"stream, server","description":"<p>\nSpecifies a <code><i>file</i></code> with revoked certificates (CRL)\nin the PEM format used to <a href=\"#proxy_ssl_verify\">verify</a>\nthe certificate of the proxied server.\n</p>"},{"directive":"proxy_ssl_crl","defaultValue":"—","syntax":"proxy_ssl_crl file;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.0.\n            </p></div><p>\nSpecifies a <code><i>file</i></code> with revoked certificates (CRL)\nin the PEM format used to <a href=\"#proxy_ssl_verify\">verify</a>\nthe certificate of the proxied HTTPS server.\n</p>"},{"directive":"proxy_ssl_ciphers","defaultValue":"proxy_ssl_ciphers DEFAULT;","syntax":"proxy_ssl_ciphers ciphers;","context":"stream, server","description":"<p>\nSpecifies the enabled ciphers for connections to a proxied server.\nThe ciphers are specified in the format understood by the OpenSSL library.\n</p><p>\nThe full list can be viewed using the\n“<code>openssl ciphers</code>” command.\n</p>"},{"directive":"proxy_ssl_ciphers","defaultValue":"proxy_ssl_ciphers DEFAULT;","syntax":"proxy_ssl_ciphers ciphers;","context":"http, server, location","description":"<p>This directive appeared in version 1.5.6.\n            </p></div><p>\nSpecifies the enabled ciphers for requests to a proxied HTTPS server.\nThe ciphers are specified in the format understood by the OpenSSL library.\n</p><p>\nThe full list can be viewed using the\n“<code>openssl ciphers</code>” command.\n</p>"},{"directive":"proxy_ssl_certificate_key","defaultValue":"—","syntax":"proxy_ssl_certificate_key file;","context":"stream, server","description":"<p>\nSpecifies a <code><i>file</i></code> with the secret key in the PEM format\nused for authentication to a proxied server.\n</p>"},{"directive":"proxy_ssl_certificate_key","defaultValue":"—","syntax":"proxy_ssl_certificate_key file;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.8.\n            </p></div><p>\nSpecifies a <code><i>file</i></code> with the secret key in the PEM format\nused for authentication to a proxied HTTPS server.\n</p><p>\nThe value\n<code>engine</code>:<code><i>name</i></code>:<code><i>id</i></code>\ncan be specified instead of the <code><i>file</i></code> (1.7.9),\nwhich loads a secret key with a specified <code><i>id</i></code>\nfrom the OpenSSL engine <code><i>name</i></code>.\n</p>"},{"directive":"proxy_ssl_certificate","defaultValue":"—","syntax":"proxy_ssl_certificate file;","context":"stream, server","description":"<p>\nSpecifies a <code><i>file</i></code> with the certificate in the PEM format\nused for authentication to a proxied server.\n</p>"},{"directive":"proxy_ssl_certificate","defaultValue":"—","syntax":"proxy_ssl_certificate file;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.8.\n            </p></div><p>\nSpecifies a <code><i>file</i></code> with the certificate in the PEM format\nused for authentication to a proxied HTTPS server.\n</p>"},{"directive":"proxy_ssl","defaultValue":"proxy_ssl off;","syntax":"proxy_ssl on | off;","context":"stream, server","description":"<p>\nEnables the SSL/TLS protocol for connections to a proxied server.\n</p>"},{"directive":"proxy_set_header","defaultValue":"proxy_set_header Host $proxy_host;proxy_set_header Connection close;","syntax":"proxy_set_header field value;","context":"http, server, location","description":"<p>\nAllows redefining or appending fields to the request header\n<a href=\"#proxy_pass_request_headers\">passed</a> to the proxied server.\nThe <code><i>value</i></code> can contain text, variables, and their combinations.\nThese directives are inherited from the previous level if and\nonly if there are no\n<code>proxy_set_header</code>\ndirectives defined on the current level.\nBy default, only two fields are redefined:\n</p> <blockquote class=\"example\"><pre>\nproxy_set_header Host       $proxy_host;\nproxy_set_header Connection close;\n</pre></blockquote><p> \nIf caching is enabled, the header fields\n“If-Modified-Since”,\n“If-Unmodified-Since”,\n“If-None-Match”,\n“If-Match”,\n“Range”,\nand\n“If-Range”\nfrom the original request are not passed to the proxied server.\n</p><p>\nAn unchanged “Host” request header field can be passed like this:\n</p> <blockquote class=\"example\"><pre>\nproxy_set_header Host       $http_host;\n</pre></blockquote><p> \n</p><p>\nHowever, if this field is not present in a client request header then\nnothing will be passed.\nIn such a case it is better to use the <code>$host</code> variable - its\nvalue equals the server name in the “Host” request header\nfield or the primary server name if this field is not present:\n</p> <blockquote class=\"example\"><pre>\nproxy_set_header Host       $host;\n</pre></blockquote><p> \n</p><p>\nIn addition, the server name can be passed together with the port of the\nproxied server:\n</p> <blockquote class=\"example\"><pre>\nproxy_set_header Host       $host:$proxy_port;\n</pre></blockquote><p> \n</p><p>\nIf the value of a header field is an empty string then this\nfield will not be passed to a proxied server:\n</p> <blockquote class=\"example\"><pre>\nproxy_set_header Accept-Encoding \"\";\n</pre></blockquote><p> \n</p>"},{"directive":"proxy_set_body","defaultValue":"—","syntax":"proxy_set_body value;","context":"http, server, location","description":"<p>\nAllows redefining the request body passed to the proxied server.\nThe <code><i>value</i></code> can contain text, variables, and their combination.\n</p>"},{"directive":"proxy_send_timeout","defaultValue":"proxy_send_timeout 60s;","syntax":"proxy_send_timeout time;","context":"http, server, location","description":"<p>\nSets a timeout for transmitting a request to the proxied server.\nThe timeout is set only between two successive write operations,\nnot for the transmission of the whole request.\nIf the proxied server does not receive anything within this time,\nthe connection is closed.\n</p>"},{"directive":"proxy_send_lowat","defaultValue":"proxy_send_lowat 0;","syntax":"proxy_send_lowat size;","context":"http, server, location","description":"<p>\nIf the directive is set to a non-zero value, nginx will try to\nminimize the number\nof send operations on outgoing connections to a proxied server by using either\n<code>NOTE_LOWAT</code> flag of the\n<a href=\"../events.html#kqueue\">kqueue</a> method,\nor the <code>SO_SNDLOWAT</code> socket option,\nwith the specified <code><i>size</i></code>.\n</p><p>\nThis directive is ignored on Linux, Solaris, and Windows.\n</p>"},{"directive":"proxy_responses","defaultValue":"—","syntax":"proxy_responses number;","context":"stream, server","description":"<p>This directive appeared in version 1.9.13.\n            </p></div><p>\nSets the number of datagrams expected from the proxied server\nin response to the client request\nif the <a href=\"ngx_stream_core_module.html#udp\">UDP</a>\nprotocol is used.\nBy default, the number of datagrams is not limited:\nthe response datagrams will be sent\nuntil the <a href=\"#proxy_timeout\">proxy_timeout</a> value expires.\n</p>"},{"directive":"proxy_request_buffering","defaultValue":"proxy_request_buffering on;","syntax":"proxy_request_buffering on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.11.\n            </p></div><p>\nEnables or disables buffering of a client request body.\n</p><p>\nWhen buffering is enabled, the entire request body is\n<a href=\"ngx_http_core_module.html#client_body_buffer_size\">read</a>\nfrom the client before sending the request to a proxied server.\n</p><p>\nWhen buffering is disabled, the request body is sent to the proxied server\nimmediately as it is received.\nIn this case, the request cannot be passed to the\n<a href=\"#proxy_next_upstream\">next server</a>\nif nginx already started sending the request body.\n</p><p>\nWhen HTTP/1.1 chunked transfer encoding is used\nto send the original request body,\nthe request body will be buffered regardless of the directive value unless\nHTTP/1.1 is <a href=\"#proxy_http_version\">enabled</a> for proxying.\n</p>"},{"directive":"proxy_redirect","defaultValue":"proxy_redirect default;","syntax":"proxy_redirect default;proxy_redirect off;proxy_redirect redirect replacement;","context":"http, server, location","description":"<p>\nSets the text that should be changed in the “Location”\nand “Refresh” header fields of a proxied server response.\nSuppose a proxied server returned the header field\n“<code>Location: http://localhost:8000/two/some/uri/</code>”.\nThe directive\n</p> <blockquote class=\"example\"><pre>\nproxy_redirect http://localhost:8000/two/ http://frontend/one/;\n</pre></blockquote><p> \nwill rewrite this string to\n“<code>Location: http://frontend/one/some/uri/</code>”.\n</p><p>\nA server name may be omitted in the <code><i>replacement</i></code> string:\n</p> <blockquote class=\"example\"><pre>\nproxy_redirect http://localhost:8000/two/ /;\n</pre></blockquote><p> \nthen the primary server’s name and port, if different from 80,\nwill be inserted.\n</p><p>\nThe default replacement specified by the <code>default</code> parameter\nuses the parameters of the\n<a href=\"ngx_http_core_module.html#location\">location</a> and\n<a href=\"#proxy_pass\">proxy_pass</a> directives.\nHence, the two configurations below are equivalent:\n</p> <blockquote class=\"example\"><pre>\nlocation /one/ {\n    proxy_pass     http://upstream:port/two/;\n    proxy_redirect default;\n</pre></blockquote><p> \n\n</p> <blockquote class=\"example\"><pre>\nlocation /one/ {\n    proxy_pass     http://upstream:port/two/;\n    proxy_redirect http://upstream:port/two/ /one/;\n</pre></blockquote><p> \nThe <code>default</code> parameter is not permitted if\n<a href=\"#proxy_pass\">proxy_pass</a> is specified using variables.\n</p><p>\nA <code><i>replacement</i></code> string can contain variables:\n</p> <blockquote class=\"example\"><pre>\nproxy_redirect http://localhost:8000/ http://$host:$server_port/;\n</pre></blockquote><p> \n</p><p>\nA <code><i>redirect</i></code> can also contain (1.1.11) variables:\n</p> <blockquote class=\"example\"><pre>\nproxy_redirect http://$proxy_host:8000/ /;\n</pre></blockquote><p> \n</p><p>\nThe directive can be specified (1.1.11) using regular expressions.\nIn this case, <code><i>redirect</i></code> should either start with\nthe “<code>~</code>” symbol for a case-sensitive matching,\nor with the “<code>~*</code>” symbols for case-insensitive\nmatching.\nThe regular expression can contain named and positional captures,\nand <code><i>replacement</i></code> can reference them:\n</p> <blockquote class=\"example\"><pre>\nproxy_redirect ~^(http://[^:]+):\\d+(/.+)$ $1$2;\nproxy_redirect ~*/user/([^/]+)/(.+)$      http://$1.example.com/$2;\n</pre></blockquote><p> \n</p><p>\nThere could be several <code>proxy_redirect</code> directives:\n</p> <blockquote class=\"example\"><pre>\nproxy_redirect default;\nproxy_redirect http://localhost:8000/  /;\nproxy_redirect http://www.example.com/ /;\n</pre></blockquote><p> \n</p><p>\nThe <code>off</code> parameter cancels the effect of all\n<code>proxy_redirect</code> directives on the current level:\n</p> <blockquote class=\"example\"><pre>\nproxy_redirect off;\nproxy_redirect default;\nproxy_redirect http://localhost:8000/  /;\nproxy_redirect http://www.example.com/ /;\n</pre></blockquote><p> \n</p><p>\nUsing this directive, it is also possible to add host names to relative\nredirects issued by a proxied server:\n</p> <blockquote class=\"example\"><pre>\nproxy_redirect / /;\n</pre></blockquote><p> \n</p>"},{"directive":"proxy_read_timeout","defaultValue":"proxy_read_timeout 60s;","syntax":"proxy_read_timeout time;","context":"http, server, location","description":"<p>\nDefines a timeout for reading a response from the proxied server.\nThe timeout is set only between two successive read operations,\nnot for the transmission of the whole response.\nIf the proxied server does not transmit anything within this time,\nthe connection is closed.\n</p>"},{"directive":"proxy_protocol_timeout","defaultValue":"proxy_protocol_timeout 30s;","syntax":"proxy_protocol_timeout timeout;","context":"stream, server","description":"<p>This directive appeared in version 1.11.4.\n            </p></div><p>\nSpecifies a <code><i>timeout</i></code> for\nreading the PROXY protocol header to complete.\nIf no entire header is transmitted within this time,\nthe connection is closed.\n</p>"},{"directive":"proxy_protocol","defaultValue":"proxy_protocol off;","syntax":"proxy_protocol on | off;","context":"stream, server","description":"<p>This directive appeared in version 1.9.2.\n            </p></div><p>\nEnables the\n<a href=\"http://www.haproxy.org/download/1.5/doc/proxy-protocol.txt\">PROXY\nprotocol</a> for connections to a proxied server.\n</p>"},{"directive":"proxy_pass_request_headers","defaultValue":"proxy_pass_request_headers on;","syntax":"proxy_pass_request_headers on | off;","context":"http, server, location","description":"<p>\nIndicates whether the header fields of the original request are passed\nto the proxied server.\n</p> <blockquote class=\"example\"><pre>\nlocation /x-accel-redirect-here/ {\n    proxy_method GET;\n    proxy_pass_request_headers off;\n    proxy_pass_request_body off;\n\n    proxy_pass ...\n}\n</pre></blockquote><p> \nSee also the <a href=\"#proxy_set_header\">proxy_set_header</a> and\n<a href=\"#proxy_pass_request_body\">proxy_pass_request_body</a> directives.\n</p>"},{"directive":"proxy_pass_request_body","defaultValue":"proxy_pass_request_body on;","syntax":"proxy_pass_request_body on | off;","context":"http, server, location","description":"<p>\nIndicates whether the original request body is passed\nto the proxied server.\n</p> <blockquote class=\"example\"><pre>\nlocation /x-accel-redirect-here/ {\n    proxy_method GET;\n    proxy_pass_request_body off;\n    proxy_set_header Content-Length \"\";\n\n    proxy_pass ...\n}\n</pre></blockquote><p> \nSee also the <a href=\"#proxy_set_header\">proxy_set_header</a> and\n<a href=\"#proxy_pass_request_headers\">proxy_pass_request_headers</a> directives.\n</p>"},{"directive":"proxy_pass_header","defaultValue":"—","syntax":"proxy_pass_header field;","context":"http, server, location","description":"<p>\nPermits passing <a href=\"#proxy_hide_header\">otherwise disabled</a> header\nfields from a proxied server to a client.\n</p>"},{"directive":"proxy_pass_error_message","defaultValue":"proxy_pass_error_message off;","syntax":"proxy_pass_error_message on | off;","context":"mail, server","description":"<p>\nIndicates whether to pass the error message obtained during\nthe authentication on the backend to the client.\n</p><p>\nUsually, if the authentication in nginx is a success,\nthe backend cannot return an error.\nIf it nevertheless returns an error,\nit means some internal error has occurred.\nIn such case the backend message can contain information\nthat should not be shown to the client.\nHowever, responding with an error for the correct password\nis a normal behavior for some POP3 servers.\nFor example, CommuniGatePro informs a user about\n<a href=\"http://www.stalker.com/CommuniGatePro/Alerts.html#Quota\">mailbox\noverflow</a> or other events by periodically outputting the\n<a href=\"http://www.stalker.com/CommuniGatePro/POP.html#Alerts\">authentication\nerror</a>.\nThe directive should be enabled in this case.\n</p>"},{"directive":"proxy_pass","defaultValue":"—","syntax":"proxy_pass address;","context":"server","description":"<p>\nSets the address of a proxied server.\nThe address can be specified as a domain name or IP address,\nand a port:\n</p> <blockquote class=\"example\"><pre>\nproxy_pass localhost:12345;\n</pre></blockquote><p> \nor as a UNIX-domain socket path:\n</p> <blockquote class=\"example\"><pre>\nproxy_pass unix:/tmp/stream.socket;\n</pre></blockquote><p> \n</p><p>\nIf a domain name resolves to several addresses, all of them will be\nused in a round-robin fashion.\nIn addition, an address can be specified as a\n<a href=\"ngx_stream_upstream_module.html\">server group</a>.\n</p><p>\nThe address can also be specified using variables (1.11.3):\n</p> <blockquote class=\"example\"><pre>\nproxy_pass $upstream;\n</pre></blockquote><p> \nIn this case, the server name is searched among the described\n<a href=\"ngx_stream_upstream_module.html\">server groups</a>,\nand, if not found, is determined using a\n<a href=\"ngx_stream_core_module.html#resolver\">resolver</a>.\n</p>"},{"directive":"proxy_pass","defaultValue":"—","syntax":"proxy_pass URL;","context":"location, if in location, limit_except","description":"<p>\nSets the protocol and address of a proxied server and an optional URI\nto which a location should be mapped.\nAs a protocol, “<code>http</code>” or “<code>https</code>”\ncan be specified.\nThe address can be specified as a domain name or IP address,\nand an optional port:\n</p> <blockquote class=\"example\"><pre>\nproxy_pass http://localhost:8000/uri/;\n</pre></blockquote><p> \nor as a UNIX-domain socket path specified after the word\n“<code>unix</code>” and enclosed in colons:\n</p> <blockquote class=\"example\"><pre>\nproxy_pass http://unix:/tmp/backend.socket:/uri/;\n</pre></blockquote><p> \n</p><p>\nIf a domain name resolves to several addresses, all of them will be\nused in a round-robin fashion.\nIn addition, an address can be specified as a\n<a href=\"ngx_http_upstream_module.html\">server group</a>.\n</p><p>\nParameter value can contain variables.\nIn this case, if an address is specified as a domain name,\nthe name is searched among the described server groups,\nand, if not found, is determined using a\n<a href=\"ngx_http_core_module.html#resolver\">resolver</a>.\n</p><p>\nA request URI is passed to the server as follows:\n</p> <ul>\n\n<li>\nIf the <code>proxy_pass</code> directive is specified with a URI,\nthen when a request is passed to the server, the part of a\n<a href=\"ngx_http_core_module.html#location\">normalized</a>\nrequest URI matching the location is replaced by a URI\nspecified in the directive:\n<blockquote class=\"example\"><pre>\nlocation /name/ {\n    proxy_pass http://127.0.0.1/remote/;\n}\n</pre></blockquote>\n</li>\n\n<li>\nIf <code>proxy_pass</code> is specified without a URI,\nthe request URI is passed to the server in the same form\nas sent by a client when the original request is processed,\nor the full normalized request URI is passed\nwhen processing the changed URI:\n<blockquote class=\"example\"><pre>\nlocation /some/path/ {\n    proxy_pass http://127.0.0.1;\n}\n</pre></blockquote>\n<blockquote class=\"note\">\nBefore version 1.1.12,\nif <code>proxy_pass</code> is specified without a URI,\nthe original request URI might be passed\ninstead of the changed URI in some cases.\n</blockquote>\n</li>\n</ul><p> \n</p><p>\nIn some cases, the part of a request URI to be replaced cannot be determined:\n</p> <ul>\n\n<li>\nWhen location is specified using a regular expression,\nand also inside named locations.\n<p>\nIn these cases,\n<code>proxy_pass</code> should be specified without a URI.\n</p>\n</li>\n\n<li>\nWhen the URI is changed inside a proxied location using the\n<a href=\"ngx_http_rewrite_module.html#rewrite\">rewrite</a> directive,\nand this same configuration will be used to process a request\n(<code>break</code>):\n<blockquote class=\"example\"><pre>\nlocation /name/ {\n    rewrite    /name/([^/]+) /users?name=$1 break;\n    proxy_pass http://127.0.0.1;\n}\n</pre></blockquote>\n<p>\nIn this case, the URI specified in the directive is ignored and\nthe full changed request URI is passed to the server.\n</p>\n</li>\n\n<li>\nWhen variables are used in <code>proxy_pass</code>:\n<blockquote class=\"example\"><pre>\nlocation /name/ {\n    proxy_pass http://127.0.0.1$request_uri;\n}\n</pre></blockquote>\nIn this case, if URI is specified in the directive,\nit is passed to the server as is,\nreplacing the original request URI.\n</li>\n</ul><p> \n</p><p>\n<a href=\"websocket.html\">WebSocket</a> proxying requires special\nconfiguration and is supported since version 1.3.13.\n</p>"},{"directive":"proxy_no_cache","defaultValue":"—","syntax":"proxy_no_cache string ...;","context":"http, server, location","description":"<p>\nDefines conditions under which the response will not be saved to a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to “0” then the response will not be saved:\n</p> <blockquote class=\"example\"><pre>\nproxy_no_cache $cookie_nocache $arg_nocache$arg_comment;\nproxy_no_cache $http_pragma    $http_authorization;\n</pre></blockquote><p> \nCan be used along with the <a href=\"#proxy_cache_bypass\">proxy_cache_bypass</a> directive.\n</p>"},{"directive":"proxy_next_upstream_tries","defaultValue":"proxy_next_upstream_tries 0;","syntax":"proxy_next_upstream_tries number;","context":"stream, server","description":"<p>\nLimits the number of possible tries for passing a connection to the\n<a href=\"#proxy_next_upstream\">next server</a>.\nThe <code>0</code> value turns off this limitation.\n</p>"},{"directive":"proxy_next_upstream_tries","defaultValue":"proxy_next_upstream_tries 0;","syntax":"proxy_next_upstream_tries number;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.5.\n            </p></div><p>\nLimits the number of possible tries for passing a request to the\n<a href=\"#proxy_next_upstream\">next server</a>.\nThe <code>0</code> value turns off this limitation.\n</p>"},{"directive":"proxy_next_upstream_timeout","defaultValue":"proxy_next_upstream_timeout 0;","syntax":"proxy_next_upstream_timeout time;","context":"stream, server","description":"<p>\nLimits the time allowed to pass a connection to the\n<a href=\"#proxy_next_upstream\">next server</a>.\nThe <code>0</code> value turns off this limitation.\n</p>"},{"directive":"proxy_next_upstream_timeout","defaultValue":"proxy_next_upstream_timeout 0;","syntax":"proxy_next_upstream_timeout time;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.5.\n            </p></div><p>\nLimits the time during which a request can be passed to the\n<a href=\"#proxy_next_upstream\">next server</a>.\nThe <code>0</code> value turns off this limitation.\n</p>"},{"directive":"proxy_next_upstream","defaultValue":"proxy_next_upstream on;","syntax":"proxy_next_upstream on | off;","context":"stream, server","description":"<p>\nWhen a connection to the proxied server cannot be established, determines\nwhether a client connection will be passed to the next server.\n</p><p>\nPassing a connection to the next server can be limited by\n<a href=\"#proxy_next_upstream_tries\">the number of tries</a>\nand by <a href=\"#proxy_next_upstream_timeout\">time</a>.\n</p>"},{"directive":"proxy_next_upstream","defaultValue":"proxy_next_upstream error timeout;","syntax":"proxy_next_upstream     error |    timeout |    invalid_header |    http_500 |    http_502 |    http_503 |    http_504 |    http_403 |    http_404 |    http_429 |    non_idempotent |    off    ...;","context":"http, server, location","description":"<p>\nSpecifies in which cases a request should be passed to the next server:\n</p> <dl class=\"compact\">\n\n<dt><code>error</code></dt>\n<dd>an error occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;</dd>\n\n<dt><code>timeout</code></dt>\n<dd>a timeout has occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;</dd>\n\n<dt><code>invalid_header</code></dt>\n<dd>a server returned an empty or invalid response;</dd>\n\n<dt><code>http_500</code></dt>\n<dd>a server returned a response with the code 500;</dd>\n\n<dt><code>http_502</code></dt>\n<dd>a server returned a response with the code 502;</dd>\n\n<dt><code>http_503</code></dt>\n<dd>a server returned a response with the code 503;</dd>\n\n<dt><code>http_504</code></dt>\n<dd>a server returned a response with the code 504;</dd>\n\n<dt><code>http_403</code></dt>\n<dd>a server returned a response with the code 403;</dd>\n\n<dt><code>http_404</code></dt>\n<dd>a server returned a response with the code 404;</dd>\n\n<dt><code>http_429</code></dt>\n<dd>a server returned a response with the code 429 (1.11.13);</dd>\n\n<dt id=\"non_idempotent\"><code>non_idempotent</code></dt>\n<dd>normally, requests with a\n<a href=\"https://tools.ietf.org/html/rfc7231#section-4.2.2\">non-idempotent</a>\nmethod\n(<code>POST</code>, <code>LOCK</code>, <code>PATCH</code>)\nare not passed to the next server\nif a request has been sent to an upstream server (1.9.13);\nenabling this option explicitly allows retrying such requests;\n</dd>\n\n<dt><code>off</code></dt>\n<dd>disables passing a request to the next server.</dd>\n\n</dl><p> \n</p><p>\nOne should bear in mind that passing a request to the next server is\nonly possible if nothing has been sent to a client yet.\nThat is, if an error or timeout occurs in the middle of the\ntransferring of a response, fixing this is impossible.\n</p><p>\nThe directive also defines what is considered an\n<a href=\"ngx_http_upstream_module.html#max_fails\">unsuccessful\nattempt</a> of communication with a server.\nThe cases of <code>error</code>, <code>timeout</code> and\n<code>invalid_header</code> are always considered unsuccessful attempts,\neven if they are not specified in the directive.\nThe cases of <code>http_500</code>, <code>http_502</code>,\n<code>http_503</code>, <code>http_504</code>,\nand <code>http_429</code> are\nconsidered unsuccessful attempts only if they are specified in the directive.\nThe cases of <code>http_403</code> and <code>http_404</code>\nare never considered unsuccessful attempts.\n</p><p>\nPassing a request to the next server can be limited by\n<a href=\"#proxy_next_upstream_tries\">the number of tries</a>\nand by <a href=\"#proxy_next_upstream_timeout\">time</a>.\n</p>"},{"directive":"proxy_method","defaultValue":"—","syntax":"proxy_method method;","context":"http, server, location","description":"<p>\nSpecifies the HTTP <code><i>method</i></code> to use in requests forwarded\nto the proxied server instead of the method from the client request.\nParameter value can contain variables (1.11.6).\n</p>"},{"directive":"proxy_max_temp_file_size","defaultValue":"proxy_max_temp_file_size 1024m;","syntax":"proxy_max_temp_file_size size;","context":"http, server, location","description":"<p>\nWhen <a href=\"#proxy_buffering\">buffering</a> of responses from the proxied\nserver is enabled, and the whole response does not fit into the buffers\nset by the <a href=\"#proxy_buffer_size\">proxy_buffer_size</a> and <a href=\"#proxy_buffers\">proxy_buffers</a>\ndirectives, a part of the response can be saved to a temporary file.\nThis directive sets the maximum <code><i>size</i></code> of the temporary file.\nThe size of data written to the temporary file at a time is set\nby the <a href=\"#proxy_temp_file_write_size\">proxy_temp_file_write_size</a> directive.\n</p><p>\nThe zero value disables buffering of responses to temporary files.\n</p><p>\n</p> <blockquote class=\"note\">\nThis restriction does not apply to responses\nthat will be <a href=\"#proxy_cache\">cached</a>\nor <a href=\"#proxy_store\">stored</a> on disk.\n</blockquote><p> \n</p>"},{"directive":"proxy_limit_rate","defaultValue":"proxy_limit_rate 0;","syntax":"proxy_limit_rate rate;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.7.\n            </p></div><p>\nLimits the speed of reading the response from the proxied server.\nThe <code><i>rate</i></code> is specified in bytes per second.\nThe zero value disables rate limiting.\nThe limit is set per a request, and so if nginx simultaneously opens\ntwo connections to the proxied server,\nthe overall rate will be twice as much as the specified limit.\nThe limitation works only if\n<a href=\"#proxy_buffering\">buffering</a> of responses from the proxied\nserver is enabled.\n</p>"},{"directive":"proxy_intercept_errors","defaultValue":"proxy_intercept_errors off;","syntax":"proxy_intercept_errors on | off;","context":"http, server, location","description":"<p>\nDetermines whether proxied responses with codes greater than or equal\nto 300 should be passed to a client\nor be intercepted and redirected to nginx for processing\nwith the <a href=\"ngx_http_core_module.html#error_page\">error_page</a> directive.\n</p>"},{"directive":"proxy_ignore_headers","defaultValue":"—","syntax":"proxy_ignore_headers field ...;","context":"http, server, location","description":"<p>\nDisables processing of certain response header fields from the proxied server.\nThe following fields can be ignored: “X-Accel-Redirect”,\n“X-Accel-Expires”, “X-Accel-Limit-Rate” (1.1.6),\n“X-Accel-Buffering” (1.1.6),\n“X-Accel-Charset” (1.1.6), “Expires”,\n“Cache-Control”, “Set-Cookie” (0.8.44),\nand “Vary” (1.7.7).\n</p><p>\nIf not disabled, processing of these header fields has the following\neffect:\n</p> <ul>\n\n<li>\n“X-Accel-Expires”, “Expires”,\n“Cache-Control”, “Set-Cookie”,\nand “Vary”\nset the parameters of response <a href=\"#proxy_cache_valid\">caching</a>;\n</li>\n\n<li>\n“X-Accel-Redirect” performs an\n<a href=\"ngx_http_core_module.html#internal\">internal\nredirect</a> to the specified URI;\n</li>\n\n<li>\n“X-Accel-Limit-Rate” sets the\n<a href=\"ngx_http_core_module.html#limit_rate\">rate\nlimit</a> for transmission of a response to a client;\n</li>\n\n<li>\n“X-Accel-Buffering” enables or disables\n<a href=\"#proxy_buffering\">buffering</a> of a response;\n</li>\n\n<li>\n“X-Accel-Charset” sets the desired\n<a href=\"ngx_http_charset_module.html#charset\">charset</a>\nof a response.\n</li>\n\n</ul><p> \n</p>"},{"directive":"proxy_ignore_client_abort","defaultValue":"proxy_ignore_client_abort off;","syntax":"proxy_ignore_client_abort on | off;","context":"http, server, location","description":"<p>\nDetermines whether the connection with a proxied server should be\nclosed when a client closes the connection without waiting\nfor a response.\n</p>"},{"directive":"proxy_http_version","defaultValue":"proxy_http_version 1.0;","syntax":"proxy_http_version 1.0 | 1.1;","context":"http, server, location","description":"<p>This directive appeared in version 1.1.4.\n            </p></div><p>\nSets the HTTP protocol version for proxying.\nBy default, version 1.0 is used.\nVersion 1.1 is recommended for use with\n<a href=\"ngx_http_upstream_module.html#keepalive\">keepalive</a>\nconnections and\n<a href=\"ngx_http_upstream_module.html#ntlm\">NTLM authentication</a>.\n</p>"},{"directive":"proxy_hide_header","defaultValue":"—","syntax":"proxy_hide_header field;","context":"http, server, location","description":"<p>\nBy default,\nnginx does not pass the header fields “Date”,\n“Server”, “X-Pad”, and\n“X-Accel-...” from the response of a proxied\nserver to a client.\nThe <code>proxy_hide_header</code> directive sets additional fields\nthat will not be passed.\nIf, on the contrary, the passing of fields needs to be permitted,\nthe <a href=\"#proxy_pass_header\">proxy_pass_header</a> directive can be used.\n</p>"},{"directive":"proxy_headers_hash_max_size","defaultValue":"proxy_headers_hash_max_size 512;","syntax":"proxy_headers_hash_max_size size;","context":"http, server, location","description":"<p>\nSets the maximum <code><i>size</i></code> of hash tables\nused by the <a href=\"#proxy_hide_header\">proxy_hide_header</a> and <a href=\"#proxy_set_header\">proxy_set_header</a>\ndirectives.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p>"},{"directive":"proxy_headers_hash_bucket_size","defaultValue":"proxy_headers_hash_bucket_size 64;","syntax":"proxy_headers_hash_bucket_size size;","context":"http, server, location","description":"<p>\nSets the bucket <code><i>size</i></code> for hash tables\nused by the <a href=\"#proxy_hide_header\">proxy_hide_header</a> and <a href=\"#proxy_set_header\">proxy_set_header</a>\ndirectives.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p>"},{"directive":"proxy_force_ranges","defaultValue":"proxy_force_ranges off;","syntax":"proxy_force_ranges on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.7.\n            </p></div><p>\nEnables byte-range support\nfor both cached and uncached responses from the proxied server\nregardless of the “Accept-Ranges” field in these responses.\n</p>"},{"directive":"proxy_download_rate","defaultValue":"proxy_download_rate 0;","syntax":"proxy_download_rate rate;","context":"stream, server","description":"<p>This directive appeared in version 1.9.3.\n            </p></div><p>\nLimits the speed of reading the data from the proxied server.\nThe <code><i>rate</i></code> is specified in bytes per second.\nThe zero value disables rate limiting.\nThe limit is set per a connection, so if nginx simultaneously opens\ntwo connections to the proxied server,\nthe overall rate will be twice as much as the specified limit.\n</p>"},{"directive":"proxy_cookie_path","defaultValue":"proxy_cookie_path off;","syntax":"proxy_cookie_path off;proxy_cookie_path path replacement;","context":"http, server, location","description":"<p>This directive appeared in version 1.1.15.\n            </p></div><p>\nSets a text that should be changed in the <code>path</code>\nattribute of the “Set-Cookie” header fields of a\nproxied server response.\nSuppose a proxied server returned the “Set-Cookie”\nheader field with the attribute\n“<code>path=/two/some/uri/</code>”.\nThe directive\n</p> <blockquote class=\"example\"><pre>\nproxy_cookie_path /two/ /;\n</pre></blockquote><p> \nwill rewrite this attribute to\n“<code>path=/some/uri/</code>”.\n</p><p>\nThe <code><i>path</i></code> and <code><i>replacement</i></code> strings\ncan contain variables:\n</p> <blockquote class=\"example\"><pre>\nproxy_cookie_path $uri /some$uri;\n</pre></blockquote><p> \n</p><p>\nThe directive can also be specified using regular expressions.\nIn this case, <code><i>path</i></code> should either start from\nthe “<code>~</code>” symbol for a case-sensitive matching,\nor from the “<code>~*</code>” symbols for case-insensitive\nmatching.\nThe regular expression can contain named and positional captures,\nand <code><i>replacement</i></code> can reference them:\n</p> <blockquote class=\"example\"><pre>\nproxy_cookie_path ~*^/user/([^/]+) /u/$1;\n</pre></blockquote><p> \n</p><p>\nThere could be several <code>proxy_cookie_path</code> directives:\n</p> <blockquote class=\"example\"><pre>\nproxy_cookie_path /one/ /;\nproxy_cookie_path / /two/;\n</pre></blockquote><p> \n</p><p>\nThe <code>off</code> parameter cancels the effect of all\n<code>proxy_cookie_path</code> directives on the current level:\n</p> <blockquote class=\"example\"><pre>\nproxy_cookie_path off;\nproxy_cookie_path /two/ /;\nproxy_cookie_path ~*^/user/([^/]+) /u/$1;\n</pre></blockquote><p> \n</p>"},{"directive":"proxy_cookie_domain","defaultValue":"proxy_cookie_domain off;","syntax":"proxy_cookie_domain off;proxy_cookie_domain domain replacement;","context":"http, server, location","description":"<p>This directive appeared in version 1.1.15.\n            </p></div><p>\nSets a text that should be changed in the <code>domain</code>\nattribute of the “Set-Cookie” header fields of a\nproxied server response.\nSuppose a proxied server returned the “Set-Cookie”\nheader field with the attribute\n“<code>domain=localhost</code>”.\nThe directive\n</p> <blockquote class=\"example\"><pre>\nproxy_cookie_domain localhost example.org;\n</pre></blockquote><p> \nwill rewrite this attribute to\n“<code>domain=example.org</code>”.\n</p><p>\nA dot at the beginning of the <code><i>domain</i></code> and\n<code><i>replacement</i></code> strings and the <code>domain</code>\nattribute is ignored.\nMatching is case-insensitive.\n</p><p>\nThe <code><i>domain</i></code> and <code><i>replacement</i></code> strings\ncan contain variables:\n</p> <blockquote class=\"example\"><pre>\nproxy_cookie_domain www.$host $host;\n</pre></blockquote><p> \n</p><p>\nThe directive can also be specified using regular expressions.\nIn this case, <code><i>domain</i></code> should start from\nthe “<code>~</code>” symbol.\nA regular expression can contain named and positional captures,\nand <code><i>replacement</i></code> can reference them:\n</p> <blockquote class=\"example\"><pre>\nproxy_cookie_domain ~\\.(?P&lt;sl_domain&gt;[-0-9a-z]+\\.[a-z]+)$ $sl_domain;\n</pre></blockquote><p> \n</p><p>\nThere could be several <code>proxy_cookie_domain</code> directives:\n</p> <blockquote class=\"example\"><pre>\nproxy_cookie_domain localhost example.org;\nproxy_cookie_domain ~\\.([a-z]+\\.[a-z]+)$ $1;\n</pre></blockquote><p> \n</p><p>\nThe <code>off</code> parameter cancels the effect of all\n<code>proxy_cookie_domain</code> directives on the current level:\n</p> <blockquote class=\"example\"><pre>\nproxy_cookie_domain off;\nproxy_cookie_domain localhost example.org;\nproxy_cookie_domain www.example.org example.org;\n</pre></blockquote><p> \n</p>"},{"directive":"proxy_connect_timeout","defaultValue":"proxy_connect_timeout 60s;","syntax":"proxy_connect_timeout time;","context":"stream, server","description":"<p>\nDefines a timeout for establishing a connection with a proxied server.\n</p>"},{"directive":"proxy_connect_timeout","defaultValue":"proxy_connect_timeout 60s;","syntax":"proxy_connect_timeout time;","context":"http, server, location","description":"<p>\nDefines a timeout for establishing a connection with a proxied server.\nIt should be noted that this timeout cannot usually exceed 75 seconds.\n</p>"},{"directive":"proxy_cache_valid","defaultValue":"—","syntax":"proxy_cache_valid [code ...] time;","context":"http, server, location","description":"<p>\nSets caching time for different response codes.\nFor example, the following directives\n</p> <blockquote class=\"example\"><pre>\nproxy_cache_valid 200 302 10m;\nproxy_cache_valid 404      1m;\n</pre></blockquote><p> \nset 10 minutes of caching for responses with codes 200 and 302\nand 1 minute for responses with code 404.\n</p><p>\nIf only caching <code><i>time</i></code> is specified\n</p> <blockquote class=\"example\"><pre>\nproxy_cache_valid 5m;\n</pre></blockquote><p> \nthen only 200, 301, and 302 responses are cached.\n</p><p>\nIn addition, the <code>any</code> parameter can be specified\nto cache any responses:\n</p> <blockquote class=\"example\"><pre>\nproxy_cache_valid 200 302 10m;\nproxy_cache_valid 301      1h;\nproxy_cache_valid any      1m;\n</pre></blockquote><p> \n</p><p>\nParameters of caching can also be set directly\nin the response header.\nThis has higher priority than setting of caching time using the directive.\n</p> <ul>\n\n<li>\nThe “X-Accel-Expires” header field sets caching time of a\nresponse in seconds.\nThe zero value disables caching for a response.\nIf the value starts with the <code>@</code> prefix, it sets an absolute\ntime in seconds since Epoch, up to which the response may be cached.\n</li>\n\n<li>\nIf the header does not include the “X-Accel-Expires” field,\nparameters of caching may be set in the header fields\n“Expires” or “Cache-Control”.\n</li>\n\n<li>\nIf the header includes the “Set-Cookie” field, such a\nresponse will not be cached.\n</li>\n\n<li>\nIf the header includes the “Vary” field\nwith the special value “<code>*</code>”, such a\nresponse will not be cached (1.7.7).\nIf the header includes the “Vary” field\nwith another value, such a response will be cached\ntaking into account the corresponding request header fields (1.7.7).\n</li>\n\n</ul><p> \nProcessing of one or more of these response header fields can be disabled\nusing the <a href=\"#proxy_ignore_headers\">proxy_ignore_headers</a> directive.\n</p>"},{"directive":"proxy_cache_use_stale","defaultValue":"proxy_cache_use_stale off;","syntax":"proxy_cache_use_stale     error |    timeout |    invalid_header |    updating |    http_500 |    http_502 |    http_503 |    http_504 |    http_403 |    http_404 |    http_429 |    off    ...;","context":"http, server, location","description":"<p>\nDetermines in which cases a stale cached response can be used\nduring communication with the proxied server.\nThe directive’s parameters match the parameters of the\n<a href=\"#proxy_next_upstream\">proxy_next_upstream</a> directive.\n</p><p>\nThe <code>error</code> parameter also permits\nusing a stale cached response if a proxied server to process a request\ncannot be selected.\n</p>"},{"directive":"proxy_cache_revalidate","defaultValue":"proxy_cache_revalidate off;","syntax":"proxy_cache_revalidate on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.5.7.\n            </p></div><p>\nEnables revalidation of expired cache items using conditional requests with\nthe “If-Modified-Since” and “If-None-Match”\nheader fields.\n</p>"},{"directive":"proxy_cache_purge","defaultValue":"—","syntax":"proxy_cache_purge string ...;","context":"http, server, location","description":"<p>This directive appeared in version 1.5.7.\n            </p></div><p>\nDefines conditions under which the request will be considered a cache\npurge request.\nIf at least one value of the string parameters is not empty and is not equal\nto “0” then the cache entry with a corresponding\n<a href=\"#proxy_cache_key\">cache key</a> is removed.\nThe result of successful operation is indicated by returning\nthe 204 (No Content) response.\n</p><p>\nIf the <a href=\"#proxy_cache_key\">cache key</a> of a purge request ends\nwith an asterisk (“<code>*</code>”), all cache entries matching the\nwildcard key will be removed from the cache.\nHowever, these entries will remain on the disk until they are deleted\nfor either <a href=\"#proxy_cache_path\">inactivity</a>,\nor processed by the <a href=\"#purger\">cache purger</a> (1.7.12),\nor a client attempts to access them.\n</p><p>\nExample configuration:\n</p> <blockquote class=\"example\"><pre>\nproxy_cache_path /data/nginx/cache keys_zone=cache_zone:10m;\n\nmap $request_method $purge_method {\n    PURGE   1;\n    default 0;\n}\n\nserver {\n    ...\n    location / {\n        proxy_pass http://backend;\n        proxy_cache cache_zone;\n        proxy_cache_key $uri;\n        proxy_cache_purge $purge_method;\n    }\n}\n</pre></blockquote><p> \n</p> <blockquote class=\"note\">\nThis functionality is available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote><p> \n</p>"},{"directive":"proxy_cache_path","defaultValue":"—","syntax":"proxy_cache_path     path    [levels=levels]    [use_temp_path=on|off]    keys_zone=name:size    [inactive=time]    [max_size=size]    [manager_files=number]    [manager_sleep=time]    [manager_threshold=time]    [loader_files=number]    [loader_sleep=time]    [loader_threshold=time]    [purger=on|off]    [purger_files=number]    [purger_sleep=time]    [purger_threshold=time];","context":"http","description":"<p>\nSets the path and other parameters of a cache.\nCache data are stored in files.\nThe file name in a cache is a result of\napplying the MD5 function to the\n<a href=\"#proxy_cache_key\">cache key</a>.\nThe <code>levels</code> parameter defines hierarchy levels of a cache:\nfrom 1 to 3, each level accepts values 1 or 2.\nFor example, in the following configuration\n</p> <blockquote class=\"example\"><pre>\nproxy_cache_path /data/nginx/cache levels=1:2 keys_zone=one:10m;\n</pre></blockquote><p> \nfile names in a cache will look like this:\n</p> <blockquote class=\"example\"><pre>\n/data/nginx/cache/<strong>c</strong>/<strong>29</strong>/b7f54b2df7773722d382f4809d650<strong>29c</strong>\n</pre></blockquote><p> \n</p><p>\nA cached response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the cache can be put on\ndifferent file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both cache and a directory\nholding temporary files\nare put on the same file system.\nThe directory for temporary files is set based on\nthe <code>use_temp_path</code> parameter (1.7.10).\nIf this parameter is omitted or set to the value <code>on</code>,\nthe directory set by the <a href=\"#proxy_temp_path\">proxy_temp_path</a> directive\nfor the given location will be used.\nIf the value is set to <code>off</code>,\ntemporary files will be put directly in the cache directory.\n</p><p>\nIn addition, all active keys and information about data are stored\nin a shared memory zone, whose <code><i>name</i></code> and <code><i>size</i></code>\nare configured by the <code>keys_zone</code> parameter.\nOne megabyte zone can store about 8 thousand keys.\n</p><p>\nCached data that are not accessed during the time specified by the\n<code>inactive</code> parameter get removed from the cache\nregardless of their freshness.\nBy default, <code>inactive</code> is set to 10 minutes.\n</p><p>\nThe special “cache manager” process monitors the maximum cache size set\nby the <code>max_size</code> parameter.\nWhen this size is exceeded, it removes the least recently used data.\nThe data is removed in iterations configured by\n<code>manager_files</code>,\n<code>manager_threshold</code>, and\n<code>manager_sleep</code> parameters (1.11.5).\nDuring one iteration no more than <code>manager_files</code> items\nare deleted (by default, 100).\nThe duration of one iteration is limited by the\n<code>manager_threshold</code> parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the <code>manager_sleep</code>\nparameter (by default, 50 milliseconds) is made.\n</p><p>\nA minute after the start the special “cache loader” process is activated.\nIt loads information about previously cached data stored on file system\ninto a cache zone.\nThe loading is also done in iterations.\nDuring one iteration no more than <code>loader_files</code> items\nare loaded (by default, 100).\nBesides, the duration of one iteration is limited by the\n<code>loader_threshold</code> parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the <code>loader_sleep</code>\nparameter (by default, 50 milliseconds) is made.\n</p><p>\nAdditionally,\nthe following parameters are available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>:\n</p><p>\n</p> <dl class=\"compact\">\n\n<dt id=\"purger\">\n<code>purger</code>=<code>on</code>|<code>off</code>\n</dt>\n<dd>\nInstructs whether cache entries that match a\n<a href=\"#proxy_cache_purge\">wildcard key</a>\nwill be removed from the disk by the cache purger (1.7.12).\nSetting the parameter to <code>on</code>\n(default is <code>off</code>)\nwill activate the “cache purger” process that\npermanently iterates through all cache entries\nand deletes the entries that match the wildcard key.\n</dd>\n\n<dt id=\"purger_files\">\n<code>purger_files</code>=<code><i>number</i></code>\n</dt>\n<dd>\nSets the number of items that will be scanned during one iteration (1.7.12).\nBy default, <code>purger_files</code> is set to 10.\n</dd>\n\n<dt id=\"purger_threshold\">\n<code>purger_threshold</code>=<code><i>number</i></code>\n</dt>\n<dd>\nSets the duration of one iteration (1.7.12).\nBy default, <code>purger_threshold</code> is set to 50 milliseconds.\n</dd>\n\n<dt id=\"purger_sleep\">\n<code>purger_sleep</code>=<code><i>number</i></code>\n</dt>\n<dd>\nSets a pause between iterations (1.7.12).\nBy default, <code>purger_sleep</code> is set to 50 milliseconds.\n</dd>\n\n</dl><p> \n</p><p>\n</p> <blockquote class=\"note\">\nIn versions 1.7.3, 1.7.7, and 1.11.10 cache header format has been changed.\nPreviously cached responses will be considered invalid\nafter upgrading to a newer nginx version.\n</blockquote><p> \n</p>"},{"directive":"proxy_cache_min_uses","defaultValue":"proxy_cache_min_uses 1;","syntax":"proxy_cache_min_uses number;","context":"http, server, location","description":"<p>\nSets the <code><i>number</i></code> of requests after which the response\nwill be cached.\n</p>"},{"directive":"proxy_cache_methods","defaultValue":"proxy_cache_methods GET HEAD;","syntax":"proxy_cache_methods     GET |    HEAD |    POST    ...;","context":"http, server, location","description":"<p>This directive appeared in version 0.7.59.\n            </p></div><p>\nIf the client request method is listed in this directive then\nthe response will be cached.\n“<code>GET</code>” and “<code>HEAD</code>” methods are always\nadded to the list, though it is recommended to specify them explicitly.\nSee also the <a href=\"#proxy_no_cache\">proxy_no_cache</a> directive.\n</p>"},{"directive":"proxy_cache_max_range_offset","defaultValue":"—","syntax":"proxy_cache_max_range_offset number;","context":"http, server, location","description":"<p>This directive appeared in version 1.11.6.\n            </p></div><p>\nSets an offset in bytes for byte-range requests.\nIf the range is beyond the offset,\nthe range request will be passed to the proxied server\nand the response will not be cached.\n</p>"},{"directive":"proxy_cache_lock_timeout","defaultValue":"proxy_cache_lock_timeout 5s;","syntax":"proxy_cache_lock_timeout time;","context":"http, server, location","description":"<p>This directive appeared in version 1.1.12.\n            </p></div><p>\nSets a timeout for <a href=\"#proxy_cache_lock\">proxy_cache_lock</a>.\nWhen the <code><i>time</i></code> expires,\nthe request will be passed to the proxied server,\nhowever, the response will not be cached.\n</p> <blockquote class=\"note\">\nBefore 1.7.8, the response could be cached.\n</blockquote><p> \n</p>"},{"directive":"proxy_cache_lock_age","defaultValue":"proxy_cache_lock_age 5s;","syntax":"proxy_cache_lock_age time;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.8.\n            </p></div><p>\nIf the last request passed to the proxied server\nfor populating a new cache element\nhas not completed for the specified <code><i>time</i></code>,\none more request may be passed to the proxied server.\n</p>"},{"directive":"proxy_cache_lock","defaultValue":"proxy_cache_lock off;","syntax":"proxy_cache_lock on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.1.12.\n            </p></div><p>\nWhen enabled, only one request at a time will be allowed to populate\na new cache element identified according to the <a href=\"#proxy_cache_key\">proxy_cache_key</a>\ndirective by passing a request to a proxied server.\nOther requests of the same cache element will either wait\nfor a response to appear in the cache or the cache lock for\nthis element to be released, up to the time set by the\n<a href=\"#proxy_cache_lock_timeout\">proxy_cache_lock_timeout</a> directive.\n</p>"},{"directive":"proxy_cache_key","defaultValue":"proxy_cache_key $scheme$proxy_host$request_uri;","syntax":"proxy_cache_key string;","context":"http, server, location","description":"<p>\nDefines a key for caching, for example\n</p> <blockquote class=\"example\"><pre>\nproxy_cache_key \"$host$request_uri $cookie_user\";\n</pre></blockquote><p> \nBy default, the directive’s value is close to the string\n</p> <blockquote class=\"example\"><pre>\nproxy_cache_key $scheme$proxy_host$uri$is_args$args;\n</pre></blockquote><p> \n</p>"},{"directive":"proxy_cache_convert_head","defaultValue":"proxy_cache_convert_head on;","syntax":"proxy_cache_convert_head on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.9.7.\n            </p></div><p>\nEnables or disables the conversion of the “<code>HEAD</code>” method\nto “<code>GET</code>” for caching.\nWhen the conversion is disabled, the\n<a href=\"#proxy_cache_key\">cache key</a> should be configured\nto include the <code>$request_method</code>.\n</p>"},{"directive":"proxy_cache_bypass","defaultValue":"—","syntax":"proxy_cache_bypass string ...;","context":"http, server, location","description":"<p>\nDefines conditions under which the response will not be taken from a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to “0” then the response will not be taken from the cache:\n</p> <blockquote class=\"example\"><pre>\nproxy_cache_bypass $cookie_nocache $arg_nocache$arg_comment;\nproxy_cache_bypass $http_pragma    $http_authorization;\n</pre></blockquote><p> \nCan be used along with the <a href=\"#proxy_no_cache\">proxy_no_cache</a> directive.\n</p>"},{"directive":"proxy_cache_background_update","defaultValue":"proxy_cache_background_update off;","syntax":"proxy_cache_background_update on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.11.10.\n            </p></div><p>\nAllows starting a background subrequest\nto update an expired cache item,\nwhile a stale cached response is returned to the client.\nNote that it is necessary to\n<a href=\"#proxy_cache_use_stale_updating\">allow</a>\nthe usage of a stale cached response when it is being updated.\n</p>"},{"directive":"proxy_cache","defaultValue":"proxy_cache off;","syntax":"proxy_cache zone | off;","context":"http, server, location","description":"<p>\nDefines a shared memory zone used for caching.\nThe same zone can be used in several places.\nParameter value can contain variables (1.7.9).\nThe <code>off</code> parameter disables caching inherited\nfrom the previous configuration level.\n</p>"},{"directive":"proxy_busy_buffers_size","defaultValue":"proxy_busy_buffers_size 8k|16k;","syntax":"proxy_busy_buffers_size size;","context":"http, server, location","description":"<p>\nWhen <a href=\"#proxy_buffering\">buffering</a> of responses from the proxied\nserver is enabled, limits the total <code><i>size</i></code> of buffers that\ncan be busy sending a response to the client while the response is not\nyet fully read.\nIn the meantime, the rest of the buffers can be used for reading the response\nand, if needed, buffering part of the response to a temporary file.\nBy default, <code><i>size</i></code> is limited by the size of two buffers set by the\n<a href=\"#proxy_buffer_size\">proxy_buffer_size</a> and <a href=\"#proxy_buffers\">proxy_buffers</a> directives.\n</p>"},{"directive":"proxy_buffers","defaultValue":"proxy_buffers 8 4k|8k;","syntax":"proxy_buffers number size;","context":"http, server, location","description":"<p>\nSets the <code><i>number</i></code> and <code><i>size</i></code> of the\nbuffers used for reading a response from the proxied server,\nfor a single connection.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\n</p>"},{"directive":"proxy_buffering","defaultValue":"proxy_buffering on;","syntax":"proxy_buffering on | off;","context":"http, server, location","description":"<p>\nEnables or disables buffering of responses from the proxied server.\n</p><p>\nWhen buffering is enabled, nginx receives a response from the proxied server\nas soon as possible, saving it into the buffers set by the\n<a href=\"#proxy_buffer_size\">proxy_buffer_size</a> and <a href=\"#proxy_buffers\">proxy_buffers</a> directives.\nIf the whole response does not fit into memory, a part of it can be saved\nto a <a href=\"#proxy_temp_path\">temporary file</a> on the disk.\nWriting to temporary files is controlled by the\n<a href=\"#proxy_max_temp_file_size\">proxy_max_temp_file_size</a> and\n<a href=\"#proxy_temp_file_write_size\">proxy_temp_file_write_size</a> directives.\n</p><p>\nWhen buffering is disabled, the response is passed to a client synchronously,\nimmediately as it is received.\nnginx will not try to read the whole response from the proxied server.\nThe maximum size of the data that nginx can receive from the server\nat a time is set by the <a href=\"#proxy_buffer_size\">proxy_buffer_size</a> directive.\n</p><p>\nBuffering can also be enabled or disabled by passing\n“<code>yes</code>” or “<code>no</code>” in the\n“X-Accel-Buffering” response header field.\nThis capability can be disabled using the\n<a href=\"#proxy_ignore_headers\">proxy_ignore_headers</a> directive.\n</p>"},{"directive":"proxy_buffer_size","defaultValue":"proxy_buffer_size 16k;","syntax":"proxy_buffer_size size;","context":"stream, server","description":"<p>This directive appeared in version 1.9.4.\n            </p></div><p>\nSets the <code><i>size</i></code> of the buffer used for reading data\nfrom the proxied server.\nAlso sets the <code><i>size</i></code> of the buffer used for reading data\nfrom the client.\n</p>"},{"directive":"proxy_buffer_size","defaultValue":"proxy_buffer_size 4k|8k;","syntax":"proxy_buffer_size size;","context":"http, server, location","description":"<p>\nSets the <code><i>size</i></code> of the buffer used for reading the first part\nof the response received from the proxied server.\nThis part usually contains a small response header.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\nIt can be made smaller, however.\n</p>"},{"directive":"proxy_buffer","defaultValue":"proxy_buffer 4k|8k;","syntax":"proxy_buffer size;","context":"mail, server","description":"<p>\nSets the size of the buffer used for proxying.\nBy default, the buffer size is equal to one memory page.\nDepending on a platform, it is either 4K or 8K.\n</p>"},{"directive":"proxy_bind","defaultValue":"—","syntax":"proxy_bind     address    [transparent] |    off;","context":"stream, server","description":"<p>This directive appeared in version 1.9.2.\n            </p></div><p>\nMakes outgoing connections to a proxied server originate\nfrom the specified local IP <code><i>address</i></code>.\nParameter value can contain variables (1.11.2).\nThe special value <code>off</code> cancels the effect\nof the <code>proxy_bind</code> directive\ninherited from the previous configuration level, which allows the\nsystem to auto-assign the local IP address.\n</p>"},{"directive":"proxy_bind","defaultValue":"—","syntax":"proxy_bind     address    [transparent] |    off;","context":"http, server, location","description":"<p>This directive appeared in version 0.8.22.\n            </p></div><p>\nMakes outgoing connections to a proxied server originate\nfrom the specified local IP address with an optional port (1.11.2).\nParameter value can contain variables (1.3.12).\nThe special value <code>off</code> (1.3.12) cancels the effect\nof the <code>proxy_bind</code> directive\ninherited from the previous configuration level, which allows the\nsystem to auto-assign the local IP address and port.\n</p>"},{"directive":"protocol","defaultValue":"—","syntax":"protocol   imap |  pop3 |  smtp;","context":"server","description":"<p>\nSets the protocol for a proxied server.\nSupported protocols are\n<a href=\"ngx_mail_imap_module.html\">IMAP</a>,\n<a href=\"ngx_mail_pop3_module.html\">POP3</a>, and\n<a href=\"ngx_mail_smtp_module.html\">SMTP</a>.\n</p><p>\nIf the directive is not set, the protocol can be detected automatically\nbased on the well-known port specified in the <a href=\"#listen\">listen</a>\ndirective:\n</p> <ul class=\"compact\">\n\n<li>\n<code>imap</code>: 143, 993\n</li>\n\n<li>\n<code>pop3</code>: 110, 995\n</li>\n\n<li>\n<code>smtp</code>: 25, 587, 465\n</li>\n\n</ul><p> \n</p><p>\nUnnecessary protocols can be disabled using the\n<a href=\"../configure.html\">configuration</a>\nparameters <code>--without-mail_imap_module</code>,\n<code>--without-mail_pop3_module</code>, and\n<code>--without-mail_smtp_module</code>.\n</p>"},{"directive":"preread_timeout","defaultValue":"preread_timeout 30s;","syntax":"preread_timeout timeout;","context":"stream, server","description":"<p>This directive appeared in version 1.11.5.\n            </p></div><p>\nSpecifies a <code><i>timeout</i></code> of the\n<a href=\"stream_processing.html#preread_phase\">preread</a> phase.\n</p>"},{"directive":"preread_buffer_size","defaultValue":"preread_buffer_size 16k;","syntax":"preread_buffer_size size;","context":"stream, server","description":"<p>This directive appeared in version 1.11.5.\n            </p></div><p>\nSpecifies a <code><i>size</i></code> of the\n<a href=\"stream_processing.html#preread_phase\">preread</a> buffer.\n</p>"},{"directive":"postpone_output","defaultValue":"postpone_output 1460;","syntax":"postpone_output size;","context":"http, server, location","description":"<p>\nIf possible, the transmission of client data will be postponed until\nnginx has at least <code><i>size</i></code> bytes of data to send.\nThe zero value disables postponing data transmission.\n</p>"},{"directive":"port_in_redirect","defaultValue":"port_in_redirect on;","syntax":"port_in_redirect on | off;","context":"http, server, location","description":"<p>\nEnables or disables specifying the port in\n<a href=\"#absolute_redirect\">absolute</a> redirects issued by nginx.\n</p><p>\nThe use of the primary server name in redirects is controlled by\nthe <a href=\"#server_name_in_redirect\">server_name_in_redirect</a> directive.\n</p>"},{"directive":"pop3_capabilities","defaultValue":"","syntax":"","context":"","description":null},{"directive":"pop3_auth","defaultValue":"pop3_auth plain;","syntax":"pop3_auth method ...;","context":"mail, server","description":"<p>\nSets permitted methods of authentication for POP3 clients.\nSupported methods are:\n</p> <dl class=\"compact\">\n\n<dt><code>plain</code></dt>\n<dd>\n<a href=\"https://tools.ietf.org/html/rfc1939\">USER/PASS</a>,\n<a href=\"https://tools.ietf.org/html/rfc4616\">AUTH PLAIN</a>,\n<a href=\"https://tools.ietf.org/html/draft-murchison-sasl-login-00\">AUTH LOGIN</a>.\nIt is not possible to disable these methods.\n</dd>\n\n<dt><code>apop</code></dt>\n<dd>\n<a href=\"https://tools.ietf.org/html/rfc1939\">APOP</a>.\nIn order for this method to work, the password must be stored unencrypted.\n</dd>\n\n<dt><code>cram-md5</code></dt>\n<dd>\n<a href=\"https://tools.ietf.org/html/rfc2195\">AUTH CRAM-MD5</a>.\nIn order for this method to work, the password must be stored unencrypted.\n</dd>\n\n<dt><code>external</code></dt>\n<dd>\n<a href=\"https://tools.ietf.org/html/rfc4422\">AUTH EXTERNAL</a> (1.11.6).\n</dd>\n\n</dl><p> \n</p>"},{"directive":"pid","defaultValue":"pid nginx.pid;","syntax":"pid file;","context":"main","description":"<p>\nDefines a <code><i>file</i></code> that will store the process ID of the main process.\n</p>"},{"directive":"perl_set","defaultValue":"—","syntax":"perl_set     $variable    module::function|'sub { ... }';","context":"http","description":"<p>\nInstalls a Perl handler for the specified variable.\n</p>"},{"directive":"perl_require","defaultValue":"—","syntax":"perl_require module;","context":"http","description":"<p>\nDefines the name of a module that will be loaded during each\nreconfiguration.\nSeveral <code>perl_require</code> directives can be present.\n</p>"},{"directive":"perl_modules","defaultValue":"—","syntax":"perl_modules path;","context":"http","description":"<p>\nSets an additional path for Perl modules.\n</p>"},{"directive":"perl","defaultValue":"—","syntax":"perl module::function|'sub { ... }';","context":"location, limit_except","description":"<p>\nSets a Perl handler for the given location.\n</p>"},{"directive":"pcre_jit","defaultValue":"pcre_jit off;","syntax":"pcre_jit on | off;","context":"main","description":"<p>This directive appeared in version 1.1.12.\n            </p></div><p>\nEnables or disables the use of “just-in-time compilation” (PCRE JIT)\nfor the regular expressions known by the time of configuration parsing.\n</p><p>\nPCRE JIT can speed up processing of regular expressions significantly.\n</p> <blockquote class=\"note\">\nThe JIT is available in PCRE libraries starting from version 8.20\nbuilt with the <code>--enable-jit</code> configuration parameter.\nWhen the PCRE library is built with nginx (<code>--with-pcre=</code>),\nthe JIT support is enabled via the\n<code>--with-pcre-jit</code> configuration parameter.\n</blockquote><p> \n</p>"},{"directive":"override_charset","defaultValue":"override_charset off;","syntax":"override_charset on | off;","context":"http, server, location, if in location","description":"<p>\nDetermines whether a conversion should be performed for answers\nreceived from a proxied or a FastCGI/uwsgi/SCGI server\nwhen the answers already carry a charset in the “Content-Type”\nresponse header field.\nIf conversion is enabled, a charset specified in the received\nresponse is used as a source charset.\n</p> <blockquote class=\"note\">\nIt should be noted that if a response is received in a subrequest\nthen the conversion from the response charset to the main request charset\nis always performed, regardless of the <code>override_charset</code>\ndirective setting.\n</blockquote><p> \n</p>"},{"directive":"output_buffers","defaultValue":"output_buffers 2 32k;","syntax":"output_buffers number size;","context":"http, server, location","description":"<p>\nSets the <code><i>number</i></code> and <code><i>size</i></code> of the\nbuffers used for reading a response from a disk.\n</p> <blockquote class=\"note\">\nPrior to version 1.9.5, the default value was 1 32k.\n</blockquote><p> \n</p>"},{"directive":"open_log_file_cache","defaultValue":"","syntax":"","context":"","description":null},{"directive":"open_log_file_cache","defaultValue":"","syntax":"","context":"","description":null},{"directive":"open_file_cache_valid","defaultValue":"open_file_cache_valid 60s;","syntax":"open_file_cache_valid time;","context":"http, server, location","description":"<p>\nSets a time after which\n<a href=\"#open_file_cache\">open_file_cache</a>\nelements should be validated.\n\n</p>"},{"directive":"open_file_cache_min_uses","defaultValue":"open_file_cache_min_uses 1;","syntax":"open_file_cache_min_uses number;","context":"http, server, location","description":"<p>\nSets the minimum <code><i>number</i></code> of file accesses during\nthe period configured by the <code>inactive</code> parameter\nof the <a href=\"#open_file_cache\">open_file_cache</a> directive, required for a file\ndescriptor to remain open in the cache.\n</p>"},{"directive":"open_file_cache_errors","defaultValue":"open_file_cache_errors off;","syntax":"open_file_cache_errors on | off;","context":"http, server, location","description":"<p>\nEnables or disables caching of file lookup errors by\n<a href=\"#open_file_cache\">open_file_cache</a>.\n</p>"},{"directive":"open_file_cache","defaultValue":"open_file_cache off;","syntax":"open_file_cache off;open_file_cache max=N[inactive=time];","context":"http, server, location","description":"<p>\nConfigures a cache that can store:\n</p> <ul class=\"compact\">\n\n<li>\nopen file descriptors, their sizes and modification times;\n</li>\n\n<li>\ninformation on existence of directories;\n</li>\n\n<li>\nfile lookup errors, such as “file not found”, “no read permission”,\nand so on.\n<blockquote class=\"note\">\nCaching of errors should be enabled separately by the\n<a href=\"#open_file_cache_errors\">open_file_cache_errors</a>\ndirective.\n</blockquote>\n</li>\n\n</ul><p> \n</p><p>\nThe directive has the following parameters:\n</p> <dl class=\"compact\">\n\n<dt>\n<code>max</code>\n</dt>\n<dd>\nsets the maximum number of elements in the cache;\non cache overflow the least recently used (LRU) elements are removed;\n</dd>\n\n<dt>\n<code>inactive</code>\n</dt>\n<dd>\ndefines a time after which an element is removed from the cache\nif it has not been accessed during this time;\nby default, it is 60 seconds;\n</dd>\n\n<dt>\n<code>off</code>\n</dt>\n<dd>\ndisables the cache.\n</dd>\n\n</dl><p> \n</p><p>\nExample:\n</p> <blockquote class=\"example\"><pre>\nopen_file_cache          max=1000 inactive=20s;\nopen_file_cache_valid    30s;\nopen_file_cache_min_uses 2;\nopen_file_cache_errors   on;\n</pre></blockquote><p> \n</p>"},{"directive":"ntlm","defaultValue":"—","syntax":"ntlm;","context":"upstream","description":"<p>This directive appeared in version 1.9.2.\n            </p></div><p>\nAllows proxying requests with\n<a href=\"https://en.wikipedia.org/wiki/Integrated_Windows_Authentication\">NTLM\nAuthentication</a>.\nThe upstream connection is bound to the client connection\nonce the client sends a request with the “Authorization”\nheader field value\nstarting with “<code>Negotiate</code>” or “<code>NTLM</code>”.\nFurther client requests will be proxied through the same upstream connection,\nkeeping the authentication context.\n</p><p>\nIn order for NTLM authentication to work,\nit is necessary to enable keepalive connections to upstream servers.\nThe <a href=\"ngx_http_proxy_module.html#proxy_http_version\">proxy_http_version</a>\ndirective should be set to “<code>1.1</code>”\nand the “Connection” header field should be cleared:\n</p> <blockquote class=\"example\"><pre>\nupstream http_backend {\n    server 127.0.0.1:8080;\n\n    ntlm;\n}\n\nserver {\n    ...\n\n    location /http/ {\n        proxy_pass http://http_backend;\n        proxy_http_version 1.1;\n        proxy_set_header Connection \"\";\n        ...\n    }\n}\n</pre></blockquote><p> \n</p><p>\n</p> <blockquote class=\"note\">\nWhen using load balancer methods other than the default\nround-robin method, it is necessary to activate them before\nthe <code>ntlm</code> directive.\n</blockquote><p> \n</p><p>\n</p> <blockquote class=\"note\">\nThis directive is available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote><p> \n</p>"},{"directive":"multi_accept","defaultValue":"multi_accept off;","syntax":"multi_accept on | off;","context":"events","description":"<p>\nIf <code>multi_accept</code> is disabled, a worker process\nwill accept one new connection at a time.\nOtherwise, a worker process\nwill accept all new connections at a time.\n</p> <blockquote class=\"note\">\nThe directive is ignored if <a href=\"events.html#kqueue\">kqueue</a>\nconnection processing method is used, because it reports\nthe number of new connections waiting to be accepted.\n</blockquote><p> \n</p>"},{"directive":"msie_refresh","defaultValue":"msie_refresh off;","syntax":"msie_refresh on | off;","context":"http, server, location","description":"<p>\nEnables or disables issuing refreshes instead of redirects for MSIE clients.\n</p>"},{"directive":"msie_padding","defaultValue":"msie_padding on;","syntax":"msie_padding on | off;","context":"http, server, location","description":"<p>\nEnables or disables adding comments to responses for MSIE clients with status\ngreater than 400 to increase the response size to 512 bytes.\n</p>"},{"directive":"mp4_max_buffer_size","defaultValue":"mp4_max_buffer_size 10M;","syntax":"mp4_max_buffer_size size;","context":"http, server, location","description":"<p>\nDuring metadata processing, a larger buffer may become necessary.\nIts size cannot exceed the specified <code><i>size</i></code>,\nor else nginx will return the\n500 (Internal Server Error) server error,\nand log the following message:\n</p> <blockquote class=\"example\"><pre>\n\"/some/movie/file.mp4\" mp4 moov atom is too large:\n12583268, you may want to increase mp4_max_buffer_size\n</pre></blockquote><p> \n</p>"},{"directive":"mp4_limit_rate_after","defaultValue":"","syntax":"","context":"","description":null},{"directive":"mp4_limit_rate","defaultValue":"mp4_limit_rate off;","syntax":"mp4_limit_rate     on |    off |    factor;","context":"http, server, location","description":"<p>\nLimits the rate of response transmission to a client.\nThe rate is limited based on the average bitrate of the\nMP4 file served.\nTo calculate the rate, the bitrate is multiplied by the specified\n<code><i>factor</i></code>.\nThe special value “<code>on</code>” corresponds to the factor of 1.1.\nThe special value “<code>off</code>” disables rate limiting.\nThe limit is set per a request, and so if a client simultaneously opens\ntwo connections, the overall rate will be twice as much\nas the specified limit.\n</p><p>\n</p> <blockquote class=\"note\">\nThis directive is available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote><p> \n</p>"},{"directive":"mp4_buffer_size","defaultValue":"mp4_buffer_size 512K;","syntax":"mp4_buffer_size size;","context":"http, server, location","description":"<p>\nSets the initial <code><i>size</i></code> of the buffer used for\nprocessing MP4 files.\n</p>"},{"directive":"mp4","defaultValue":"—","syntax":"mp4;","context":"location","description":"<p>\nTurns on module processing in a surrounding location.\n</p>"},{"directive":"modern_browser_value","defaultValue":"","syntax":"","context":"","description":null},{"directive":"modern_browser","defaultValue":"—","syntax":"modern_browser browser version;modern_browser unlisted;","context":"http, server, location","description":"<p>\nSpecifies a version starting from which a browser is considered modern.\nA browser can be any one of the following: <code>msie</code>,\n<code>gecko</code> (browsers based on Mozilla),\n<code>opera</code>, <code>safari</code>,\nor <code>konqueror</code>.\n</p><p>\nVersions can be specified in the following formats: X, X.X, X.X.X, or X.X.X.X.\nThe maximum values for each of the format are\n4000, 4000.99, 4000.99.99, and 4000.99.99.99, respectively.\n</p><p>\nThe special value <code>unlisted</code> specifies to consider\na browser as modern if it was not listed by the\n<code>modern_browser</code> and <a href=\"#ancient_browser\">ancient_browser</a>\ndirectives.\nOtherwise such a browser is considered ancient.\nIf a request does not provide the “User-Agent” field\nin the header, the browser is treated as not being listed.\n</p>"},{"directive":"min_delete_depth","defaultValue":"","syntax":"","context":"","description":null},{"directive":"merge_slashes","defaultValue":"merge_slashes on;","syntax":"merge_slashes on | off;","context":"http, server","description":"<p>\nEnables or disables compression of two or more adjacent slashes\nin a URI into a single slash.\n</p><p>\nNote that compression is essential for the correct matching of prefix string\nand regular expression locations.\nWithout it, the “<code>//scripts/one.php</code>” request would not match\n</p> <blockquote class=\"example\"><pre>\nlocation /scripts/ {\n    ...\n}\n</pre></blockquote><p> \nand might be processed as a static file.\nSo it gets converted to “<code>/scripts/one.php</code>”.\n</p><p>\nTurning the compression <code>off</code> can become necessary if a URI\ncontains base64-encoded names, since base64 uses the “<code>/</code>”\ncharacter internally.\nHowever, for security considerations, it is better to avoid turning\nthe compression off.\n</p><p>\nIf the directive is specified on the <a href=\"#server\">server</a> level,\nits value is only used if a server is a default one.\nThe value specified also applies to all virtual servers\nlistening on the same address and port.\n</p>"},{"directive":"memcached_send_timeout","defaultValue":"memcached_send_timeout 60s;","syntax":"memcached_send_timeout time;","context":"http, server, location","description":"<p>\nSets a timeout for transmitting a request to the memcached server.\nThe timeout is set only between two successive write operations,\nnot for the transmission of the whole request.\nIf the memcached server does not receive anything within this time,\nthe connection is closed.\n</p>"},{"directive":"memcached_read_timeout","defaultValue":"memcached_read_timeout 60s;","syntax":"memcached_read_timeout time;","context":"http, server, location","description":"<p>\nDefines a timeout for reading a response from the memcached server.\nThe timeout is set only between two successive read operations,\nnot for the transmission of the whole response.\nIf the memcached server does not transmit anything within this time,\nthe connection is closed.\n</p>"},{"directive":"memcached_pass","defaultValue":"—","syntax":"memcached_pass address;","context":"location, if in location","description":"<p>\nSets the memcached server address.\nThe address can be specified as a domain name or IP address,\nand a port:\n</p> <blockquote class=\"example\"><pre>\nmemcached_pass localhost:11211;\n</pre></blockquote><p> \nor as a UNIX-domain socket path:\n</p> <blockquote class=\"example\"><pre>\nmemcached_pass unix:/tmp/memcached.socket;\n</pre></blockquote><p> \n</p><p>\nIf a domain name resolves to several addresses, all of them will be\nused in a round-robin fashion.\nIn addition, an address can be specified as a\n<a href=\"ngx_http_upstream_module.html\">server group</a>.\n</p>"},{"directive":"memcached_next_upstream_tries","defaultValue":"memcached_next_upstream_tries 0;","syntax":"memcached_next_upstream_tries number;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.5.\n            </p></div><p>\nLimits the number of possible tries for passing a request to the\n<a href=\"#memcached_next_upstream\">next server</a>.\nThe <code>0</code> value turns off this limitation.\n</p>"},{"directive":"memcached_next_upstream_timeout","defaultValue":"memcached_next_upstream_timeout 0;","syntax":"memcached_next_upstream_timeout time;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.5.\n            </p></div><p>\nLimits the time during which a request can be passed to the\n<a href=\"#memcached_next_upstream\">next server</a>.\nThe <code>0</code> value turns off this limitation.\n</p>"},{"directive":"memcached_next_upstream","defaultValue":"memcached_next_upstream error timeout;","syntax":"memcached_next_upstream     error |    timeout |    invalid_response |    not_found |    off    ...;","context":"http, server, location","description":"<p>\nSpecifies in which cases a request should be passed to the next server:\n</p> <dl class=\"compact\">\n\n<dt><code>error</code></dt>\n<dd>an error occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;</dd>\n\n<dt><code>timeout</code></dt>\n<dd>a timeout has occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;</dd>\n\n<dt><code>invalid_response</code></dt>\n<dd>a server returned an empty or invalid response;</dd>\n\n<dt><code>not_found</code></dt>\n<dd>a response was not found on the server;</dd>\n\n<dt><code>off</code></dt>\n<dd>disables passing a request to the next server.</dd>\n\n</dl><p> \n</p><p>\nOne should bear in mind that passing a request to the next server is\nonly possible if nothing has been sent to a client yet.\nThat is, if an error or timeout occurs in the middle of the\ntransferring of a response, fixing this is impossible.\n</p><p>\nThe directive also defines what is considered an\n<a href=\"ngx_http_upstream_module.html#max_fails\">unsuccessful\nattempt</a> of communication with a server.\nThe cases of <code>error</code>, <code>timeout</code> and\n<code>invalid_header</code> are always considered unsuccessful attempts,\neven if they are not specified in the directive.\nThe case of <code>not_found</code>\nis never considered an unsuccessful attempt.\n</p><p>\nPassing a request to the next server can be limited by\n<a href=\"#memcached_next_upstream_tries\">the number of tries</a>\nand by <a href=\"#memcached_next_upstream_timeout\">time</a>.\n</p>"},{"directive":"memcached_gzip_flag","defaultValue":"—","syntax":"memcached_gzip_flag flag;","context":"http, server, location","description":"<p>This directive appeared in version 1.3.6.\n            </p></div><p>\nEnables the test for the <code><i>flag</i></code> presence in the memcached\nserver response and sets the “<code>Content-Encoding</code>”\nresponse header field to “<code>gzip</code>”\nif the flag is set.\n</p>"},{"directive":"memcached_force_ranges","defaultValue":"memcached_force_ranges off;","syntax":"memcached_force_ranges on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.7.\n            </p></div><p>\nEnables byte-range support\nfor both cached and uncached responses from the memcached server\nregardless of the “Accept-Ranges” field in these responses.\n</p>"},{"directive":"memcached_connect_timeout","defaultValue":"memcached_connect_timeout 60s;","syntax":"memcached_connect_timeout time;","context":"http, server, location","description":"<p>\nDefines a timeout for establishing a connection with a memcached server.\nIt should be noted that this timeout cannot usually exceed 75 seconds.\n</p>"},{"directive":"memcached_buffer_size","defaultValue":"memcached_buffer_size 4k|8k;","syntax":"memcached_buffer_size size;","context":"http, server, location","description":"<p>\nSets the <code><i>size</i></code> of the buffer used for reading the response\nreceived from the memcached server.\nThe response is passed to the client synchronously, as soon as it is received.\n</p>"},{"directive":"memcached_bind","defaultValue":"—","syntax":"memcached_bind     address    [ transparent ] |    off;","context":"http, server, location","description":"<p>This directive appeared in version 0.8.22.\n            </p></div><p>\nMakes outgoing connections to a memcached server originate\nfrom the specified local IP address with an optional port (1.11.2).\nParameter value can contain variables (1.3.12).\nThe special value <code>off</code> (1.3.12) cancels the effect\nof the <code>memcached_bind</code> directive\ninherited from the previous configuration level, which allows the\nsystem to auto-assign the local IP address and port.\n</p>"},{"directive":"max_ranges","defaultValue":"—","syntax":"max_ranges number;","context":"http, server, location","description":"<p>This directive appeared in version 1.1.2.\n            </p></div><p>\nLimits the maximum allowed number of ranges in byte-range requests.\nRequests that exceed the limit are processed as if there were no\nbyte ranges specified.\nBy default, the number of ranges is not limited.\nThe zero value disables the byte-range support completely.\n</p>"},{"directive":"match","defaultValue":"","syntax":"","context":"","description":null},{"directive":"match","defaultValue":"","syntax":"","context":"","description":null},{"directive":"master_process","defaultValue":"master_process on;","syntax":"master_process on | off;","context":"main","description":"<p>\nDetermines whether worker processes are started.\nThis directive is intended for nginx developers.\n</p>"},{"directive":"map_hash_max_size","defaultValue":"","syntax":"","context":"","description":null},{"directive":"map_hash_max_size","defaultValue":"","syntax":"","context":"","description":null},{"directive":"map_hash_bucket_size","defaultValue":"map_hash_bucket_size 32|64|128;","syntax":"map_hash_bucket_size size;","context":"stream","description":"<p>\nSets the bucket size for the <a href=\"#map\">map</a> variables hash tables.\nDefault value depends on the processor’s cache line size.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p>"},{"directive":"map_hash_bucket_size","defaultValue":"map_hash_bucket_size 32|64|128;","syntax":"map_hash_bucket_size size;","context":"http","description":"<p>\nSets the bucket size for the <a href=\"#map\">map</a> variables hash tables.\nDefault value depends on the processor’s cache line size.\nThe details of setting up hash tables are provided in a separate\n<a href=\"../hash.html\">document</a>.\n</p>"},{"directive":"map","defaultValue":"—","syntax":"map     string    $variable { ... }","context":"stream","description":"<p>\nCreates a new variable whose value\ndepends on values of one or more of the source variables\nspecified in the first parameter.\n</p><p>\n</p> <blockquote class=\"note\">\nSince variables are evaluated only when they are used, the mere declaration\neven of a large number of “<code>map</code>” variables\ndoes not add any extra costs to connection processing.\n</blockquote><p> \n</p><p>\nParameters inside the <code>map</code> block specify a mapping\nbetween source and resulting values.\n</p><p>\nSource values are specified as strings or regular expressions.\n</p><p>\nStrings are matched ignoring the case.\n</p><p>\nA regular expression should either start from the “<code>~</code>”\nsymbol for a case-sensitive matching, or from the “<code>~*</code>”\nsymbols for case-insensitive matching.\nA regular expression can contain named and positional captures\nthat can later be used in other directives along with the\nresulting variable.\n</p><p>\nIf a source value matches one of the names of special parameters\ndescribed below, it should be prefixed with the “<code>\\</code>” symbol.\n</p><p>\nThe resulting value can contain text,\nvariable, and their combination.\n</p><p>\nThe following special parameters are also supported:\n</p> <dl class=\"compact\">\n<dt><code>default</code> <code><i>value</i></code></dt>\n<dd>\nsets the resulting value if the source value matches none\nof the specified variants.\nWhen <code>default</code> is not specified, the default\nresulting value will be an empty string.\n</dd>\n\n<dt><code>hostnames</code></dt>\n<dd>\nindicates that source values can be hostnames with a prefix or suffix mask:\n<blockquote class=\"example\"><pre>\n*.example.com 1;\nexample.*     1;\n</pre></blockquote>\nThe following two records\n<blockquote class=\"example\"><pre>\nexample.com   1;\n*.example.com 1;\n</pre></blockquote>\ncan be combined:\n<blockquote class=\"example\"><pre>\n.example.com  1;\n</pre></blockquote>\nThis parameter should be specified before the list of values.\n</dd>\n\n<dt><code>include</code> <code><i>file</i></code></dt>\n<dd>\nincludes a file with values.\nThere can be several inclusions.\n</dd>\n\n<dt id=\"volatile\"><code>volatile</code></dt>\n<dd>\nindicates that the variable is not cacheable (1.11.7).\n</dd>\n\n</dl><p> \n</p><p>\nIf the source value matches more than one of the specified variants,\ne.g. both a mask and a regular expression match, the first matching\nvariant will be chosen, in the following order of priority:\n</p> <ol class=\"compact\">\n\n<li>\nstring value without a mask\n</li>\n\n<li>\nlongest string value with a prefix mask,\ne.g. “<code>*.example.com</code>”\n</li>\n\n<li>\nlongest string value with a suffix mask,\ne.g. “<code>mail.*</code>”\n</li>\n\n<li>\nfirst matching regular expression\n(in order of appearance in a configuration file)\n</li>\n\n<li>\ndefault value\n</li>\n\n</ol><p> \n</p>"},{"directive":"map","defaultValue":"—","syntax":"map     string    $variable { ... }","context":"http","description":"<p>\nCreates a new variable whose value\ndepends on values of one or more of the source variables\nspecified in the first parameter.\n</p> <blockquote class=\"note\">\nBefore version 0.9.0 only a single variable could be\nspecified in the first parameter.\n</blockquote><p> \n</p><p>\n</p> <blockquote class=\"note\">\nSince variables are evaluated only when they are used, the mere declaration\neven of a large number of “<code>map</code>” variables\ndoes not add any extra costs to request processing.\n</blockquote><p> \n</p><p>\nParameters inside the <code>map</code> block specify a mapping\nbetween source and resulting values.\n</p><p>\nSource values are specified as strings or regular expressions (0.9.6).\n</p><p>\nStrings are matched ignoring the case.\n</p><p>\nA regular expression should either start from the “<code>~</code>”\nsymbol for a case-sensitive matching, or from the “<code>~*</code>”\nsymbols (1.0.4) for case-insensitive matching.\nA regular expression can contain named and positional captures\nthat can later be used in other directives along with the\nresulting variable.\n</p><p>\nIf a source value matches one of the names of special parameters\ndescribed below, it should be prefixed with the “<code>\\</code>” symbol.\n</p><p>\nThe resulting value can contain text,\nvariable (0.9.0), and their combination (1.11.0).\n</p><p>\nThe following special parameters are also supported:\n</p> <dl class=\"compact\">\n<dt><code>default</code> <code><i>value</i></code></dt>\n<dd>\nsets the resulting value if the source value matches none\nof the specified variants.\nWhen <code>default</code> is not specified, the default\nresulting value will be an empty string.\n</dd>\n\n<dt><code>hostnames</code></dt>\n<dd>\nindicates that source values can be hostnames with a prefix or suffix mask:\n<blockquote class=\"example\"><pre>\n*.example.com 1;\nexample.*     1;\n</pre></blockquote>\nThe following two records\n<blockquote class=\"example\"><pre>\nexample.com   1;\n*.example.com 1;\n</pre></blockquote>\ncan be combined:\n<blockquote class=\"example\"><pre>\n.example.com  1;\n</pre></blockquote>\nThis parameter should be specified before the list of values.\n</dd>\n\n<dt><code>include</code> <code><i>file</i></code></dt>\n<dd>\nincludes a file with values.\nThere can be several inclusions.\n</dd>\n\n<dt id=\"volatile\"><code>volatile</code></dt>\n<dd>\nindicates that the variable is not cacheable (1.11.7).\n</dd>\n\n</dl><p> \n</p><p>\nIf the source value matches more than one of the specified variants,\ne.g. both a mask and a regular expression match, the first matching\nvariant will be chosen, in the following order of priority:\n</p> <ol class=\"compact\">\n\n<li>\nstring value without a mask\n</li>\n\n<li>\nlongest string value with a prefix mask,\ne.g. “<code>*.example.com</code>”\n</li>\n\n<li>\nlongest string value with a suffix mask,\ne.g. “<code>mail.*</code>”\n</li>\n\n<li>\nfirst matching regular expression\n(in order of appearance in a configuration file)\n</li>\n\n<li>\ndefault value\n</li>\n\n</ol><p> \n</p>"},{"directive":"mail","defaultValue":"—","syntax":"mail { ... }","context":"main","description":"<p>\nProvides the configuration file context in which the mail server directives\nare specified.\n</p>"},{"directive":"log_subrequest","defaultValue":"log_subrequest off;","syntax":"log_subrequest on | off;","context":"http, server, location","description":"<p>\nEnables or disables logging of subrequests into\n<a href=\"ngx_http_log_module.html#access_log\">access_log</a>.\n</p>"},{"directive":"log_not_found","defaultValue":"log_not_found on;","syntax":"log_not_found on | off;","context":"http, server, location","description":"<p>\nEnables or disables logging of errors about not found files into\n<a href=\"../ngx_core_module.html#error_log\">error_log</a>.\n</p>"},{"directive":"log_format","defaultValue":"—","syntax":"log_format     name    [escape=default|json]    string ...;","context":"stream","description":"<p>\nSpecifies the log format, for example:\n</p> <blockquote class=\"example\"><pre>\nlog_format proxy '$remote_addr [$time_local] '\n                 '$protocol $status $bytes_sent $bytes_received '\n                 '$session_time \"$upstream_addr\" '\n                 '\"$upstream_bytes_sent\" \"$upstream_bytes_received\" \"$upstream_connect_time\"';\n</pre></blockquote><p> \n</p>"},{"directive":"log_format","defaultValue":"log_format combined \"...\";","syntax":"log_format     name    [escape=default|json]    string ...;","context":"http","description":"<p>\nSpecifies log format.\n</p>"},{"directive":"lock_file","defaultValue":"lock_file logs/nginx.lock;","syntax":"lock_file file;","context":"main","description":"<p>\nnginx uses the locking mechanism to implement <a href=\"#accept_mutex\">accept_mutex</a>\nand serialize access to shared memory.\nOn most systems the locks are implemented using atomic operations,\nand this directive is ignored.\nOn other systems the “lock file” mechanism is used.\nThis directive specifies a prefix for the names of lock files.\n</p>"},{"directive":"location","defaultValue":"—","syntax":"location [    = |    ~ |    ~* |    ^~    ] uri { ... }location @name { ... }","context":"server, location","description":"<p>\nSets configuration depending on a request URI.\n</p><p>\nThe matching is performed against a normalized URI,\nafter decoding the text encoded in the “<code>%XX</code>” form,\nresolving references to relative path components “<code>.</code>”\nand “<code>..</code>”, and possible\n<a href=\"#merge_slashes\">compression</a> of two or more\nadjacent slashes into a single slash.\n</p><p>\nA location can either be defined by a prefix string, or by a regular expression.\nRegular expressions are specified with the preceding\n“<code>~*</code>” modifier (for case-insensitive matching), or the\n“<code>~</code>” modifier (for case-sensitive matching).\nTo find location matching a given request, nginx first checks\nlocations defined using the prefix strings (prefix locations).\nAmong them, the location with the longest matching\nprefix is selected and remembered.\nThen regular expressions are checked, in the order of their appearance\nin the configuration file.\nThe search of regular expressions terminates on the first match,\nand the corresponding configuration is used.\nIf no match with a regular expression is found then the\nconfiguration of the prefix location remembered earlier is used.\n</p><p>\n<code>location</code> blocks can be nested, with some exceptions\nmentioned below.\n</p><p>\nFor case-insensitive operating systems such as macOS and Cygwin,\nmatching with prefix strings ignores a case (0.7.7).\nHowever, comparison is limited to one-byte locales.\n</p><p>\nRegular expressions can contain captures (0.7.40) that can later\nbe used in other directives.\n</p><p>\nIf the longest matching prefix location has the “<code>^~</code>” modifier\nthen regular expressions are not checked.\n</p><p>\nAlso, using the “<code>=</code>” modifier it is possible to define\nan exact match of URI and location.\nIf an exact match is found, the search terminates.\nFor example, if a “<code>/</code>” request happens frequently,\ndefining “<code>location = /</code>” will speed up the processing\nof these requests, as search terminates right after the first\ncomparison.\nSuch a location cannot obviously contain nested locations.\n</p><p>\n</p> <blockquote class=\"note\">\nIn versions from 0.7.1 to 0.8.41, if a request matched the prefix\nlocation without the “<code>=</code>” and “<code>^~</code>”\nmodifiers, the search also terminated and regular expressions were\nnot checked.\n</blockquote><p> \n</p><p>\nLet’s illustrate the above by an example:\n</p> <blockquote class=\"example\"><pre>\nlocation = / {\n    [ configuration A ]\n}\n\nlocation / {\n    [ configuration B ]\n}\n\nlocation /documents/ {\n    [ configuration C ]\n}\n\nlocation ^~ /images/ {\n    [ configuration D ]\n}\n\nlocation ~* \\.(gif|jpg|jpeg)$ {\n    [ configuration E ]\n}\n</pre></blockquote><p> \nThe “<code>/</code>” request will match configuration A,\nthe “<code>/index.html</code>” request will match configuration B,\nthe “<code>/documents/document.html</code>” request will match\nconfiguration C,\nthe “<code>/images/1.gif</code>” request will match configuration D, and\nthe “<code>/documents/1.jpg</code>” request will match configuration E.\n</p><p>\nThe “<code>@</code>” prefix defines a named location.\nSuch a location is not used for a regular request processing, but instead\nused for request redirection.\nThey cannot be nested, and cannot contain nested locations.\n</p><p>\nIf a location is defined by a prefix string that ends with the slash character,\nand requests are processed by one of\n<a href=\"ngx_http_proxy_module.html#proxy_pass\">proxy_pass</a>,\n<a href=\"ngx_http_fastcgi_module.html#fastcgi_pass\">fastcgi_pass</a>,\n<a href=\"ngx_http_uwsgi_module.html#uwsgi_pass\">uwsgi_pass</a>,\n<a href=\"ngx_http_scgi_module.html#scgi_pass\">scgi_pass</a>, or\n<a href=\"ngx_http_memcached_module.html#memcached_pass\">memcached_pass</a>,\nthen the special processing is performed.\nIn response to a request with URI equal to this string,\nbut without the trailing slash,\na permanent redirect with the code 301 will be returned to the requested URI\nwith the slash appended.\nIf this is not desired, an exact match of the URI and location could be\ndefined like this:\n</p> <blockquote class=\"example\"><pre>\nlocation /user/ {\n    proxy_pass http://user.example.com;\n}\n\nlocation = /user {\n    proxy_pass http://login.example.com;\n}\n</pre></blockquote><p> \n</p>"},{"directive":"load_module","defaultValue":"—","syntax":"load_module file;","context":"main","description":"<p>This directive appeared in version 1.9.11.\n            </p></div><p>\nLoads a dynamic module.\n</p><p>\nExample:\n</p> <blockquote class=\"example\"><pre>\nload_module modules/ngx_mail_module.so;\n</pre></blockquote><p> \n</p>"},{"directive":"listen","defaultValue":"—","syntax":"listen     address:port    [ssl]    [udp]    [proxy_protocol]    [backlog=number]    [rcvbuf=size]    [sndbuf=size]    [bind]    [ipv6only=on|off]    [reuseport]    [so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]];","context":"server","description":"<p>\nSets the <code><i>address</i></code> and <code><i>port</i></code> for the socket\non which the server will accept connections.\nIt is possible to specify just the port.\nThe address can also be a hostname, for example:\n</p> <blockquote class=\"example\"><pre>\nlisten 127.0.0.1:12345;\nlisten *:12345;\nlisten 12345;     # same as *:12345\nlisten localhost:12345;\n</pre></blockquote><p> \nIPv6 addresses are specified in square brackets:\n</p> <blockquote class=\"example\"><pre>\nlisten [::1]:12345;\nlisten [::]:12345;\n</pre></blockquote><p> \nUNIX-domain sockets are specified with the “<code>unix:</code>”\nprefix:\n</p> <blockquote class=\"example\"><pre>\nlisten unix:/var/run/nginx.sock;\n</pre></blockquote><p> \n\n</p><p>\nThe <code>ssl</code> parameter allows specifying that all\nconnections accepted on this port should work in SSL mode.\n</p>"},{"directive":"listen","defaultValue":"—","syntax":"listen     address:port    [ssl]    [backlog=number]    [rcvbuf=size]    [sndbuf=size]    [bind]    [ipv6only=on|off]    [so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]];","context":"server","description":"<p>\nSets the <code><i>address</i></code> and <code><i>port</i></code> for the socket\non which the server will accept requests.\nIt is possible to specify just the port.\nThe address can also be a hostname, for example:\n</p> <blockquote class=\"example\"><pre>\nlisten 127.0.0.1:110;\nlisten *:110;\nlisten 110;     # same as *:110\nlisten localhost:110;\n</pre></blockquote><p> \nIPv6 addresses (0.7.58) are specified in square brackets:\n</p> <blockquote class=\"example\"><pre>\nlisten [::1]:110;\nlisten [::]:110;\n</pre></blockquote><p> \nUNIX-domain sockets (1.3.5) are specified with the “<code>unix:</code>”\nprefix:\n</p> <blockquote class=\"example\"><pre>\nlisten unix:/var/run/nginx.sock;\n</pre></blockquote><p> \n\n</p><p>\nDifferent servers must listen on different\n<code><i>address</i></code>:<code><i>port</i></code> pairs.\n</p><p>\nThe <code>ssl</code> parameter allows specifying that all\nconnections accepted on this port should work in SSL mode.\n</p><p>\nThe <code>listen</code> directive\ncan have several additional parameters specific to socket-related system calls.\n</p> <dl class=\"compact\">\n\n<dt>\n<code>backlog</code>=<code><i>number</i></code>\n</dt>\n<dd>\nsets the <code>backlog</code> parameter in the\n<code>listen()</code> call that limits\nthe maximum length for the queue of pending connections (1.9.2).\nBy default,\n<code>backlog</code> is set to -1 on FreeBSD, DragonFly BSD, and macOS,\nand to 511 on other platforms.\n</dd>\n\n<dt>\n<code>rcvbuf</code>=<code><i>size</i></code>\n</dt>\n<dd>\nsets the receive buffer size\n(the <code>SO_RCVBUF</code> option) for the listening socket (1.11.13).\n</dd>\n\n<dt>\n<code>sndbuf</code>=<code><i>size</i></code>\n</dt>\n<dd>\nsets the send buffer size\n(the <code>SO_SNDBUF</code> option) for the listening socket (1.11.13).\n</dd>\n\n<dt>\n<code>bind</code>\n</dt>\n<dd>\nthis parameter instructs to make a separate <code>bind()</code>\ncall for a given address:port pair.\nThe fact is that if there are several <code>listen</code> directives with\nthe same port but different addresses, and one of the\n<code>listen</code> directives listens on all addresses\nfor the given port (<code>*:</code><code><i>port</i></code>), nginx will\n<code>bind()</code> only to <code>*:</code><code><i>port</i></code>.\nIt should be noted that the <code>getsockname()</code> system call will be\nmade in this case to determine the address that accepted the connection.\nIf the <code>ipv6only</code>\nor <code>so_keepalive</code> parameters\nare used then for a given\n<code><i>address</i></code>:<code><i>port</i></code> pair\na separate <code>bind()</code> call will always be made.\n</dd>\n\n<dt>\n<code>ipv6only</code>=<code>on</code>|<code>off</code>\n</dt>\n<dd>\nthis parameter determines\n(via the <code>IPV6_V6ONLY</code> socket option)\nwhether an IPv6 socket listening on a wildcard address <code>[::]</code>\nwill accept only IPv6 connections or both IPv6 and IPv4 connections.\nThis parameter is turned on by default.\nIt can only be set once on start.\n</dd>\n\n<dt>\n<code>so_keepalive</code>=<code>on</code>|<code>off</code>|[<code><i>keepidle</i></code>]:[<code><i>keepintvl</i></code>]:[<code><i>keepcnt</i></code>]\n</dt>\n<dd>\nthis parameter configures the “TCP keepalive” behavior\nfor the listening socket.\nIf this parameter is omitted then the operating system’s settings will be\nin effect for the socket.\nIf it is set to the value “<code>on</code>”, the\n<code>SO_KEEPALIVE</code> option is turned on for the socket.\nIf it is set to the value “<code>off</code>”, the\n<code>SO_KEEPALIVE</code> option is turned off for the socket.\nSome operating systems support setting of TCP keepalive parameters on\na per-socket basis using the <code>TCP_KEEPIDLE</code>,\n<code>TCP_KEEPINTVL</code>, and <code>TCP_KEEPCNT</code> socket options.\nOn such systems (currently, Linux 2.4+, NetBSD 5+, and\nFreeBSD 9.0-STABLE), they can be configured\nusing the <code><i>keepidle</i></code>, <code><i>keepintvl</i></code>, and\n<code><i>keepcnt</i></code> parameters.\nOne or two parameters may be omitted, in which case the system default setting\nfor the corresponding socket option will be in effect.\nFor example,\n<blockquote class=\"example\"><pre>so_keepalive=30m::10</pre></blockquote>\nwill set the idle timeout (<code>TCP_KEEPIDLE</code>) to 30 minutes,\nleave the probe interval (<code>TCP_KEEPINTVL</code>) at its system default,\nand set the probes count (<code>TCP_KEEPCNT</code>) to 10 probes.\n</dd>\n\n</dl><p> \n</p>"},{"directive":"listen","defaultValue":"listen *:80 | *:8000;","syntax":"listen     address[:port]    [default_server]    [ssl]    [http2 | spdy]    [proxy_protocol]    [setfib=number]    [fastopen=number]    [backlog=number]    [rcvbuf=size]    [sndbuf=size]    [accept_filter=filter]    [deferred]    [bind]    [ipv6only=on|off]    [reuseport]    [so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]];listen     port    [default_server]    [ssl]    [http2 | spdy]    [proxy_protocol]    [setfib=number]    [fastopen=number]    [backlog=number]    [rcvbuf=size]    [sndbuf=size]    [accept_filter=filter]    [deferred]    [bind]    [ipv6only=on|off]    [reuseport]    [so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]];listen     unix:path    [default_server]    [ssl]    [http2 | spdy]    [proxy_protocol]    [backlog=number]    [rcvbuf=size]    [sndbuf=size]    [accept_filter=filter]    [deferred]    [bind]    [so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]];","context":"server","description":"<p>\nSets the <code><i>address</i></code> and <code><i>port</i></code> for IP,\nor the <code><i>path</i></code> for a UNIX-domain socket on which\nthe server will accept requests.\nBoth <code><i>address</i></code> and <code><i>port</i></code>,\nor only <code><i>address</i></code> or only <code><i>port</i></code> can be specified.\nAn <code><i>address</i></code> may also be a hostname, for example:\n</p> <blockquote class=\"example\"><pre>\nlisten 127.0.0.1:8000;\nlisten 127.0.0.1;\nlisten 8000;\nlisten *:8000;\nlisten localhost:8000;\n</pre></blockquote><p> \nIPv6 addresses (0.7.36) are specified in square brackets:\n</p> <blockquote class=\"example\"><pre>\nlisten [::]:8000;\nlisten [::1];\n</pre></blockquote><p> \nUNIX-domain sockets (0.8.21) are specified with the “<code>unix:</code>”\nprefix:\n</p> <blockquote class=\"example\"><pre>\nlisten unix:/var/run/nginx.sock;\n</pre></blockquote><p> \n</p><p>\nIf only <code><i>address</i></code> is given, the port 80 is used.\n</p><p>\nIf the directive is not present then either <code>*:80</code> is used\nif nginx runs with the superuser privileges, or <code>*:8000</code>\notherwise.\n</p><p>\nThe <code>default_server</code> parameter, if present,\nwill cause the server to become the default server for the specified\n<code><i>address</i></code>:<code><i>port</i></code> pair.\nIf none of the directives have the <code>default_server</code>\nparameter then the first server with the\n<code><i>address</i></code>:<code><i>port</i></code> pair will be\nthe default server for this pair.\n</p> <blockquote class=\"note\">\nIn versions prior to 0.8.21 this parameter is named simply\n<code>default</code>.\n</blockquote><p> \n</p><p>\nThe <code>ssl</code> parameter (0.7.14) allows specifying that all\nconnections accepted on this port should work in SSL mode.\nThis allows for a more compact <a href=\"configuring_https_servers.html#single_http_https_server\">configuration</a> for the server that\nhandles both HTTP and HTTPS requests.\n</p><p>\nThe <code>http2</code> parameter (1.9.5) configures the port to accept\n<a href=\"ngx_http_v2_module.html\">HTTP/2</a> connections.\nNormally, for this to work the <code>ssl</code> parameter should be\nspecified as well, but nginx can also be configured to accept HTTP/2\nconnections without SSL.\n</p><p>\nThe <code>spdy</code> parameter (1.3.15-1.9.4) allows accepting\n<a href=\"ngx_http_spdy_module.html\">SPDY</a> connections on this port.\nNormally, for this to work the <code>ssl</code> parameter should be\nspecified as well, but nginx can also be configured to accept SPDY\nconnections without SSL.\n</p><p>\nThe <code>proxy_protocol</code> parameter (1.5.12)\nallows specifying that all connections accepted on this port should use the\n<a href=\"http://www.haproxy.org/download/1.5/doc/proxy-protocol.txt\">PROXY\nprotocol</a>.\n</p><p>\nThe <code>listen</code> directive\ncan have several additional parameters specific to socket-related system calls.\nThese parameters can be specified in any\n<code>listen</code> directive, but only once for a given\n<code><i>address</i></code>:<code><i>port</i></code> pair.\n</p> <blockquote class=\"note\">\nIn versions prior to 0.8.21, they could only be\nspecified in the <code>listen</code> directive together with the\n<code>default</code> parameter.\n</blockquote><p> \n</p> <dl class=\"compact\">\n\n<dt>\n<code>setfib</code>=<code><i>number</i></code>\n</dt>\n<dd>\nthis parameter (0.8.44) sets the associated routing table, FIB\n(the <code>SO_SETFIB</code> option) for the listening socket.\nThis currently works only on FreeBSD.\n</dd>\n\n<dt>\n<code>fastopen</code>=<code><i>number</i></code>\n</dt>\n<dd>\nenables\n“<a href=\"http://en.wikipedia.org/wiki/TCP_Fast_Open\">TCP Fast Open</a>”\nfor the listening socket (1.5.8) and\n<a href=\"https://tools.ietf.org/html/rfc7413#section-5.1\">limits</a>\nthe maximum length for the queue of connections that have not yet completed\nthe three-way handshake.\n<blockquote class=\"note\">\nDo not enable this feature unless the server can handle\nreceiving the\n<a href=\"https://tools.ietf.org/html/rfc7413#section-6.1\">\nsame SYN packet with data</a> more than once.\n</blockquote>\n</dd>\n\n<dt>\n<code>backlog</code>=<code><i>number</i></code>\n</dt>\n<dd>\nsets the <code>backlog</code> parameter in the\n<code>listen()</code> call that limits\nthe maximum length for the queue of pending connections.\nBy default,\n<code>backlog</code> is set to -1 on FreeBSD, DragonFly BSD, and macOS,\nand to 511 on other platforms.\n</dd>\n\n<dt>\n<code>rcvbuf</code>=<code><i>size</i></code>\n</dt>\n<dd>\nsets the receive buffer size\n(the <code>SO_RCVBUF</code> option) for the listening socket.\n</dd>\n\n<dt>\n<code>sndbuf</code>=<code><i>size</i></code>\n</dt>\n<dd>\nsets the send buffer size\n(the <code>SO_SNDBUF</code> option) for the listening socket.\n</dd>\n\n<dt>\n<code>accept_filter</code>=<code><i>filter</i></code>\n</dt>\n<dd>\nsets the name of accept filter\n(the <code>SO_ACCEPTFILTER</code> option) for the listening socket\nthat filters incoming connections before passing them to\n<code>accept()</code>.\nThis works only on FreeBSD and NetBSD 5.0+.\nPossible values are\n<a href=\"http://man.freebsd.org/accf_data\">dataready</a>\nand\n<a href=\"http://man.freebsd.org/accf_http\">httpready</a>.\n</dd>\n\n<dt>\n<code>deferred</code>\n</dt>\n<dd>\ninstructs to use a deferred <code>accept()</code>\n(the <code>TCP_DEFER_ACCEPT</code> socket option) on Linux.\n</dd>\n\n<dt>\n<code>bind</code>\n</dt>\n<dd>\ninstructs to make a separate <code>bind()</code> call for a given\n<code><i>address</i></code>:<code><i>port</i></code> pair.\nThis is useful because if there are several <code>listen</code>\ndirectives with the same port but different addresses, and one of the\n<code>listen</code> directives listens on all addresses\nfor the given port (<code>*:</code><code><i>port</i></code>), nginx\nwill <code>bind()</code> only to <code>*:</code><code><i>port</i></code>.\nIt should be noted that the <code>getsockname()</code> system call will be\nmade in this case to determine the address that accepted the connection.\nIf the <code>setfib</code>,\n<code>backlog</code>, <code>rcvbuf</code>,\n<code>sndbuf</code>, <code>accept_filter</code>,\n<code>deferred</code>, <code>ipv6only</code>,\nor <code>so_keepalive</code> parameters\nare used then for a given\n<code><i>address</i></code>:<code><i>port</i></code> pair\na separate <code>bind()</code> call will always be made.\n</dd>\n\n<dt>\n<code>ipv6only</code>=<code>on</code>|<code>off</code>\n</dt>\n<dd>\nthis parameter (0.7.42) determines\n(via the <code>IPV6_V6ONLY</code> socket option)\nwhether an IPv6 socket listening on a wildcard address <code>[::]</code>\nwill accept only IPv6 connections or both IPv6 and IPv4 connections.\nThis parameter is turned on by default.\nIt can only be set once on start.\n<blockquote class=\"note\">\nPrior to version 1.3.4,\nif this parameter was omitted then the operating system’s settings were\nin effect for the socket.\n</blockquote>\n</dd>\n\n<dt id=\"reuseport\">\n<code>reuseport</code>\n</dt>\n<dd>\nthis parameter (1.9.1) instructs to create an individual listening socket\nfor each worker process\n(using the <code>SO_REUSEPORT</code> socket option), allowing a kernel\nto distribute incoming connections between worker processes.\nThis currently works only on Linux 3.9+ and DragonFly BSD.\n<blockquote class=\"note\">\nInappropriate use of this option may have its security\n<a href=\"http://man7.org/linux/man-pages/man7/socket.7.html\">implications</a>.\n</blockquote>\n</dd>\n\n<dt>\n<code>so_keepalive</code>=<code>on</code>|<code>off</code>|[<code><i>keepidle</i></code>]:[<code><i>keepintvl</i></code>]:[<code><i>keepcnt</i></code>]\n</dt>\n<dd>\nthis parameter (1.1.11) configures the “TCP keepalive” behavior\nfor the listening socket.\nIf this parameter is omitted then the operating system’s settings will be\nin effect for the socket.\nIf it is set to the value “<code>on</code>”, the\n<code>SO_KEEPALIVE</code> option is turned on for the socket.\nIf it is set to the value “<code>off</code>”, the\n<code>SO_KEEPALIVE</code> option is turned off for the socket.\nSome operating systems support setting of TCP keepalive parameters on\na per-socket basis using the <code>TCP_KEEPIDLE</code>,\n<code>TCP_KEEPINTVL</code>, and <code>TCP_KEEPCNT</code> socket options.\nOn such systems (currently, Linux 2.4+, NetBSD 5+, and\nFreeBSD 9.0-STABLE), they can be configured\nusing the <code><i>keepidle</i></code>, <code><i>keepintvl</i></code>, and\n<code><i>keepcnt</i></code> parameters.\nOne or two parameters may be omitted, in which case the system default setting\nfor the corresponding socket option will be in effect.\nFor example,\n<blockquote class=\"example\"><pre>so_keepalive=30m::10</pre></blockquote>\nwill set the idle timeout (<code>TCP_KEEPIDLE</code>) to 30 minutes,\nleave the probe interval (<code>TCP_KEEPINTVL</code>) at its system default,\nand set the probes count (<code>TCP_KEEPCNT</code>) to 10 probes.\n</dd>\n\n</dl><p> \n</p><p>\nExample:\n</p> <blockquote class=\"example\"><pre>\nlisten 127.0.0.1 default_server accept_filter=dataready backlog=1024;\n</pre></blockquote><p> \n</p>"},{"directive":"lingering_timeout","defaultValue":"lingering_timeout 5s;","syntax":"lingering_timeout time;","context":"http, server, location","description":"<p>\nWhen <a href=\"#lingering_close\">lingering_close</a> is in effect, this directive specifies\nthe maximum waiting time for more client data to arrive.\nIf data are not received during this time, the connection is closed.\nOtherwise, the data are read and ignored, and nginx starts waiting\nfor more data again.\nThe “wait-read-ignore” cycle is repeated, but no longer than specified by the\n<a href=\"#lingering_time\">lingering_time</a> directive.\n</p>"},{"directive":"lingering_time","defaultValue":"lingering_time 30s;","syntax":"lingering_time time;","context":"http, server, location","description":"<p>\nWhen <a href=\"#lingering_close\">lingering_close</a> is in effect,\nthis directive specifies the maximum time during which nginx\nwill process (read and ignore) additional data coming from a client.\nAfter that, the connection will be closed, even if there will be\nmore data.\n</p>"},{"directive":"lingering_close","defaultValue":"lingering_close on;","syntax":"lingering_close     off |    on |    always;","context":"http, server, location","description":"<p>\n                    This directive appeared in versions 1.1.0 and 1.0.6.\n                    \n                        </p>\n                    </div><p>\nControls how nginx closes client connections.\n</p><p>\nThe default value “<code>on</code>” instructs nginx to\n<a href=\"#lingering_timeout\">wait for</a> and\n<a href=\"#lingering_time\">process</a> additional data from a client\nbefore fully closing a connection, but only\nif heuristics suggests that a client may be sending more data.\n</p><p>\nThe value “<code>always</code>” will cause nginx to unconditionally\nwait for and process additional client data.\n</p><p>\nThe value “<code>off</code>” tells nginx to never wait for\nmore data and close the connection immediately.\nThis behavior breaks the protocol and should not be used under normal\ncircumstances.\n</p>"},{"directive":"limit_zone","defaultValue":"","syntax":"","context":"","description":null},{"directive":"limit_req_zone","defaultValue":"","syntax":"","context":"","description":null},{"directive":"limit_req_status","defaultValue":"limit_req_status 503;","syntax":"limit_req_status code;","context":"http, server, location","description":"<p>This directive appeared in version 1.3.15.\n            </p></div><p>\nSets the status code to return in response to rejected requests.\n</p>"},{"directive":"limit_req_log_level","defaultValue":"limit_req_log_level error;","syntax":"limit_req_log_level info |notice |warn |error;","context":"http, server, location","description":"<p>This directive appeared in version 0.8.18.\n            </p></div><p>\nSets the desired logging level\nfor cases when the server refuses to process requests\ndue to rate exceeding,\nor delays request processing.\nLogging level for delays is one point less than for refusals; for example,\nif “<code>limit_req_log_level notice</code>” is specified,\ndelays are logged with the <code>info</code> level.\n</p>"},{"directive":"limit_req","defaultValue":"—","syntax":"limit_req     zone=name    [burst=number]    [nodelay];","context":"http, server, location","description":"<p>\nSets the shared memory zone\nand the maximum burst size of requests.\nIf the requests rate exceeds the rate configured for a zone,\ntheir processing is delayed such that requests are processed\nat a defined rate.\nExcessive requests are delayed until their number exceeds the\nmaximum burst size\nin which case the request is terminated with an error\n503 (Service Temporarily Unavailable).\nBy default, the maximum burst size is equal to zero.\nFor example, the directives\n</p> <blockquote class=\"example\"><pre>\nlimit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;\n\nserver {\n    location /search/ {\n        limit_req zone=one burst=5;\n    }\n</pre></blockquote><p> \nallow not more than 1 request per second at an average,\nwith bursts not exceeding 5 requests.\n</p><p>\nIf delaying of excessive requests while requests are being limited is not\ndesired, the parameter <code>nodelay</code> should be used:\n</p> <blockquote class=\"example\"><pre>\nlimit_req zone=one burst=5 nodelay;\n</pre></blockquote><p> \n</p><p>\nThere could be several <code>limit_req</code> directives.\nFor example, the following configuration will limit the processing rate\nof requests coming from a single IP address and, at the same time,\nthe request processing rate by the virtual server:\n</p> <blockquote class=\"example\"><pre>\nlimit_req_zone $binary_remote_addr zone=perip:10m rate=1r/s;\nlimit_req_zone $server_name zone=perserver:10m rate=10r/s;\n\nserver {\n    ...\n    limit_req zone=perip burst=5 nodelay;\n    limit_req zone=perserver burst=10;\n}\n</pre></blockquote><p> \n\n</p><p>\nThese directives are inherited from the previous level if and\nonly if there are no\n<code>limit_req</code>\ndirectives on the current level.\n</p>"},{"directive":"limit_rate_after","defaultValue":"limit_rate_after 0;","syntax":"limit_rate_after size;","context":"http, server, location, if in location","description":"<p>This directive appeared in version 0.8.0.\n            </p></div><p>\nSets the initial amount after which the further transmission\nof a response to a client will be rate limited.\n</p><p>\nExample:\n</p> <blockquote class=\"example\"><pre>\nlocation /flv/ {\n    flv;\n    limit_rate_after 500k;\n    limit_rate       50k;\n}\n</pre></blockquote><p> \n</p>"},{"directive":"limit_rate","defaultValue":"limit_rate 0;","syntax":"limit_rate rate;","context":"http, server, location, if in location","description":"<p>\nLimits the rate of response transmission to a client.\nThe <code><i>rate</i></code> is specified in bytes per second.\nThe zero value disables rate limiting.\n\nThe limit is set per a request, and so if a client simultaneously opens\ntwo connections, the overall rate will be twice as much\nas the specified limit.\n</p><p>\nRate limit can also be set in the <code>$limit_rate</code> variable.\nIt may be useful in cases where rate should be limited\ndepending on a certain condition:\n</p> <blockquote class=\"example\"><pre>\nserver {\n\n    if ($slow) {\n        set $limit_rate 4k;\n    }\n\n    ...\n}\n</pre></blockquote><p> \n</p><p>\nRate limit can also be set in the\n“X-Accel-Limit-Rate” header field of a proxied server response.\nThis capability can be disabled using the\n<a href=\"ngx_http_proxy_module.html#proxy_ignore_headers\">proxy_ignore_headers</a>,\n<a href=\"ngx_http_fastcgi_module.html#fastcgi_ignore_headers\">fastcgi_ignore_headers</a>,\n<a href=\"ngx_http_uwsgi_module.html#uwsgi_ignore_headers\">uwsgi_ignore_headers</a>,\nand\n<a href=\"ngx_http_scgi_module.html#scgi_ignore_headers\">scgi_ignore_headers</a>\ndirectives.\n</p>"},{"directive":"limit_except","defaultValue":"—","syntax":"limit_except method ... { ... }","context":"location","description":"<p>\nLimits allowed HTTP methods inside a location.\nThe <code><i>method</i></code> parameter can be one of the following:\n<code>GET</code>,\n<code>HEAD</code>,\n<code>POST</code>,\n<code>PUT</code>,\n<code>DELETE</code>,\n<code>MKCOL</code>,\n<code>COPY</code>,\n<code>MOVE</code>,\n<code>OPTIONS</code>,\n<code>PROPFIND</code>,\n<code>PROPPATCH</code>,\n<code>LOCK</code>,\n<code>UNLOCK</code>,\nor\n<code>PATCH</code>.\nAllowing the <code>GET</code> method makes the\n<code>HEAD</code> method also allowed.\nAccess to other methods can be limited using the\n<a href=\"ngx_http_access_module.html\">ngx_http_access_module</a>\nand\n<a href=\"ngx_http_auth_basic_module.html\">ngx_http_auth_basic_module</a>\nmodules directives:\n</p> <blockquote class=\"example\"><pre>\nlimit_except GET {\n    allow 192.168.1.0/32;\n    deny  all;\n}\n</pre></blockquote><p> \nPlease note that this will limit access to all methods\n<strong>except</strong> GET and HEAD.\n</p>"},{"directive":"limit_conn_zone","defaultValue":"","syntax":"","context":"","description":null},{"directive":"limit_conn_zone","defaultValue":"—","syntax":"limit_conn_zone     key    zone=name:size;","context":"http","description":"<p>\nSets parameters for a shared memory zone\nthat will keep states for various keys.\nIn particular, the state includes the current number of connections.\nThe <code><i>key</i></code> can contain text, variables, and their combination.\nRequests with an empty key value are not accounted.\n</p> <blockquote class=\"note\">\nPrior to version 1.7.6, a <code><i>key</i></code> could contain exactly one variable.\n</blockquote><p> \nUsage example:\n</p> <blockquote class=\"example\"><pre>\nlimit_conn_zone $binary_remote_addr zone=addr:10m;\n</pre></blockquote><p> \nHere, a client IP address serves as a key.\nNote that instead of <code>$remote_addr</code>, the\n<code>$binary_remote_addr</code> variable is used here.\nThe <code>$remote_addr</code> variable’s size can\nvary from 7 to 15 bytes.\nThe stored state occupies either\n32 or 64 bytes of memory on 32-bit platforms and always 64\nbytes on 64-bit platforms.\nThe <code>$binary_remote_addr</code> variable’s size\nis always 4 bytes for IPv4 addresses or 16 bytes for IPv6 addresses.\nThe stored state always occupies 32 or 64 bytes\non 32-bit platforms and 64 bytes on 64-bit platforms.\nOne megabyte zone can keep about 32 thousand 32-byte states\nor about 16 thousand 64-byte states.\nIf the zone storage is exhausted, the server will return the\n503 (Service Temporarily Unavailable)\nerror to all further requests.\n</p>"},{"directive":"limit_conn_status","defaultValue":"limit_conn_status 503;","syntax":"limit_conn_status code;","context":"http, server, location","description":"<p>This directive appeared in version 1.3.15.\n            </p></div><p>\nSets the status code to return in response to rejected requests.\n</p>"},{"directive":"limit_conn_log_level","defaultValue":"limit_conn_log_level error;","syntax":"limit_conn_log_level info |notice |warn |error;","context":"stream, server","description":"<p>\nSets the desired logging level for cases when the server\nlimits the number of connections.\n</p>"},{"directive":"limit_conn_log_level","defaultValue":"limit_conn_log_level error;","syntax":"limit_conn_log_level info |notice |warn |error;","context":"http, server, location","description":"<p>This directive appeared in version 0.8.18.\n            </p></div><p>\nSets the desired logging level for cases when the server\nlimits the number of connections.\n</p>"},{"directive":"limit_conn","defaultValue":"—","syntax":"limit_conn zone number;","context":"stream, server","description":"<p>\nSets the shared memory zone\nand the maximum allowed number of connections for a given key value.\nWhen this limit is exceeded, the server will close the connection.\nFor example, the directives\n</p> <blockquote class=\"example\"><pre>\nlimit_conn_zone $binary_remote_addr zone=addr:10m;\n\nserver {\n    ...\n    limit_conn addr 1;\n}\n</pre></blockquote><p> \nallow only one connection per an IP address at a time.\n</p><p>\nWhen several <code>limit_conn</code> directives are specified,\nany configured limit will apply.\n</p><p>\nThe directives are inherited from the previous level if and\nonly if there are no\n<code>limit_conn</code>\ndirectives on the current level.\n</p>"},{"directive":"limit_conn","defaultValue":"—","syntax":"limit_conn zone number;","context":"http, server, location","description":"<p>\nSets the shared memory zone\nand the maximum allowed number of connections for a given key value.\nWhen this limit is exceeded, the server will return the\n503 (Service Temporarily Unavailable)\nerror in reply to a request.\nFor example, the directives\n</p> <blockquote class=\"example\"><pre>\nlimit_conn_zone $binary_remote_addr zone=addr:10m;\n\nserver {\n    location /download/ {\n        limit_conn addr 1;\n    }\n</pre></blockquote><p> \nallow only one connection per an IP address at a time.\n</p> <blockquote class=\"note\">\nIn HTTP/2 and SPDY, each concurrent request is considered a separate connection.\n</blockquote><p> \n</p><p>\nThere could be several <code>limit_conn</code> directives.\nFor example, the following configuration will limit the number\nof connections to the server per a client IP and, at the same time,\nthe total number of connections to the virtual server:\n</p> <blockquote class=\"example\"><pre>\nlimit_conn_zone $binary_remote_addr zone=perip:10m;\nlimit_conn_zone $server_name zone=perserver:10m;\n\nserver {\n    ...\n    limit_conn perip 10;\n    limit_conn perserver 100;\n}\n</pre></blockquote><p> \n\n</p><p>\nThese directives are inherited from the previous level if and\nonly if there are no\n<code>limit_conn</code>\ndirectives on the current level.\n</p>"},{"directive":"least_time","defaultValue":"—","syntax":"least_time     connect |    first_byte |    last_byte    [inflight];","context":"upstream","description":"<p>\nSpecifies that a group should use a load balancing method where a connection\nis passed to the server with the least average time and\nleast number of active connections, taking into account weights of servers.\nIf there are several such servers, they are tried in turn using a\nweighted round-robin balancing method.\n</p><p>\nIf the <code>connect</code> parameter is specified,\ntime to connect to the upstream server is used.\nIf the <code>first_byte</code> parameter is specified,\ntime to receive the first byte of data is used.\nIf the <code>last_byte</code> is specified,\ntime to receive the last byte of data is used.\nIf the <code>inflight</code> parameter is specified (1.11.6),\nincomplete connections are also taken into account.\n</p> <blockquote class=\"note\">\nPrior to version 1.11.6,\nincomplete connections were taken into account by default.\n</blockquote><p> \n</p><p>\n</p> <blockquote class=\"note\">\nThis directive is available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote><p> \n</p>"},{"directive":"least_time","defaultValue":"—","syntax":"least_time     header |    last_byte    [inflight];","context":"upstream","description":"<p>This directive appeared in version 1.7.10.\n            </p></div><p>\nSpecifies that a group should use a load balancing method where a request\nis passed to the server with the least average response time and\nleast number of active connections, taking into account weights of servers.\nIf there are several such servers, they are tried in turn using a\nweighted round-robin balancing method.\n</p><p>\nIf the <code>header</code> parameter is specified,\ntime to receive the\n<a href=\"#var_upstream_header_time\">response header</a> is used.\nIf the <code>last_byte</code> parameter is specified,\ntime to receive the <a href=\"#var_upstream_response_time\">full response</a>\nis used.\nIf the <code>inflight</code> parameter is specified (1.11.6),\nincomplete requests are also taken into account.\n</p> <blockquote class=\"note\">\nPrior to version 1.11.6, incomplete requests were taken into account by default.\n</blockquote><p> \n</p><p>\n</p> <blockquote class=\"note\">\nThis directive is available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote><p> \n</p>"},{"directive":"least_conn","defaultValue":"—","syntax":"least_conn;","context":"upstream","description":"<p>\nSpecifies that a server group should use a load balancing method\nwhere a connection\nis passed to the server with the least number of active connections,\ntaking into account weights of servers.\nIf there are several such servers, they are tried in turn using a\nweighted round-robin balancing method.\n</p>"},{"directive":"least_conn","defaultValue":"—","syntax":"least_conn;","context":"upstream","description":"<p>\n                    This directive appeared in versions 1.3.1 and 1.2.2.\n                    \n                        </p>\n                    </div><p>\nSpecifies that a group should use a load balancing method where a request\nis passed to the server with the least number of active connections,\ntaking into account weights of servers.\nIf there are several such servers, they are tried in turn using a\nweighted round-robin balancing method.\n</p>"},{"directive":"large_client_header_buffers","defaultValue":"large_client_header_buffers 4 8k;","syntax":"large_client_header_buffers number size;","context":"http, server","description":"<p>\nSets the maximum <code><i>number</i></code> and <code><i>size</i></code> of\nbuffers used for reading large client request header.\nA request line cannot exceed the size of one buffer, or the\n414 (Request-URI Too Large)\nerror is returned to the client.\nA request header field cannot exceed the size of one buffer as well, or the\n400 (Bad Request)\nerror is returned to the client.\nBuffers are allocated only on demand.\nBy default, the buffer size is equal to 8K bytes.\nIf after the end of request processing a connection is transitioned\ninto the keep-alive state, these buffers are released.\n</p>"},{"directive":"keepalive_timeout","defaultValue":"keepalive_timeout 75s;","syntax":"keepalive_timeout     timeout    [header_timeout];","context":"http, server, location","description":"<p>\nThe first parameter sets a timeout during which a keep-alive\nclient connection will stay open on the server side.\nThe zero value disables keep-alive client connections.\nThe optional second parameter sets a value in the\n“Keep-Alive: timeout=<code><i>time</i></code>”\nresponse header field.\nTwo parameters may differ.\n</p><p>\nThe\n“Keep-Alive: timeout=<code><i>time</i></code>”\nheader field is recognized by Mozilla and Konqueror.\nMSIE closes keep-alive connections by itself in about 60 seconds.\n</p>"},{"directive":"keepalive_requests","defaultValue":"keepalive_requests 100;","syntax":"keepalive_requests number;","context":"http, server, location","description":"<p>This directive appeared in version 0.8.0.\n            </p></div><p>\nSets the maximum number of requests that can be\nserved through one keep-alive connection.\nAfter the maximum number of requests are made, the connection is closed.\n</p>"},{"directive":"keepalive_disable","defaultValue":"keepalive_disable msie6;","syntax":"keepalive_disable none | browser ...;","context":"http, server, location","description":"<p>\nDisables keep-alive connections with misbehaving browsers.\nThe <code><i>browser</i></code> parameters specify which\nbrowsers will be affected.\nThe value <code>msie6</code> disables keep-alive connections\nwith old versions of MSIE, once a POST request is received.\nThe value <code>safari</code> disables keep-alive connections\nwith Safari and Safari-like browsers on macOS and macOS-like\noperating systems.\nThe value <code>none</code> enables keep-alive connections\nwith all browsers.\n</p> <blockquote class=\"note\">\nPrior to version 1.1.18, the value <code>safari</code> matched\nall Safari and Safari-like browsers on all operating systems, and\nkeep-alive connections with them were disabled by default.\n</blockquote><p> \n</p>"},{"directive":"keepalive","defaultValue":"—","syntax":"keepalive connections;","context":"upstream","description":"<p>This directive appeared in version 1.1.4.\n            </p></div><p>\nActivates the cache for connections to upstream servers.\n</p><p>\nThe <code><i>connections</i></code> parameter sets the maximum number of\nidle keepalive connections to upstream servers that are preserved in\nthe cache of each worker process.\nWhen this number is exceeded, the least recently used connections\nare closed.\n</p> <blockquote class=\"note\">\nIt should be particularly noted that the <code>keepalive</code> directive\ndoes not limit the total number of connections to upstream servers\nthat an nginx worker process can open.\nThe <code><i>connections</i></code> parameter should be set to a number small enough\nto let upstream servers process new incoming connections as well.\n</blockquote><p> \n</p><p>\nExample configuration of memcached upstream with keepalive connections:\n</p> <blockquote class=\"example\"><pre>\nupstream memcached_backend {\n    server 127.0.0.1:11211;\n    server 10.0.0.2:11211;\n\n    keepalive 32;\n}\n\nserver {\n    ...\n\n    location /memcached/ {\n        set $memcached_key $uri;\n        memcached_pass memcached_backend;\n    }\n\n}\n</pre></blockquote><p> \n</p><p>\nFor HTTP, the <a href=\"ngx_http_proxy_module.html#proxy_http_version\">proxy_http_version</a>\ndirective should be set to “<code>1.1</code>”\nand the “Connection” header field should be cleared:\n</p> <blockquote class=\"example\"><pre>\nupstream http_backend {\n    server 127.0.0.1:8080;\n\n    keepalive 16;\n}\n\nserver {\n    ...\n\n    location /http/ {\n        proxy_pass http://http_backend;\n        proxy_http_version 1.1;\n        proxy_set_header Connection \"\";\n        ...\n    }\n}\n</pre></blockquote><p> \n</p><p>\n</p> <blockquote class=\"note\">\nAlternatively, HTTP/1.0 persistent connections can be used by passing the\n“Connection: Keep-Alive” header field to an upstream server,\nthough this method is not recommended.\n</blockquote><p> \n</p><p>\nFor FastCGI servers, it is required to set\n<a href=\"ngx_http_fastcgi_module.html#fastcgi_keep_conn\">fastcgi_keep_conn</a>\nfor keepalive connections to work:\n</p> <blockquote class=\"example\"><pre>\nupstream fastcgi_backend {\n    server 127.0.0.1:9000;\n\n    keepalive 8;\n}\n\nserver {\n    ...\n\n    location /fastcgi/ {\n        fastcgi_pass fastcgi_backend;\n        fastcgi_keep_conn on;\n        ...\n    }\n}\n</pre></blockquote><p> \n</p><p>\n</p> <blockquote class=\"note\">\nWhen using load balancer methods other than the default\nround-robin method, it is necessary to activate them before\nthe <code>keepalive</code> directive.\n</blockquote><p> \n\n</p> <blockquote class=\"note\">\nSCGI and uwsgi protocols do not have a notion of keepalive connections.\n</blockquote><p> \n</p>"},{"directive":"js_set","defaultValue":"—","syntax":"js_set $variable function;","context":"stream","description":"<p>\nSets an nginScript function for the specified variable.\n</p>"},{"directive":"js_set","defaultValue":"—","syntax":"js_set $variable function;","context":"http","description":"<p>\nSets an nginScript function for the specified variable.\n</p>"},{"directive":"js_preread","defaultValue":"—","syntax":"js_preread function;","context":"stream, server","description":"<p>\nSets an nginScript function which will be called at the\n<a href=\"stream_processing.html#preread_phase\">preread</a> phase.\n</p>"},{"directive":"js_include","defaultValue":"—","syntax":"js_include file;","context":"stream","description":"<p>\nSpecifies a file that implements server and variable handlers in nginScript.\n</p>"},{"directive":"js_include","defaultValue":"—","syntax":"js_include file;","context":"http","description":"<p>\nSpecifies a file that implements location and variable handlers in nginScript.\n</p>"},{"directive":"js_filter","defaultValue":"—","syntax":"js_filter function;","context":"stream, server","description":"<p>\nSets a data filter.\n</p>"},{"directive":"js_content","defaultValue":"—","syntax":"js_content function;","context":"location, limit_except","description":"<p>\nSets an nginScript function as a location content handler.\n</p>"},{"directive":"js_access","defaultValue":"—","syntax":"js_access function;","context":"stream, server","description":"<p>\nSets an nginScript function which will be called at the\n<a href=\"stream_processing.html#access_phase\">access</a> phase.\n</p>"},{"directive":"ip_hash","defaultValue":"—","syntax":"ip_hash;","context":"upstream","description":"<p>\nSpecifies that a group should use a load balancing method where requests\nare distributed between servers based on client IP addresses.\nThe first three octets of the client IPv4 address, or the entire IPv6 address,\nare used as a hashing key.\nThe method ensures that requests from the same client will always be\npassed to the same server except when this server is unavailable.\nIn the latter case client requests will be passed to another server.\nMost probably, it will always be the same server as well.\n</p> <blockquote class=\"note\">\nIPv6 addresses are supported starting from versions 1.3.2 and 1.2.2.\n</blockquote><p> \n</p><p>\nIf one of the servers needs to be temporarily removed, it should\nbe marked with the <code>down</code> parameter in\norder to preserve the current hashing of client IP addresses.\n</p><p>\nExample:\n</p> <blockquote class=\"example\"><pre>\nupstream backend {\n    ip_hash;\n\n    server backend1.example.com;\n    server backend2.example.com;\n    server backend3.example.com <strong>down</strong>;\n    server backend4.example.com;\n}\n</pre></blockquote><p> \n</p><p>\n</p> <blockquote class=\"note\">\nUntil versions 1.3.1 and 1.2.2, it was not possible to specify a weight for\nservers using the <code>ip_hash</code> load balancing method.\n</blockquote><p> \n</p>"},{"directive":"internal","defaultValue":"—","syntax":"internal;","context":"location","description":"<p>\nSpecifies that a given location can only be used for internal requests.\nFor external requests, the client error\n404 (Not Found)\nis returned.\nInternal requests are the following:\n\n</p> <ul class=\"compact\">\n\n<li>\nrequests redirected by the\n<a href=\"#error_page\">error_page</a>,\n<a href=\"ngx_http_index_module.html#index\">index</a>,\n<a href=\"ngx_http_random_index_module.html#random_index\">random_index</a>, and\n<a href=\"#try_files\">try_files</a> directives;\n</li>\n\n<li>\nrequests redirected by the “X-Accel-Redirect”\nresponse header field from an upstream server;\n</li>\n\n<li>\nsubrequests formed by the\n“<code>include virtual</code>”\ncommand of the\n<a href=\"ngx_http_ssi_module.html\">ngx_http_ssi_module</a>\nmodule and by the\n<a href=\"ngx_http_addition_module.html\">ngx_http_addition_module</a>\nmodule directives;\n</li>\n\n<li>\nrequests changed by the\n<a href=\"ngx_http_rewrite_module.html#rewrite\">rewrite</a> directive.\n</li>\n\n</ul><p> \n</p><p>\nExample:\n</p> <blockquote class=\"example\"><pre>\nerror_page 404 /404.html;\n\nlocation /404.html {\n    internal;\n}\n</pre></blockquote><p> \n</p> <blockquote class=\"note\">\nThere is a limit of 10 internal redirects per request to prevent\nrequest processing cycles that can occur in incorrect configurations.\nIf this limit is reached, the error\n500 (Internal Server Error) is returned.\nIn such cases, the “rewrite or internal redirection cycle” message\ncan be seen in the error log.\n</blockquote><p> \n</p>"},{"directive":"index","defaultValue":"","syntax":"","context":"","description":null},{"directive":"include","defaultValue":"—","syntax":"include file | mask;","context":"any","description":"<p>\nIncludes another <code><i>file</i></code>, or files matching the\nspecified <code><i>mask</i></code>, into configuration.\nIncluded files should consist of\nsyntactically correct directives and blocks.\n</p><p>\nUsage example:\n</p> <blockquote class=\"example\"><pre>\ninclude mime.types;\ninclude vhosts/*.conf;\n</pre></blockquote><p> \n</p>"},{"directive":"imap_client_buffer","defaultValue":"","syntax":"","context":"","description":null},{"directive":"imap_capabilities","defaultValue":"imap_capabilities IMAP4 IMAP4rev1 UIDPLUS;","syntax":"imap_capabilities extension ...;","context":"mail, server","description":"<p>\nSets the\n<a href=\"https://tools.ietf.org/html/rfc3501\">IMAP protocol</a>\nextensions list that is passed to the client in response to\nthe <code>CAPABILITY</code> command.\nThe authentication methods specified in the <a href=\"#imap_auth\">imap_auth</a> directive and\n<a href=\"https://tools.ietf.org/html/rfc2595\">STARTTLS</a>\nare automatically added to this list depending on the\n<a href=\"ngx_mail_ssl_module.html#starttls\">starttls</a> directive value.\n</p><p>\nIt makes sense to specify the extensions\nsupported by the IMAP backends\nto which the clients are proxied (if these extensions are related to commands\nused after the authentication, when nginx transparently proxies a client\nconnection to the backend).\n</p><p>\nThe current list of standardized extensions is published at\n<a href=\"http://www.iana.org/assignments/imap4-capabilities\">www.iana.org</a>.\n</p>"},{"directive":"imap_auth","defaultValue":"imap_auth plain;","syntax":"imap_auth method ...;","context":"mail, server","description":"<p>\nSets permitted methods of authentication for IMAP clients.\nSupported methods are:\n</p> <dl class=\"compact\">\n\n<dt><code>login</code></dt>\n<dd>\n<a href=\"https://tools.ietf.org/html/draft-murchison-sasl-login-00\">AUTH=LOGIN</a>\n</dd>\n\n<dt><code>plain</code></dt>\n<dd>\n<a href=\"https://tools.ietf.org/html/rfc4616\">AUTH=PLAIN</a>\n</dd>\n\n<dt><code>cram-md5</code></dt>\n<dd>\n<a href=\"https://tools.ietf.org/html/rfc2195\">AUTH=CRAM-MD5</a>.\nIn order for this method to work, the password must be stored unencrypted.\n</dd>\n\n<dt><code>external</code></dt>\n<dd>\n<a href=\"https://tools.ietf.org/html/rfc4422\">AUTH=EXTERNAL</a> (1.11.6).\n</dd>\n\n</dl><p> \n</p>"},{"directive":"image_filter_webp_quality","defaultValue":"","syntax":"","context":"","description":null},{"directive":"image_filter_transparency","defaultValue":"image_filter_transparency on;","syntax":"image_filter_transparency on|off;","context":"http, server, location","description":"<p>\nDefines whether transparency should be preserved when transforming\nGIF images or PNG images with colors specified by a palette.\nThe loss of transparency results in images of a better quality.\nThe alpha channel transparency in PNG is always preserved.\n</p>"},{"directive":"image_filter_sharpen","defaultValue":"image_filter_sharpen 0;","syntax":"image_filter_sharpen percent;","context":"http, server, location","description":"<p>\nIncreases sharpness of the final image.\nThe sharpness percentage can exceed 100.\nThe zero value disables sharpening.\nParameter value can contain variables.\n</p>"},{"directive":"image_filter_jpeg_quality","defaultValue":"image_filter_jpeg_quality 75;","syntax":"image_filter_jpeg_quality quality;","context":"http, server, location","description":"<p>\nSets the desired <code><i>quality</i></code> of the transformed JPEG images.\nAcceptable values are in the range from 1 to 100.\nLesser values usually imply both lower image quality and less data to transfer.\nThe maximum recommended value is 95.\nParameter value can contain variables.\n</p>"},{"directive":"image_filter_interlace","defaultValue":"image_filter_interlace off;","syntax":"image_filter_interlace on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.3.15.\n            </p></div><p>\nIf enabled, final images will be interlaced.\nFor JPEG, final images will be in “progressive JPEG” format.\n</p>"},{"directive":"image_filter_buffer","defaultValue":"image_filter_buffer 1M;","syntax":"image_filter_buffer size;","context":"http, server, location","description":"<p>\nSets the maximum size of the buffer used for reading images.\nWhen the size is exceeded the server returns error\n415 (Unsupported Media Type).\n</p>"},{"directive":"image_filter","defaultValue":"image_filter off;","syntax":"image_filter off;image_filter test;image_filter size;image_filter     rotate    90 | 180 |    270;image_filter     resize    width    height;image_filter     crop    width    height;","context":"location","description":"<p>\nSets the type of transformation to perform on images:\n</p> <dl class=\"compact\">\n\n<dt><code>off</code></dt>\n<dd>\nturns off module processing in a surrounding location.\n</dd>\n\n<dt><code>test</code></dt>\n<dd>\nensures that responses are images in either JPEG, GIF, PNG, or WebP format.\nOtherwise, the\n415 (Unsupported Media Type)\nerror is returned.\n</dd>\n\n<dt><code>size</code></dt>\n<dd>\noutputs information about images in a JSON format, e.g.:\n<blockquote class=\"example\"><pre>\n{ \"img\" : { \"width\": 100, \"height\": 100, \"type\": \"gif\" } }\n</pre></blockquote>\nIn case of an error, the output is as follows:\n<blockquote class=\"example\"><pre>\n{}\n</pre></blockquote>\n</dd>\n\n<dt><code>rotate</code>\n<code>90</code>|<code>180</code>|<code>270</code>\n</dt>\n<dd>\nrotates images counter-clockwise by the specified number of degrees.\nParameter value can contain variables.\nThis mode can be used either alone or along with the\n<code>resize</code> and <code>crop</code> transformations.\n</dd>\n\n<dt><code>resize</code>\n<code><i>width</i></code>\n<code><i>height</i></code>\n</dt>\n<dd>\nproportionally reduces an image to the specified sizes.\nTo reduce by only one dimension, another dimension can be specified as\n“<code>-</code>”.\nIn case of an error, the server will return code\n415 (Unsupported Media Type).\nParameter values can contain variables.\nWhen used along with the <code>rotate</code> parameter,\nthe rotation happens <strong>after</strong> reduction.\n</dd>\n\n<dt><code>crop</code>\n<code><i>width</i></code>\n<code><i>height</i></code>\n</dt>\n<dd>\nproportionally reduces an image to the larger side size\nand crops extraneous edges by another side.\nTo reduce by only one dimension, another dimension can be specified as\n“<code>-</code>”.\nIn case of an error, the server will return code\n415 (Unsupported Media Type).\nParameter values can contain variables.\nWhen used along with the <code>rotate</code> parameter,\nthe rotation happens <strong>before</strong> reduction.\n</dd>\n\n</dl><p> \n</p>"},{"directive":"ignore_invalid_headers","defaultValue":"ignore_invalid_headers on;","syntax":"ignore_invalid_headers on | off;","context":"http, server","description":"<p>\nControls whether header fields with invalid names should be ignored.\nValid names are composed of English letters, digits, hyphens, and possibly\nunderscores (as controlled by the <a href=\"#underscores_in_headers\">underscores_in_headers</a>\ndirective).\n</p><p>\nIf the directive is specified on the <a href=\"#server\">server</a> level,\nits value is only used if a server is a default one.\nThe value specified also applies to all virtual servers\nlistening on the same address and port.\n</p>"},{"directive":"if_modified_since","defaultValue":"if_modified_since exact;","syntax":"if_modified_since     off |    exact |    before;","context":"http, server, location","description":"<p>This directive appeared in version 0.7.24.\n            </p></div><p>\nSpecifies how to compare modification time of a response\nwith the time in the\n“If-Modified-Since”\nrequest header field:\n\n</p> <dl class=\"compact\">\n\n<dt><code>off</code></dt>\n<dd>\nthe\n“If-Modified-Since” request header field is ignored (0.7.34);\n</dd>\n\n<dt><code>exact</code></dt>\n<dd>\nexact match;\n</dd>\n\n<dt><code>before</code></dt>\n<dd>\nmodification time of a response is\nless than or equal to the time in the “If-Modified-Since”\nrequest header field.\n</dd>\n\n</dl><p> \n</p>"},{"directive":"if","defaultValue":"—","syntax":"if (condition) { ... }","context":"server, location","description":"<p>\nThe specified <code><i>condition</i></code> is evaluated.\nIf true, this module directives specified inside the braces are\nexecuted, and the request is assigned the configuration inside the\n<code>if</code> directive.\nConfigurations inside the <code>if</code> directives are\ninherited from the previous configuration level.\n</p><p>\nA condition may be any of the following:\n</p> <ul class=\"compact\">\n\n<li>\na variable name; false if the value of a variable is an empty string\nor “<code>0</code>”;\n<blockquote class=\"note\">\nBefore version 1.0.1, any string starting with “<code>0</code>”\nwas considered a false value.\n</blockquote>\n</li>\n\n<li>\ncomparison of a variable with a string using the\n“<code>=</code>” and “<code>!=</code>” operators;\n</li>\n\n<li>\nmatching of a variable against a regular expression using the\n“<code>~</code>” (for case-sensitive matching) and\n“<code>~*</code>” (for case-insensitive matching) operators.\nRegular expressions can contain captures that are made available for\nlater reuse in the <code>$1</code>..<code>$9</code> variables.\nNegative operators “<code>!~</code>” and “<code>!~*</code>”\nare also available.\nIf a regular expression includes the “<code>}</code>”\nor “<code>;</code>” characters, the whole expressions should be enclosed\nin single or double quotes.\n</li>\n\n<li>\nchecking of a file existence with the “<code>-f</code>” and\n“<code>!-f</code>” operators;\n</li>\n\n<li>\nchecking of a directory existence with the “<code>-d</code>” and\n“<code>!-d</code>” operators;\n</li>\n\n<li>\nchecking of a file, directory, or symbolic link existence with the\n“<code>-e</code>” and “<code>!-e</code>” operators;\n</li>\n\n<li>\nchecking for an executable file with the “<code>-x</code>”\nand “<code>!-x</code>” operators.\n</li>\n\n</ul><p> \n</p><p>\nExamples:\n</p> <blockquote class=\"example\"><pre>\nif ($http_user_agent ~ MSIE) {\n    rewrite ^(.*)$ /msie/$1 break;\n}\n\nif ($http_cookie ~* \"id=([^;]+)(?:;|$)\") {\n    set $id $1;\n}\n\nif ($request_method = POST) {\n    return 405;\n}\n\nif ($slow) {\n    limit_rate 10k;\n}\n\nif ($invalid_referer) {\n    return 403;\n}\n</pre></blockquote><p> \n</p> <blockquote class=\"note\">\nA value of the <code>$invalid_referer</code> embedded variable is set by the\n<a href=\"ngx_http_referer_module.html#valid_referers\">valid_referers</a> directive.\n</blockquote><p> \n</p>"},{"directive":"http2_recv_timeout","defaultValue":"http2_recv_timeout 30s;","syntax":"http2_recv_timeout time;","context":"http, server","description":"<p>\nSets the timeout for expecting more data from the client,\nafter which the connection is closed.\n</p>"},{"directive":"http2_recv_buffer_size","defaultValue":"http2_recv_buffer_size 256k;","syntax":"http2_recv_buffer_size size;","context":"http","description":"<p>\nSets the size of the per\n<a href=\"../ngx_core_module.html#worker_processes\">worker</a>\ninput buffer.\n</p>"},{"directive":"http2_max_requests","defaultValue":"http2_max_requests 1000;","syntax":"http2_max_requests number;","context":"http, server, location","description":"<p>This directive appeared in version 1.11.6.\n            </p></div><p>\nSets the maximum number of requests that can be\nserved through one HTTP/2 connection,\nafter which the connection is closed\nand the client should use a new connection.\n</p>"},{"directive":"http2_max_header_size","defaultValue":"http2_max_header_size 16k;","syntax":"http2_max_header_size size;","context":"http, server","description":"<p>\nLimits the maximum size of the entire request header list after\n<a href=\"https://tools.ietf.org/html/rfc7541\">HPACK</a> decompression.\nFor most requests, the default limit should be enough.\n</p>"},{"directive":"http2_max_field_size","defaultValue":"http2_max_field_size 4k;","syntax":"http2_max_field_size size;","context":"http, server","description":"<p>\nLimits the maximum size of\nan <a href=\"https://tools.ietf.org/html/rfc7541\">HPACK</a>-compressed\nrequest header field.\nThe limit applies equally to both name and value.\nNote that if Huffman encoding is applied,\nthe actual size of decompressed name and value strings may be larger.\nFor most requests, the default limit should be enough.\n</p>"},{"directive":"http2_max_concurrent_streams","defaultValue":"http2_max_concurrent_streams 128;","syntax":"http2_max_concurrent_streams number;","context":"http, server","description":"<p>\nSets the maximum number of concurrent HTTP/2 streams\nin a connection.\n</p>"},{"directive":"http2_idle_timeout","defaultValue":"http2_idle_timeout 3m;","syntax":"http2_idle_timeout time;","context":"http, server","description":"<p>\nSets the timeout of inactivity after which the connection is closed.\n</p>"},{"directive":"http2_chunk_size","defaultValue":"http2_chunk_size 8k;","syntax":"http2_chunk_size size;","context":"http, server, location","description":"<p>\nSets the maximum size of chunks\ninto which the response body is sliced.\nA too low value results in higher overhead.\nA too high value impairs prioritization due to\n<a href=\"http://en.wikipedia.org/wiki/Head-of-line_blocking\">\nHOL blocking</a>.\n</p>"},{"directive":"http2_body_preread_size","defaultValue":"http2_body_preread_size 64k;","syntax":"http2_body_preread_size size;","context":"http, server","description":"<p>This directive appeared in version 1.11.0.\n            </p></div><p>\nSets the <code><i>size</i></code> of the buffer per each request\nin which the request body may be saved\nbefore it is started to be processed.\n</p>"},{"directive":"http","defaultValue":"—","syntax":"http { ... }","context":"main","description":"<p>\nProvides the configuration file context in which the HTTP server directives\nare specified.\n</p>"},{"directive":"hls_mp4_max_buffer_size","defaultValue":"","syntax":"","context":"","description":null},{"directive":"hls_mp4_buffer_size","defaultValue":"hls_mp4_buffer_size 512k;","syntax":"hls_mp4_buffer_size size;","context":"http, server, location","description":"<p>\nSets the initial <code><i>size</i></code> of the buffer used for\nprocessing MP4 and MOV files.\n</p>"},{"directive":"hls_fragment","defaultValue":"hls_fragment 5s;","syntax":"hls_fragment time;","context":"http, server, location","description":"<p>\nDefines the default fragment length for playlist URIs requested without the\n“<code>len</code>” argument.\n</p>"},{"directive":"hls_forward_args","defaultValue":"hls_forward_args off;","syntax":"hls_forward_args on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.5.12.\n            </p></div><p>\nAdds arguments from a playlist request to URIs of fragments.\nThis may be useful for performing client authorization at the moment of\nrequesting a fragment, or when protecting an HLS stream with the\n<a href=\"ngx_http_secure_link_module.html\">ngx_http_secure_link_module</a>\nmodule.\n</p><p>\nFor example, if a client requests a playlist\n<code>http://example.com/hls/test.mp4.m3u8?a=1&amp;b=2</code>,\nthe arguments <code>a=1</code> and <code>b=2</code>\nwill be added to URIs of fragments after the arguments\n<code>start</code> and <code>end</code>:\n</p> <blockquote class=\"example\"><pre>\n#EXTM3U\n#EXT-X-VERSION:3\n#EXT-X-TARGETDURATION:15\n#EXT-X-PLAYLIST-TYPE:VOD\n\n#EXTINF:9.333,\ntest.mp4.ts?start=0.000&amp;end=9.333&amp;a=1&amp;b=2\n#EXTINF:7.167,\ntest.mp4.ts?start=9.333&amp;end=16.500&amp;a=1&amp;b=2\n#EXTINF:5.416,\ntest.mp4.ts?start=16.500&amp;end=21.916&amp;a=1&amp;b=2\n#EXTINF:5.500,\ntest.mp4.ts?start=21.916&amp;end=27.416&amp;a=1&amp;b=2\n#EXTINF:15.167,\ntest.mp4.ts?start=27.416&amp;end=42.583&amp;a=1&amp;b=2\n#EXTINF:9.626,\ntest.mp4.ts?start=42.583&amp;end=52.209&amp;a=1&amp;b=2\n\n#EXT-X-ENDLIST\n</pre></blockquote><p> \n</p><p>\nIf an HLS stream is protected with the\n<a href=\"ngx_http_secure_link_module.html\">ngx_http_secure_link_module</a>\nmodule, <code>$uri</code> should not be used in the\n<a href=\"ngx_http_secure_link_module.html#secure_link_md5\">secure_link_md5</a>\nexpression because this will cause errors when requesting the fragments.\n<a href=\"ngx_http_map_module.html#map\">Base URI</a> should be used\ninstead of <code>$uri</code>\n(<code>$hls_uri</code> in the example):\n</p> <blockquote class=\"example\"><pre>\nhttp {\n    ...\n\n    map $uri $hls_uri {\n        ~^(?&lt;base_uri&gt;.*).m3u8$ $base_uri;\n        ~^(?&lt;base_uri&gt;.*).ts$   $base_uri;\n        default                 $uri;\n    }\n\n    server {\n        ...\n\n        location /hls {\n            hls;\n            hls_forward_args on;\n\n            alias /var/videos;\n\n            secure_link $arg_md5,$arg_expires;\n            secure_link_md5 \"$secure_link_expires$hls_uri$remote_addr secret\";\n\n            if ($secure_link = \"\") {\n                return 403;\n            }\n\n            if ($secure_link = \"0\") {\n                return 410;\n            }\n        }\n    }\n}\n</pre></blockquote><p> \n</p>"},{"directive":"hls_buffers","defaultValue":"hls_buffers 8 2m;","syntax":"hls_buffers number size;","context":"http, server, location","description":"<p>\nSets the maximum <code><i>number</i></code> and <code><i>size</i></code> of buffers\nthat are used for reading and writing data frames.\n</p>"},{"directive":"hls","defaultValue":"—","syntax":"hls;","context":"location","description":"<p>\nTurns on HLS streaming in the surrounding location.\n</p>"},{"directive":"health_check_timeout","defaultValue":"health_check_timeout 5s;","syntax":"health_check_timeout timeout;","context":"stream, server","description":"<p>\nOverrides the\n<a href=\"ngx_stream_proxy_module.html#proxy_timeout\">proxy_timeout</a>\nvalue for health checks.\n</p>"},{"directive":"health_check","defaultValue":"—","syntax":"health_check [parameters];","context":"server","description":"<p>\nEnables periodic health checks of the servers in a\n<a href=\"ngx_stream_upstream_module.html#upstream\">group</a>.\n</p><p>\nThe following optional parameters are supported:\n</p> <dl class=\"compact\">\n\n<dt id=\"health_check_interval\">\n<code>interval</code>=<code><i>time</i></code>\n</dt>\n<dd>\nsets the interval between two consecutive health checks,\nby default, 5 seconds.\n</dd>\n\n<dt id=\"health_check_jitter\">\n<code>jitter</code>=<code><i>time</i></code>\n</dt>\n<dd>\nsets the time within which\neach health check will be randomly delayed,\nby default, there is no delay.\n</dd>\n\n<dt id=\"health_check_fails\">\n<code>fails</code>=<code><i>number</i></code>\n</dt>\n<dd>\nsets the number of consecutive failed health checks of a particular server\nafter which this server will be considered unhealthy,\nby default, 1.\n</dd>\n\n<dt id=\"health_check_passes\">\n<code>passes</code>=<code><i>number</i></code>\n</dt>\n<dd>\nsets the number of consecutive passed health checks of a particular server\nafter which the server will be considered healthy,\nby default, 1.\n</dd>\n\n<dt id=\"health_check_mandatory\">\n<code>mandatory</code>\n</dt>\n<dd>\nsets the initial “checking” state for a server\nuntil the first health check is completed (1.11.7).\nClient connections are not passed to servers in the “checking” state.\nIf the parameter is not specified,\nthe server will be initially considered healthy.\n</dd>\n\n<dt id=\"health_check_match\">\n<code>match</code>=<code><i>name</i></code>\n</dt>\n<dd>\nspecifies the <code>match</code> block configuring the tests that a\nsuccessful connection should pass in order for a health check to pass.\nBy default, for TCP, only the ability\nto establish a TCP connection with the server is checked.\nFor <a href=\"#health_check_udp\">UDP</a>, the absence of\nICMP “<code>Destination Unreachable</code>” message is expected\nin reply to the sent string “<code>nginx health check</code>”.\n<blockquote class=\"note\">\nPrior to version 1.11.7, by default, UDP health check\nrequired a <a href=\"#hc_match\">match</a> block with the\n<a href=\"#match_send\">send</a> and <a href=\"#match_expect\">expect</a>\nparameters.\n</blockquote>\n</dd>\n\n<dt id=\"health_check_port\">\n<code>port</code>=<code><i>number</i></code>\n</dt>\n<dd>\ndefines the port used when connecting to a server\nto perform a health check (1.9.7).\nBy default, equals the\n<a href=\"ngx_stream_upstream_module.html#server\">server</a> port.\n</dd>\n\n<dt id=\"health_check_udp\">\n<code>udp</code>\n</dt>\n<dd>\nspecifies that the <code>UDP</code> protocol should be used for\nhealth checks instead of the default <code>TCP</code> protocol (1.9.13).\n</dd>\n\n</dl><p> \n</p>"},{"directive":"health_check","defaultValue":"—","syntax":"health_check [parameters];","context":"location","description":"<p>\nEnables periodic health checks of the servers in a\n<a href=\"ngx_http_upstream_module.html#upstream\">group</a>\nreferenced in the surrounding location.\n</p><p>\nThe following optional parameters are supported:\n</p> <dl class=\"compact\">\n\n<dt id=\"health_check_interval\">\n<code>interval</code>=<code><i>time</i></code>\n</dt>\n<dd>\nsets the interval between two consecutive health checks,\nby default, 5 seconds.\n</dd>\n\n<dt id=\"health_check_jitter\">\n<code>jitter</code>=<code><i>time</i></code>\n</dt>\n<dd>\nsets the time within which\neach health check will be randomly delayed,\nby default, there is no delay.\n</dd>\n\n<dt id=\"health_check_fails\">\n<code>fails</code>=<code><i>number</i></code>\n</dt>\n<dd>\nsets the number of consecutive failed health checks of a particular server\nafter which this server will be considered unhealthy,\nby default, 1.\n</dd>\n\n<dt id=\"health_check_passes\">\n<code>passes</code>=<code><i>number</i></code>\n</dt>\n<dd>\nsets the number of consecutive passed health checks of a particular server\nafter which the server will be considered healthy,\nby default, 1.\n</dd>\n\n<dt id=\"health_check_uri\">\n<code>uri</code>=<code><i>uri</i></code>\n</dt>\n<dd>\ndefines the URI used in health check requests,\nby default, “<code>/</code>”.\n</dd>\n\n<dt id=\"health_check_mandatory\">\n<code>mandatory</code>\n</dt>\n<dd>\nsets the initial “checking” state for a server\nuntil the first health check is completed (1.11.7).\nClient requests are not passed to servers in the “checking” state.\nIf the parameter is not specified,\nthe server will be initially considered healthy.\n</dd>\n\n<dt id=\"health_check_match\">\n<code>match</code>=<code><i>name</i></code>\n</dt>\n<dd>\nspecifies the <code>match</code> block configuring the tests that a\nresponse should pass in order for a health check to pass.\nBy default, the response should have status code 2xx or 3xx.\n</dd>\n\n<dt id=\"health_check_port\">\n<code>port</code>=<code><i>number</i></code>\n</dt>\n<dd>\ndefines the port used when connecting to a server\nto perform a health check (1.9.7).\nBy default, equals the\n<a href=\"ngx_http_upstream_module.html#server\">server</a> port.\n</dd>\n\n</dl><p> \n</p>"},{"directive":"hash","defaultValue":"—","syntax":"hash key [consistent];","context":"upstream","description":"<p>\nSpecifies a load balancing method for a server group\nwhere client-server mapping is based on the hashed <code><i>key</i></code> value.\nThe <code><i>key</i></code> can contain text, variables,\nand their combinations (1.11.2).\nUsage example:\n</p> <blockquote class=\"example\"><pre>\nhash $remote_addr;\n</pre></blockquote><p> \nNote that adding or removing a server from the group\nmay result in remapping most of the keys to different servers.\nThe method is compatible with the\n<a href=\"http://search.cpan.org/perldoc?Cache%3A%3AMemcached\">Cache::Memcached</a>\nPerl library.\n</p><p>\nIf the <code>consistent</code> parameter is specified,\nthe <a href=\"http://www.last.fm/user/RJ/journal/2007/04/10/392555/\">ketama</a>\nconsistent hashing method will be used instead.\nThe method ensures that only a few keys\nwill be remapped to different servers\nwhen a server is added to or removed from the group.\nThis helps to achieve a higher cache hit ratio for caching servers.\nThe method is compatible with the\n<a href=\"http://search.cpan.org/perldoc?Cache%3A%3AMemcached%3A%3AFast\">Cache::Memcached::Fast</a>\nPerl library with the <code><i>ketama_points</i></code> parameter set to 160.\n</p>"},{"directive":"hash","defaultValue":"—","syntax":"hash key [consistent];","context":"upstream","description":"<p>This directive appeared in version 1.7.2.\n            </p></div><p>\nSpecifies a load balancing method for a server group\nwhere the client-server mapping is based on the hashed <code><i>key</i></code> value.\nThe <code><i>key</i></code> can contain text, variables, and their combinations.\nNote that adding or removing a server from the group\nmay result in remapping most of the keys to different servers.\nThe method is compatible with the\n<a href=\"http://search.cpan.org/perldoc?Cache%3A%3AMemcached\">Cache::Memcached</a>\nPerl library.\n</p><p>\nIf the <code>consistent</code> parameter is specified\nthe <a href=\"http://www.last.fm/user/RJ/journal/2007/04/10/392555/\">ketama</a>\nconsistent hashing method will be used instead.\nThe method ensures that only a few keys\nwill be remapped to different servers\nwhen a server is added to or removed from the group.\nThis helps to achieve a higher cache hit ratio for caching servers.\nThe method is compatible with the\n<a href=\"http://search.cpan.org/perldoc?Cache%3A%3AMemcached%3A%3AFast\">Cache::Memcached::Fast</a>\nPerl library with the <code><i>ketama_points</i></code> parameter set to 160.\n</p>"},{"directive":"gzip_vary","defaultValue":"gzip_vary off;","syntax":"gzip_vary on | off;","context":"http, server, location","description":"<p>\nEnables or disables inserting the “Vary: Accept-Encoding”\nresponse header field if the directives\n<a href=\"#gzip\">gzip</a>,\n<a href=\"ngx_http_gzip_static_module.html#gzip_static\">gzip_static</a>, or\n<a href=\"ngx_http_gunzip_module.html#gunzip\">gunzip</a>\nare active.\n</p>"},{"directive":"gzip_types","defaultValue":"gzip_types text/html;","syntax":"gzip_types mime-type ...;","context":"http, server, location","description":"<p>\nEnables gzipping of responses for the specified MIME types in addition\nto “<code>text/html</code>”.\nThe special value “<code>*</code>” matches any MIME type (0.8.29).\nResponses with the “<code>text/html</code>” type are always compressed.\n</p>"},{"directive":"gzip_static","defaultValue":"","syntax":"","context":"","description":null},{"directive":"gzip_proxied","defaultValue":"gzip_proxied off;","syntax":"gzip_proxied     off |    expired |    no-cache |    no-store |    private |    no_last_modified |    no_etag |    auth |    any    ...;","context":"http, server, location","description":"<p>\nEnables or disables gzipping of responses for proxied\nrequests depending on the request and response.\nThe fact that the request is proxied is determined by\nthe presence of the “Via” request header field.\nThe directive accepts multiple parameters:\n</p> <dl class=\"compact\">\n\n<dt><code>off</code></dt>\n<dd>\ndisables compression for all proxied requests,\nignoring other parameters;\n</dd>\n\n<dt><code>expired</code></dt>\n<dd>\nenables compression if a response header includes the\n“Expires” field with a value that disables caching;\n</dd>\n\n<dt><code>no-cache</code></dt>\n<dd>\nenables compression if a response header includes the\n“Cache-Control” field with the\n“<code>no-cache</code>” parameter;\n</dd>\n\n<dt><code>no-store</code></dt>\n<dd>\nenables compression if a response header includes the\n“Cache-Control” field with the\n“<code>no-store</code>” parameter;\n</dd>\n\n<dt><code>private</code></dt>\n<dd>\nenables compression if a response header includes the\n“Cache-Control” field with the\n“<code>private</code>” parameter;\n</dd>\n\n<dt><code>no_last_modified</code></dt>\n<dd>\nenables compression if a response header does not include the\n“Last-Modified” field;\n</dd>\n\n<dt><code>no_etag</code></dt>\n<dd>\nenables compression if a response header does not include the\n“ETag” field;\n</dd>\n\n<dt><code>auth</code></dt>\n<dd>\nenables compression if a request header includes the\n“Authorization” field;\n</dd>\n\n<dt><code>any</code></dt>\n<dd>\nenables compression for all proxied requests.\n</dd>\n\n</dl><p> \n</p>"},{"directive":"gzip_min_length","defaultValue":"gzip_min_length 20;","syntax":"gzip_min_length length;","context":"http, server, location","description":"<p>\nSets the minimum length of a response that will be gzipped.\nThe length is determined only from the “Content-Length”\nresponse header field.\n</p>"},{"directive":"gzip_http_version","defaultValue":"gzip_http_version 1.1;","syntax":"gzip_http_version 1.0 | 1.1;","context":"http, server, location","description":"<p>\nSets the minimum HTTP version of a request required to compress a response.\n</p>"},{"directive":"gzip_disable","defaultValue":"—","syntax":"gzip_disable regex ...;","context":"http, server, location","description":"<p>This directive appeared in version 0.6.23.\n            </p></div><p>\nDisables gzipping of responses for requests with\n“User-Agent” header fields matching\nany of the specified regular expressions.\n</p><p>\nThe special mask “<code>msie6</code>” (0.7.12) corresponds to\nthe regular expression “<code>MSIE [4-6]\\.</code>”, but works faster.\nStarting from version 0.8.11, “<code>MSIE 6.0; ... SV1</code>”\nis excluded from this mask.\n</p>"},{"directive":"gzip_comp_level","defaultValue":"gzip_comp_level 1;","syntax":"gzip_comp_level level;","context":"http, server, location","description":"<p>\nSets a gzip compression <code><i>level</i></code> of a response.\nAcceptable values are in the range from 1 to 9.\n</p>"},{"directive":"gzip_buffers","defaultValue":"gzip_buffers 32 4k|16 8k;","syntax":"gzip_buffers number size;","context":"http, server, location","description":"<p>\nSets the <code><i>number</i></code> and <code><i>size</i></code> of buffers\nused to compress a response.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\n</p> <blockquote class=\"note\">\nUntil version 0.7.28, four 4K or 8K buffers were used by default.\n</blockquote><p> \n</p>"},{"directive":"gzip","defaultValue":"gzip off;","syntax":"gzip on | off;","context":"http, server, location, if in location","description":"<p>\nEnables or disables gzipping of responses.\n</p>"},{"directive":"gunzip_buffers","defaultValue":"","syntax":"","context":"","description":null},{"directive":"gunzip","defaultValue":"gunzip off;","syntax":"gunzip on | off;","context":"http, server, location","description":"<p>\nEnables or disables decompression of gzipped responses\nfor clients that lack gzip support.\nIf enabled, the following directives are also taken into account\nwhen determining if clients support gzip:\n<a href=\"ngx_http_gzip_module.html#gzip_http_version\">gzip_http_version</a>,\n<a href=\"ngx_http_gzip_module.html#gzip_proxied\">gzip_proxied</a>, and\n<a href=\"ngx_http_gzip_module.html#gzip_disable\">gzip_disable</a>.\nSee also the <a href=\"ngx_http_gzip_module.html#gzip_vary\">gzip_vary</a> directive.\n</p>"},{"directive":"google_perftools_profiles","defaultValue":"","syntax":"","context":"","description":null},{"directive":"geoip_proxy_recursive","defaultValue":"","syntax":"","context":"","description":null},{"directive":"geoip_proxy","defaultValue":"—","syntax":"geoip_proxy address | CIDR;","context":"http","description":"<p>\n                    This directive appeared in versions 1.3.0 and 1.2.1.\n                    \n                        </p>\n                    </div><p>\nDefines trusted addresses.\nWhen a request comes from a trusted address,\nan address from the “X-Forwarded-For” request\nheader field will be used instead.\n</p>"},{"directive":"geoip_org","defaultValue":"","syntax":"","context":"","description":null},{"directive":"geoip_org","defaultValue":"—","syntax":"geoip_org file;","context":"http","description":"<p>This directive appeared in version 1.0.3.\n            </p></div><p>\nSpecifies a database used to determine the organization\ndepending on the client IP address.\nThe following variable is available when using this database:\n</p> <dl class=\"compact\">\n\n<dt id=\"var_geoip_org\"><code>$geoip_org</code></dt>\n<dd>\norganization name, for example, “The University of Melbourne”.\n</dd>\n\n</dl><p> \n</p>"},{"directive":"geoip_country","defaultValue":"—","syntax":"geoip_country file;","context":"stream","description":"<p>\nSpecifies a database used to determine the country\ndepending on the client IP address.\nThe following variables are available when using this database:\n</p> <dl class=\"compact\">\n\n<dt id=\"var_geoip_country_code\"><code>$geoip_country_code</code></dt>\n<dd>\ntwo-letter country code, for example,\n“<code>RU</code>”, “<code>US</code>”.\n</dd>\n\n<dt id=\"var_geoip_country_code3\"><code>$geoip_country_code3</code>\n</dt>\n<dd>\nthree-letter country code, for example,\n“<code>RUS</code>”, “<code>USA</code>”.\n</dd>\n\n<dt id=\"var_geoip_country_name\"><code>$geoip_country_name</code></dt>\n<dd>\ncountry name, for example,\n“<code>Russian Federation</code>”, “<code>United States</code>”.\n</dd>\n\n</dl><p> \n</p>"},{"directive":"geoip_country","defaultValue":"—","syntax":"geoip_country file;","context":"http","description":"<p>\nSpecifies a database used to determine the country\ndepending on the client IP address.\nThe following variables are available when using this database:\n</p> <dl class=\"compact\">\n\n<dt id=\"var_geoip_country_code\"><code>$geoip_country_code</code></dt>\n<dd>\ntwo-letter country code, for example,\n“<code>RU</code>”, “<code>US</code>”.\n</dd>\n\n<dt id=\"var_geoip_country_code3\"><code>$geoip_country_code3</code>\n</dt>\n<dd>\nthree-letter country code, for example,\n“<code>RUS</code>”, “<code>USA</code>”.\n</dd>\n\n<dt id=\"var_geoip_country_name\"><code>$geoip_country_name</code></dt>\n<dd>\ncountry name, for example,\n“<code>Russian Federation</code>”, “<code>United States</code>”.\n</dd>\n\n</dl><p> \n</p>"},{"directive":"geoip_city","defaultValue":"—","syntax":"geoip_city file;","context":"stream","description":"<p>\nSpecifies a database used to determine the country, region, and city\ndepending on the client IP address.\nThe following variables are available when using this database:\n</p> <dl class=\"compact\">\n\n<dt id=\"var_geoip_area_code\"><code>$geoip_area_code</code></dt>\n<dd>telephone area code (US only).\n<blockquote class=\"note\">\nThis variable may contain outdated information since\nthe corresponding database field is deprecated.\n</blockquote>\n</dd>\n\n<dt id=\"var_geoip_city_continent_code\">\n<code>$geoip_city_continent_code</code></dt>\n<dd>two-letter continent code, for example,\n“<code>EU</code>”, “<code>NA</code>”.\n</dd>\n\n<dt id=\"var_geoip_city_country_code\"><code>$geoip_city_country_code</code>\n</dt>\n<dd>\ntwo-letter country code, for example,\n“<code>RU</code>”, “<code>US</code>”.\n</dd>\n\n<dt id=\"var_geoip_city_country_code3\"><code>$geoip_city_country_code3</code>\n</dt>\n<dd>\nthree-letter country code, for example,\n“<code>RUS</code>”, “<code>USA</code>”.\n</dd>\n\n<dt id=\"var_geoip_city_country_name\"><code>$geoip_city_country_name</code>\n</dt>\n<dd>\ncountry name, for example,\n“<code>Russian Federation</code>”, “<code>United States</code>”.\n</dd>\n\n<dt id=\"var_geoip_dma_code\"><code>$geoip_dma_code</code></dt>\n<dd>\nDMA region code in US (also known as “metro code”), according to the\n<a href=\"https://developers.google.com/adwords/api/docs/appendix/cities-DMAregions\">geotargeting</a>\nin Google AdWords API.\n</dd>\n\n<dt id=\"var_geoip_latitude\"><code>$geoip_latitude</code></dt>\n<dd>latitude.</dd>\n\n<dt id=\"var_geoip_longitude\"><code>$geoip_longitude</code></dt>\n<dd>longitude.</dd>\n\n<dt id=\"var_geoip_region\"><code>$geoip_region</code></dt>\n<dd>\ntwo-symbol country region code (region, territory, state, province, federal land\nand the like), for example,\n“<code>48</code>”, “<code>DC</code>”.\n</dd>\n\n<dt id=\"var_geoip_region_name\"><code>$geoip_region_name</code></dt>\n<dd>\ncountry region name (region, territory, state, province, federal land\nand the like), for example,\n“<code>Moscow City</code>”, “<code>District of Columbia</code>”.\n</dd>\n\n<dt id=\"var_geoip_city\"><code>$geoip_city</code></dt>\n<dd>\ncity name, for example,\n“<code>Moscow</code>”, “<code>Washington</code>”.\n</dd>\n\n<dt id=\"var_geoip_postal_code\"><code>$geoip_postal_code</code></dt>\n<dd>\npostal code.\n</dd>\n\n</dl><p> \n</p>"},{"directive":"geoip_city","defaultValue":"—","syntax":"geoip_city file;","context":"http","description":"<p>\nSpecifies a database used to determine the country, region, and city\ndepending on the client IP address.\nThe following variables are available when using this database:\n</p> <dl class=\"compact\">\n\n<dt id=\"var_geoip_area_code\"><code>$geoip_area_code</code></dt>\n<dd>telephone area code (US only).\n<blockquote class=\"note\">\nThis variable may contain outdated information since\nthe corresponding database field is deprecated.\n</blockquote>\n</dd>\n\n<dt id=\"var_geoip_city_continent_code\">\n<code>$geoip_city_continent_code</code></dt>\n<dd>two-letter continent code, for example,\n“<code>EU</code>”, “<code>NA</code>”.\n</dd>\n\n<dt id=\"var_geoip_city_country_code\"><code>$geoip_city_country_code</code>\n</dt>\n<dd>\ntwo-letter country code, for example,\n“<code>RU</code>”, “<code>US</code>”.\n</dd>\n\n<dt id=\"var_geoip_city_country_code3\"><code>$geoip_city_country_code3</code>\n</dt>\n<dd>\nthree-letter country code, for example,\n“<code>RUS</code>”, “<code>USA</code>”.\n</dd>\n\n<dt id=\"var_geoip_city_country_name\"><code>$geoip_city_country_name</code>\n</dt>\n<dd>\ncountry name, for example,\n“<code>Russian Federation</code>”, “<code>United States</code>”.\n</dd>\n\n<dt id=\"var_geoip_dma_code\"><code>$geoip_dma_code</code></dt>\n<dd>\nDMA region code in US (also known as “metro code”), according to the\n<a href=\"https://developers.google.com/adwords/api/docs/appendix/cities-DMAregions\">geotargeting</a>\nin Google AdWords API.\n</dd>\n\n<dt id=\"var_geoip_latitude\"><code>$geoip_latitude</code></dt>\n<dd>latitude.</dd>\n\n<dt id=\"var_geoip_longitude\"><code>$geoip_longitude</code></dt>\n<dd>longitude.</dd>\n\n<dt id=\"var_geoip_region\"><code>$geoip_region</code></dt>\n<dd>\ntwo-symbol country region code (region, territory, state, province, federal land\nand the like), for example,\n“<code>48</code>”, “<code>DC</code>”.\n</dd>\n\n<dt id=\"var_geoip_region_name\"><code>$geoip_region_name</code></dt>\n<dd>\ncountry region name (region, territory, state, province, federal land\nand the like), for example,\n“<code>Moscow City</code>”, “<code>District of Columbia</code>”.\n</dd>\n\n<dt id=\"var_geoip_city\"><code>$geoip_city</code></dt>\n<dd>\ncity name, for example,\n“<code>Moscow</code>”, “<code>Washington</code>”.\n</dd>\n\n<dt id=\"var_geoip_postal_code\"><code>$geoip_postal_code</code></dt>\n<dd>\npostal code.\n</dd>\n\n</dl><p> \n</p>"},{"directive":"geo","defaultValue":"","syntax":"","context":"","description":null},{"directive":"geo","defaultValue":"","syntax":"","context":"","description":null},{"directive":"flv","defaultValue":"","syntax":"","context":"","description":null},{"directive":"fastcgi_temp_path","defaultValue":"fastcgi_temp_path fastcgi_temp;","syntax":"fastcgi_temp_path     path    [level1    [level2    [level3]]];","context":"http, server, location","description":"<p>\nDefines a directory for storing temporary files\nwith data received from FastCGI servers.\nUp to three-level subdirectory hierarchy can be used underneath the specified\ndirectory.\nFor example, in the following configuration\n</p> <blockquote class=\"example\"><pre>\nfastcgi_temp_path /spool/nginx/fastcgi_temp 1 2;\n</pre></blockquote><p> \na temporary file might look like this:\n</p> <blockquote class=\"example\"><pre>\n/spool/nginx/fastcgi_temp/<strong>7</strong>/<strong>45</strong>/00000123<strong>457</strong>\n</pre></blockquote><p> \n</p><p>\nSee also the <code>use_temp_path</code> parameter of the\n<a href=\"#fastcgi_cache_path\">fastcgi_cache_path</a> directive.\n</p>"},{"directive":"fastcgi_temp_file_write_size","defaultValue":"fastcgi_temp_file_write_size 8k|16k;","syntax":"fastcgi_temp_file_write_size size;","context":"http, server, location","description":"<p>\nLimits the <code><i>size</i></code> of data written to a temporary file\nat a time, when buffering of responses from the FastCGI server\nto temporary files is enabled.\nBy default, <code><i>size</i></code> is limited by two buffers set by the\n<a href=\"#fastcgi_buffer_size\">fastcgi_buffer_size</a> and <a href=\"#fastcgi_buffers\">fastcgi_buffers</a> directives.\nThe maximum size of a temporary file is set by the\n<a href=\"#fastcgi_max_temp_file_size\">fastcgi_max_temp_file_size</a> directive.\n</p>"},{"directive":"fastcgi_store_access","defaultValue":"fastcgi_store_access user:rw;","syntax":"fastcgi_store_access users:permissions ...;","context":"http, server, location","description":"<p>\nSets access permissions for newly created files and directories, e.g.:\n</p> <blockquote class=\"example\"><pre>\nfastcgi_store_access user:rw group:rw all:r;\n</pre></blockquote><p> \n</p><p>\nIf any <code>group</code> or <code>all</code> access permissions\nare specified then <code>user</code> permissions may be omitted:\n</p> <blockquote class=\"example\"><pre>\nfastcgi_store_access group:rw all:r;\n</pre></blockquote><p> \n</p>"},{"directive":"fastcgi_store","defaultValue":"fastcgi_store off;","syntax":"fastcgi_store     on |    off |    string;","context":"http, server, location","description":"<p>\nEnables saving of files to a disk.\nThe <code>on</code> parameter saves files with paths\ncorresponding to the directives\n<a href=\"ngx_http_core_module.html#alias\">alias</a> or\n<a href=\"ngx_http_core_module.html#root\">root</a>.\nThe <code>off</code> parameter disables saving of files.\nIn addition, the file name can be set explicitly using the\n<code><i>string</i></code> with variables:\n</p> <blockquote class=\"example\"><pre>\nfastcgi_store /data/www$original_uri;\n</pre></blockquote><p> \n</p><p>\nThe modification time of files is set according to the received\n“Last-Modified” response header field.\nThe response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the persistent store\ncan be put on different file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both saved files and a\ndirectory holding temporary files, set by the <a href=\"#fastcgi_temp_path\">fastcgi_temp_path</a>\ndirective, are put on the same file system.\n</p><p>\nThis directive can be used to create local copies of static unchangeable\nfiles, e.g.:\n</p> <blockquote class=\"example\"><pre>\nlocation /images/ {\n    root                 /data/www;\n    error_page           404 = /fetch$uri;\n}\n\nlocation /fetch/ {\n    internal;\n\n    fastcgi_pass         backend:9000;\n    ...\n\n    fastcgi_store        on;\n    fastcgi_store_access user:rw group:rw all:r;\n    fastcgi_temp_path    /data/temp;\n\n    alias                /data/www/;\n}\n</pre></blockquote><p> \n</p>"},{"directive":"fastcgi_split_path_info","defaultValue":"—","syntax":"fastcgi_split_path_info regex;","context":"location","description":"<p>\nDefines a regular expression that captures a value for the\n<code>$fastcgi_path_info</code> variable.\nThe regular expression should have two captures: the first becomes\na value of the <code>$fastcgi_script_name</code> variable, the second\nbecomes a value of the <code>$fastcgi_path_info</code> variable.\nFor example, with these settings\n</p> <blockquote class=\"example\"><pre>\nlocation ~ ^(.+\\.php)(.*)$ {\n    fastcgi_split_path_info       ^(.+\\.php)(.*)$;\n    fastcgi_param SCRIPT_FILENAME /path/to/php$fastcgi_script_name;\n    fastcgi_param PATH_INFO       $fastcgi_path_info;\n</pre></blockquote><p> \nand the “<code>/show.php/article/0001</code>” request,\nthe <code>SCRIPT_FILENAME</code> parameter will be equal to\n“<code>/path/to/php/show.php</code>”, and the\n<code>PATH_INFO</code> parameter will be equal to\n“<code>/article/0001</code>”.\n</p>"},{"directive":"fastcgi_send_timeout","defaultValue":"fastcgi_send_timeout 60s;","syntax":"fastcgi_send_timeout time;","context":"http, server, location","description":"<p>\nSets a timeout for transmitting a request to the FastCGI server.\nThe timeout is set only between two successive write operations,\nnot for the transmission of the whole request.\nIf the FastCGI server does not receive anything within this time,\nthe connection is closed.\n</p>"},{"directive":"fastcgi_send_lowat","defaultValue":"fastcgi_send_lowat 0;","syntax":"fastcgi_send_lowat size;","context":"http, server, location","description":"<p>\nIf the directive is set to a non-zero value, nginx will try to\nminimize the number\nof send operations on outgoing connections to a FastCGI server by using either\n<code>NOTE_LOWAT</code> flag of the\n<a href=\"../events.html#kqueue\">kqueue</a> method,\nor the <code>SO_SNDLOWAT</code> socket option,\nwith the specified <code><i>size</i></code>.\n</p><p>\nThis directive is ignored on Linux, Solaris, and Windows.\n</p>"},{"directive":"fastcgi_request_buffering","defaultValue":"fastcgi_request_buffering on;","syntax":"fastcgi_request_buffering on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.11.\n            </p></div><p>\nEnables or disables buffering of a client request body.\n</p><p>\nWhen buffering is enabled, the entire request body is\n<a href=\"ngx_http_core_module.html#client_body_buffer_size\">read</a>\nfrom the client before sending the request to a FastCGI server.\n</p><p>\nWhen buffering is disabled, the request body is sent to the FastCGI server\nimmediately as it is received.\nIn this case, the request cannot be passed to the\n<a href=\"#fastcgi_next_upstream\">next server</a>\nif nginx already started sending the request body.\n</p>"},{"directive":"fastcgi_read_timeout","defaultValue":"fastcgi_read_timeout 60s;","syntax":"fastcgi_read_timeout time;","context":"http, server, location","description":"<p>\nDefines a timeout for reading a response from the FastCGI server.\nThe timeout is set only between two successive read operations,\nnot for the transmission of the whole response.\nIf the FastCGI server does not transmit anything within this time,\nthe connection is closed.\n</p>"},{"directive":"fastcgi_pass_request_headers","defaultValue":"fastcgi_pass_request_headers on;","syntax":"fastcgi_pass_request_headers on | off;","context":"http, server, location","description":"<p>\nIndicates whether the header fields of the original request are passed\nto the FastCGI server.\nSee also the <a href=\"#fastcgi_pass_request_body\">fastcgi_pass_request_body</a> directive.\n</p>"},{"directive":"fastcgi_pass_request_body","defaultValue":"fastcgi_pass_request_body on;","syntax":"fastcgi_pass_request_body on | off;","context":"http, server, location","description":"<p>\nIndicates whether the original request body is passed\nto the FastCGI server.\nSee also the <a href=\"#fastcgi_pass_request_headers\">fastcgi_pass_request_headers</a> directive.\n</p>"},{"directive":"fastcgi_pass_header","defaultValue":"—","syntax":"fastcgi_pass_header field;","context":"http, server, location","description":"<p>\nPermits passing <a href=\"#fastcgi_hide_header\">otherwise disabled</a> header\nfields from a FastCGI server to a client.\n</p>"},{"directive":"fastcgi_pass","defaultValue":"—","syntax":"fastcgi_pass address;","context":"location, if in location","description":"<p>\nSets the address of a FastCGI server.\nThe address can be specified as a domain name or IP address,\nand a port:\n</p> <blockquote class=\"example\"><pre>\nfastcgi_pass localhost:9000;\n</pre></blockquote><p> \nor as a UNIX-domain socket path:\n</p> <blockquote class=\"example\"><pre>\nfastcgi_pass unix:/tmp/fastcgi.socket;\n</pre></blockquote><p> \n</p><p>\nIf a domain name resolves to several addresses, all of them will be\nused in a round-robin fashion.\nIn addition, an address can be specified as a\n<a href=\"ngx_http_upstream_module.html\">server group</a>.\n</p><p>\nParameter value can contain variables.\nIn this case, if an address is specified as a domain name,\nthe name is searched among the described\n<a href=\"ngx_http_upstream_module.html\">server groups</a>,\nand, if not found, is determined using a\n<a href=\"ngx_http_core_module.html#resolver\">resolver</a>.\n</p>"},{"directive":"fastcgi_param","defaultValue":"—","syntax":"fastcgi_param     parameter value    [if_not_empty];","context":"http, server, location","description":"<p>\nSets a <code><i>parameter</i></code> that should be passed to the FastCGI server.\nThe <code><i>value</i></code> can contain text, variables, and their combination.\nThese directives are inherited from the previous level if and\nonly if there are no\n<code>fastcgi_param</code>\ndirectives defined on the current level.\n</p><p>\nThe following example shows the minimum required settings for PHP:\n</p> <blockquote class=\"example\"><pre>\nfastcgi_param SCRIPT_FILENAME /home/www/scripts/php$fastcgi_script_name;\nfastcgi_param QUERY_STRING    $query_string;\n</pre></blockquote><p> \n</p><p>\nThe <code>SCRIPT_FILENAME</code> parameter is used in PHP for\ndetermining the script name, and the <code>QUERY_STRING</code>\nparameter is used to pass request parameters.\n</p><p>\nFor scripts that process <code>POST</code> requests, the\nfollowing three parameters are also required:\n</p> <blockquote class=\"example\"><pre>\nfastcgi_param REQUEST_METHOD  $request_method;\nfastcgi_param CONTENT_TYPE    $content_type;\nfastcgi_param CONTENT_LENGTH  $content_length;\n</pre></blockquote><p> \n</p><p>\nIf PHP was built with the <code>--enable-force-cgi-redirect</code>\nconfiguration parameter, the <code>REDIRECT_STATUS</code> parameter\nshould also be passed with the value “200”:\n</p> <blockquote class=\"example\"><pre>\nfastcgi_param REDIRECT_STATUS 200;\n</pre></blockquote><p> \n</p><p>\nIf the directive is specified with <code>if_not_empty</code> (1.1.11) then\nsuch a parameter will not be passed to the server until its value is not empty:\n</p> <blockquote class=\"example\"><pre>\nfastcgi_param HTTPS           $https if_not_empty;\n</pre></blockquote><p> \n</p>"},{"directive":"fastcgi_no_cache","defaultValue":"—","syntax":"fastcgi_no_cache string ...;","context":"http, server, location","description":"<p>\nDefines conditions under which the response will not be saved to a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to “0” then the response will not be saved:\n</p> <blockquote class=\"example\"><pre>\nfastcgi_no_cache $cookie_nocache $arg_nocache$arg_comment;\nfastcgi_no_cache $http_pragma    $http_authorization;\n</pre></blockquote><p> \nCan be used along with the <a href=\"#fastcgi_cache_bypass\">fastcgi_cache_bypass</a> directive.\n</p>"},{"directive":"fastcgi_next_upstream_tries","defaultValue":"fastcgi_next_upstream_tries 0;","syntax":"fastcgi_next_upstream_tries number;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.5.\n            </p></div><p>\nLimits the number of possible tries for passing a request to the\n<a href=\"#fastcgi_next_upstream\">next server</a>.\nThe <code>0</code> value turns off this limitation.\n</p>"},{"directive":"fastcgi_next_upstream_timeout","defaultValue":"fastcgi_next_upstream_timeout 0;","syntax":"fastcgi_next_upstream_timeout time;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.5.\n            </p></div><p>\nLimits the time during which a request can be passed to the\n<a href=\"#fastcgi_next_upstream\">next server</a>.\nThe <code>0</code> value turns off this limitation.\n</p>"},{"directive":"fastcgi_next_upstream","defaultValue":"fastcgi_next_upstream error timeout;","syntax":"fastcgi_next_upstream     error |    timeout |    invalid_header |    http_500 |    http_503 |    http_403 |    http_404 |    http_429 |    non_idempotent |    off    ...;","context":"http, server, location","description":"<p>\nSpecifies in which cases a request should be passed to the next server:\n</p> <dl class=\"compact\">\n\n<dt><code>error</code></dt>\n<dd>an error occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;</dd>\n\n<dt><code>timeout</code></dt>\n<dd>a timeout has occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;</dd>\n\n<dt><code>invalid_header</code></dt>\n<dd>a server returned an empty or invalid response;</dd>\n\n<dt><code>http_500</code></dt>\n<dd>a server returned a response with the code 500;</dd>\n\n<dt><code>http_503</code></dt>\n<dd>a server returned a response with the code 503;</dd>\n\n<dt><code>http_403</code></dt>\n<dd>a server returned a response with the code 403;</dd>\n\n<dt><code>http_404</code></dt>\n<dd>a server returned a response with the code 404;</dd>\n\n<dt><code>http_429</code></dt>\n<dd>a server returned a response with the code 429 (1.11.13);</dd>\n\n<dt id=\"non_idempotent\"><code>non_idempotent</code></dt>\n<dd>normally, requests with a\n<a href=\"https://tools.ietf.org/html/rfc7231#section-4.2.2\">non-idempotent</a>\nmethod\n(<code>POST</code>, <code>LOCK</code>, <code>PATCH</code>)\nare not passed to the next server\nif a request has been sent to an upstream server (1.9.13);\nenabling this option explicitly allows retrying such requests;\n</dd>\n\n<dt><code>off</code></dt>\n<dd>disables passing a request to the next server.</dd>\n\n</dl><p> \n</p><p>\nOne should bear in mind that passing a request to the next server is\nonly possible if nothing has been sent to a client yet.\nThat is, if an error or timeout occurs in the middle of the\ntransferring of a response, fixing this is impossible.\n</p><p>\nThe directive also defines what is considered an\n<a href=\"ngx_http_upstream_module.html#max_fails\">unsuccessful\nattempt</a> of communication with a server.\nThe cases of <code>error</code>, <code>timeout</code> and\n<code>invalid_header</code> are always considered unsuccessful attempts,\neven if they are not specified in the directive.\nThe cases of <code>http_500</code>, <code>http_503</code>,\nand <code>http_429</code> are\nconsidered unsuccessful attempts only if they are specified in the directive.\nThe cases of <code>http_403</code> and <code>http_404</code>\nare never considered unsuccessful attempts.\n</p><p>\nPassing a request to the next server can be limited by\n<a href=\"#fastcgi_next_upstream_tries\">the number of tries</a>\nand by <a href=\"#fastcgi_next_upstream_timeout\">time</a>.\n</p>"},{"directive":"fastcgi_max_temp_file_size","defaultValue":"fastcgi_max_temp_file_size 1024m;","syntax":"fastcgi_max_temp_file_size size;","context":"http, server, location","description":"<p>\nWhen <a href=\"#fastcgi_buffering\">buffering</a> of responses from the FastCGI\nserver is enabled, and the whole response does not fit into the buffers\nset by the <a href=\"#fastcgi_buffer_size\">fastcgi_buffer_size</a> and <a href=\"#fastcgi_buffers\">fastcgi_buffers</a>\ndirectives, a part of the response can be saved to a temporary file.\nThis directive sets the maximum <code><i>size</i></code> of the temporary file.\nThe size of data written to the temporary file at a time is set\nby the <a href=\"#fastcgi_temp_file_write_size\">fastcgi_temp_file_write_size</a> directive.\n</p><p>\nThe zero value disables buffering of responses to temporary files.\n</p><p>\n</p> <blockquote class=\"note\">\nThis restriction does not apply to responses\nthat will be <a href=\"#fastcgi_cache\">cached</a>\nor <a href=\"#fastcgi_store\">stored</a> on disk.\n</blockquote><p> \n</p>"},{"directive":"fastcgi_limit_rate","defaultValue":"fastcgi_limit_rate 0;","syntax":"fastcgi_limit_rate rate;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.7.\n            </p></div><p>\nLimits the speed of reading the response from the FastCGI server.\nThe <code><i>rate</i></code> is specified in bytes per second.\nThe zero value disables rate limiting.\nThe limit is set per a request, and so if nginx simultaneously opens\ntwo connections to the FastCFI server,\nthe overall rate will be twice as much as the specified limit.\nThe limitation works only if\n<a href=\"#fastcgi_buffering\">buffering</a> of responses from the FastCGI\nserver is enabled.\n</p>"},{"directive":"fastcgi_keep_conn","defaultValue":"fastcgi_keep_conn off;","syntax":"fastcgi_keep_conn on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.1.4.\n            </p></div><p>\nBy default, a FastCGI server will close a connection right after\nsending the response.\nHowever, when this directive is set to the value <code>on</code>,\nnginx will instruct a FastCGI server to keep connections open.\nThis is necessary, in particular, for\n<a href=\"ngx_http_upstream_module.html#keepalive\">keepalive</a>\nconnections to FastCGI servers to function.\n</p>"},{"directive":"fastcgi_intercept_errors","defaultValue":"fastcgi_intercept_errors off;","syntax":"fastcgi_intercept_errors on | off;","context":"http, server, location","description":"<p>\nDetermines whether FastCGI server responses with codes greater than or equal\nto 300 should be passed to a client\nor be intercepted and redirected to nginx for processing\nwith the <a href=\"ngx_http_core_module.html#error_page\">error_page</a> directive.\n</p>"},{"directive":"fastcgi_index","defaultValue":"—","syntax":"fastcgi_index name;","context":"http, server, location","description":"<p>\nSets a file name that will be appended after a URI that ends with\na slash, in the value of the <code>$fastcgi_script_name</code> variable.\nFor example, with these settings\n</p> <blockquote class=\"example\"><pre>\nfastcgi_index index.php;\nfastcgi_param SCRIPT_FILENAME /home/www/scripts/php$fastcgi_script_name;\n</pre></blockquote><p> \nand the “<code>/page.php</code>” request,\nthe <code>SCRIPT_FILENAME</code> parameter will be equal to\n“<code>/home/www/scripts/php/page.php</code>”,\nand with the “<code>/</code>” request it will be equal to\n“<code>/home/www/scripts/php/index.php</code>”.\n</p>"},{"directive":"fastcgi_ignore_headers","defaultValue":"—","syntax":"fastcgi_ignore_headers field ...;","context":"http, server, location","description":"<p>\nDisables processing of certain response header fields from the FastCGI server.\nThe following fields can be ignored: “X-Accel-Redirect”,\n“X-Accel-Expires”, “X-Accel-Limit-Rate” (1.1.6),\n“X-Accel-Buffering” (1.1.6),\n“X-Accel-Charset” (1.1.6), “Expires”,\n“Cache-Control”, “Set-Cookie” (0.8.44),\nand “Vary” (1.7.7).\n</p><p>\nIf not disabled, processing of these header fields has the following\neffect:\n</p> <ul>\n\n<li>\n“X-Accel-Expires”, “Expires”,\n“Cache-Control”, “Set-Cookie”,\nand “Vary”\nset the parameters of response <a href=\"#fastcgi_cache_valid\">caching</a>;\n</li>\n\n<li>\n“X-Accel-Redirect” performs an\n<a href=\"ngx_http_core_module.html#internal\">internal\nredirect</a> to the specified URI;\n</li>\n\n<li>\n“X-Accel-Limit-Rate” sets the\n<a href=\"ngx_http_core_module.html#limit_rate\">rate\nlimit</a> for transmission of a response to a client;\n</li>\n\n<li>\n“X-Accel-Buffering” enables or disables\n<a href=\"#fastcgi_buffering\">buffering</a> of a response;\n</li>\n\n<li>\n“X-Accel-Charset” sets the desired\n<a href=\"ngx_http_charset_module.html#charset\">charset</a>\nof a response.\n</li>\n\n</ul><p> \n</p>"},{"directive":"fastcgi_ignore_client_abort","defaultValue":"fastcgi_ignore_client_abort off;","syntax":"fastcgi_ignore_client_abort on | off;","context":"http, server, location","description":"<p>\nDetermines whether the connection with a FastCGI server should be\nclosed when a client closes the connection without waiting\nfor a response.\n</p>"},{"directive":"fastcgi_hide_header","defaultValue":"—","syntax":"fastcgi_hide_header field;","context":"http, server, location","description":"<p>\nBy default,\nnginx does not pass the header fields “Status” and\n“X-Accel-...” from the response of a FastCGI\nserver to a client.\nThe <code>fastcgi_hide_header</code> directive sets additional fields\nthat will not be passed.\nIf, on the contrary, the passing of fields needs to be permitted,\nthe <a href=\"#fastcgi_pass_header\">fastcgi_pass_header</a> directive can be used.\n</p>"},{"directive":"fastcgi_force_ranges","defaultValue":"fastcgi_force_ranges off;","syntax":"fastcgi_force_ranges on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.7.\n            </p></div><p>\nEnables byte-range support\nfor both cached and uncached responses from the FastCGI server\nregardless of the “Accept-Ranges” field in these responses.\n</p>"},{"directive":"fastcgi_connect_timeout","defaultValue":"fastcgi_connect_timeout 60s;","syntax":"fastcgi_connect_timeout time;","context":"http, server, location","description":"<p>\nDefines a timeout for establishing a connection with a FastCGI server.\nIt should be noted that this timeout cannot usually exceed 75 seconds.\n</p>"},{"directive":"fastcgi_catch_stderr","defaultValue":"—","syntax":"fastcgi_catch_stderr string;","context":"http, server, location","description":"<p>\nSets a string to search for in the error stream of a response\nreceived from a FastCGI server.\nIf the <code><i>string</i></code> is found then it is considered that the FastCGI\nserver has returned an <a href=\"#fastcgi_next_upstream\">invalid response</a>.\nThis allows handling application errors in nginx, for example:\n</p> <blockquote class=\"example\"><pre>\nlocation /php {\n    fastcgi_pass backend:9000;\n    ...\n    fastcgi_catch_stderr \"PHP Fatal error\";\n    fastcgi_next_upstream error timeout invalid_header;\n}\n</pre></blockquote><p> \n</p>"},{"directive":"fastcgi_cache_valid","defaultValue":"—","syntax":"fastcgi_cache_valid [code ...] time;","context":"http, server, location","description":"<p>\nSets caching time for different response codes.\nFor example, the following directives\n</p> <blockquote class=\"example\"><pre>\nfastcgi_cache_valid 200 302 10m;\nfastcgi_cache_valid 404      1m;\n</pre></blockquote><p> \nset 10 minutes of caching for responses with codes 200 and 302\nand 1 minute for responses with code 404.\n</p><p>\nIf only caching <code><i>time</i></code> is specified\n</p> <blockquote class=\"example\"><pre>\nfastcgi_cache_valid 5m;\n</pre></blockquote><p> \nthen only 200, 301, and 302 responses are cached.\n</p><p>\nIn addition, the <code>any</code> parameter can be specified\nto cache any responses:\n</p> <blockquote class=\"example\"><pre>\nfastcgi_cache_valid 200 302 10m;\nfastcgi_cache_valid 301      1h;\nfastcgi_cache_valid any      1m;\n</pre></blockquote><p> \n</p><p>\nParameters of caching can also be set directly\nin the response header.\nThis has higher priority than setting of caching time using the directive.\n</p> <ul>\n\n<li>\nThe “X-Accel-Expires” header field sets caching time of a\nresponse in seconds.\nThe zero value disables caching for a response.\nIf the value starts with the <code>@</code> prefix, it sets an absolute\ntime in seconds since Epoch, up to which the response may be cached.\n</li>\n\n<li>\nIf the header does not include the “X-Accel-Expires” field,\nparameters of caching may be set in the header fields\n“Expires” or “Cache-Control”.\n</li>\n\n<li>\nIf the header includes the “Set-Cookie” field, such a\nresponse will not be cached.\n</li>\n\n<li>\nIf the header includes the “Vary” field\nwith the special value “<code>*</code>”, such a\nresponse will not be cached (1.7.7).\nIf the header includes the “Vary” field\nwith another value, such a response will be cached\ntaking into account the corresponding request header fields (1.7.7).\n</li>\n\n</ul><p> \nProcessing of one or more of these response header fields can be disabled\nusing the <a href=\"#fastcgi_ignore_headers\">fastcgi_ignore_headers</a> directive.\n</p>"},{"directive":"fastcgi_cache_use_stale","defaultValue":"fastcgi_cache_use_stale off;","syntax":"fastcgi_cache_use_stale     error |    timeout |    invalid_header |    updating |    http_500 |    http_503 |    http_403 |    http_404 |    http_429 |    off    ...;","context":"http, server, location","description":"<p>\nDetermines in which cases a stale cached response can be used\nwhen an error occurs during communication with the FastCGI server.\nThe directive’s parameters match the parameters of the\n<a href=\"#fastcgi_next_upstream\">fastcgi_next_upstream</a> directive.\n</p><p>\nThe <code>error</code> parameter also permits\nusing a stale cached response if a FastCGI server to process a request\ncannot be selected.\n</p>"},{"directive":"fastcgi_cache_revalidate","defaultValue":"fastcgi_cache_revalidate off;","syntax":"fastcgi_cache_revalidate on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.5.7.\n            </p></div><p>\nEnables revalidation of expired cache items using conditional requests with\nthe “If-Modified-Since” and “If-None-Match”\nheader fields.\n</p>"},{"directive":"fastcgi_cache_purge","defaultValue":"—","syntax":"fastcgi_cache_purge string ...;","context":"http, server, location","description":"<p>This directive appeared in version 1.5.7.\n            </p></div><p>\nDefines conditions under which the request will be considered a cache\npurge request.\nIf at least one value of the string parameters is not empty and is not equal\nto “0” then the cache entry with a corresponding\n<a href=\"#fastcgi_cache_key\">cache key</a> is removed.\nThe result of successful operation is indicated by returning\nthe 204 (No Content) response.\n</p><p>\nIf the <a href=\"#fastcgi_cache_key\">cache key</a> of a purge request ends\nwith an asterisk (“<code>*</code>”), all cache entries matching the\nwildcard key will be removed from the cache.\nHowever, these entries will remain on the disk until they are deleted\nfor either <a href=\"#fastcgi_cache_path\">inactivity</a>,\nor processed by the <a href=\"#purger\">cache purger</a> (1.7.12),\nor a client attempts to access them.\n</p><p>\nExample configuration:\n</p> <blockquote class=\"example\"><pre>\nfastcgi_cache_path /data/nginx/cache keys_zone=cache_zone:10m;\n\nmap $request_method $purge_method {\n    PURGE   1;\n    default 0;\n}\n\nserver {\n    ...\n    location / {\n        fastcgi_pass        backend;\n        fastcgi_cache       cache_zone;\n        fastcgi_cache_key   $uri;\n        fastcgi_cache_purge $purge_method;\n    }\n}\n</pre></blockquote><p> \n</p> <blockquote class=\"note\">\nThis functionality is available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>.\n</blockquote><p> \n</p>"},{"directive":"fastcgi_cache_path","defaultValue":"—","syntax":"fastcgi_cache_path     path    [levels=levels]    [use_temp_path=on|off]    keys_zone=name:size    [inactive=time]    [max_size=size]    [manager_files=number]    [manager_sleep=time]    [manager_threshold=time]    [loader_files=number]    [loader_sleep=time]    [loader_threshold=time]    [purger=on|off]    [purger_files=number]    [purger_sleep=time]    [purger_threshold=time];","context":"http","description":"<p>\nSets the path and other parameters of a cache.\nCache data are stored in files.\nBoth the key and file name in a cache are a result of\napplying the MD5 function to the proxied URL.\n\nThe <code>levels</code> parameter defines hierarchy levels of a cache:\nfrom 1 to 3, each level accepts values 1 or 2.\nFor example, in the following configuration\n</p> <blockquote class=\"example\"><pre>\nfastcgi_cache_path /data/nginx/cache levels=1:2 keys_zone=one:10m;\n</pre></blockquote><p> \nfile names in a cache will look like this:\n</p> <blockquote class=\"example\"><pre>\n/data/nginx/cache/<strong>c</strong>/<strong>29</strong>/b7f54b2df7773722d382f4809d650<strong>29c</strong>\n</pre></blockquote><p> \n</p><p>\nA cached response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the cache can be put on\ndifferent file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both cache and a directory\nholding temporary files\nare put on the same file system.\nA directory for temporary files is set based on\nthe <code>use_temp_path</code> parameter (1.7.10).\nIf this parameter is omitted or set to the value <code>on</code>,\nthe directory set by the <a href=\"#fastcgi_temp_path\">fastcgi_temp_path</a> directive\nfor the given location will be used.\nIf the value is set to <code>off</code>,\ntemporary files will be put directly in the cache directory.\n</p><p>\nIn addition, all active keys and information about data are stored\nin a shared memory zone, whose <code><i>name</i></code> and <code><i>size</i></code>\nare configured by the <code>keys_zone</code> parameter.\nOne megabyte zone can store about 8 thousand keys.\n</p><p>\nCached data that are not accessed during the time specified by the\n<code>inactive</code> parameter get removed from the cache\nregardless of their freshness.\nBy default, <code>inactive</code> is set to 10 minutes.\n</p><p>\nThe special “cache manager” process monitors the maximum cache size set\nby the <code>max_size</code> parameter.\nWhen this size is exceeded, it removes the least recently used data.\nThe data is removed in iterations configured by\n<code>manager_files</code>,\n<code>manager_threshold</code>, and\n<code>manager_sleep</code> parameters (1.11.5).\nDuring one iteration no more than <code>manager_files</code> items\nare deleted (by default, 100).\nThe duration of one iteration is limited by the\n<code>manager_threshold</code> parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the <code>manager_sleep</code>\nparameter (by default, 50 milliseconds) is made.\n</p><p>\nA minute after the start the special “cache loader” process is activated.\nIt loads information about previously cached data stored on file system\ninto a cache zone.\nThe loading is also done in iterations.\nDuring one iteration no more than <code>loader_files</code> items\nare loaded (by default, 100).\nBesides, the duration of one iteration is limited by the\n<code>loader_threshold</code> parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the <code>loader_sleep</code>\nparameter (by default, 50 milliseconds) is made.\n</p><p>\nAdditionally,\nthe following parameters are available as part of our\n<a href=\"http://nginx.com/products/\">commercial subscription</a>:\n</p><p>\n</p> <dl class=\"compact\">\n\n<dt id=\"purger\">\n<code>purger</code>=<code>on</code>|<code>off</code>\n</dt>\n<dd>\nInstructs whether cache entries that match a\n<a href=\"#fastcgi_cache_purge\">wildcard key</a>\nwill be removed from the disk by the cache purger (1.7.12).\nSetting the parameter to <code>on</code>\n(default is <code>off</code>)\nwill activate the “cache purger” process that\npermanently iterates through all cache entries\nand deletes the entries that match the wildcard key.\n</dd>\n\n<dt id=\"purger_files\">\n<code>purger_files</code>=<code><i>number</i></code>\n</dt>\n<dd>\nSets the number of items that will be scanned during one iteration (1.7.12).\nBy default, <code>purger_files</code> is set to 10.\n</dd>\n\n<dt id=\"purger_threshold\">\n<code>purger_threshold</code>=<code><i>number</i></code>\n</dt>\n<dd>\nSets the duration of one iteration (1.7.12).\nBy default, <code>purger_threshold</code> is set to 50 milliseconds.\n</dd>\n\n<dt id=\"purger_sleep\">\n<code>purger_sleep</code>=<code><i>number</i></code>\n</dt>\n<dd>\nSets a pause between iterations (1.7.12).\nBy default, <code>purger_sleep</code> is set to 50 milliseconds.\n</dd>\n\n</dl><p> \n</p><p>\n</p> <blockquote class=\"note\">\nIn versions 1.7.3, 1.7.7, and 1.11.10 cache header format has been changed.\nPreviously cached responses will be considered invalid\nafter upgrading to a newer nginx version.\n</blockquote><p> \n</p>"},{"directive":"fastcgi_cache_min_uses","defaultValue":"fastcgi_cache_min_uses 1;","syntax":"fastcgi_cache_min_uses number;","context":"http, server, location","description":"<p>\nSets the <code><i>number</i></code> of requests after which the response\nwill be cached.\n</p>"},{"directive":"fastcgi_cache_methods","defaultValue":"fastcgi_cache_methods GET HEAD;","syntax":"fastcgi_cache_methods     GET |    HEAD |    POST    ...;","context":"http, server, location","description":"<p>This directive appeared in version 0.7.59.\n            </p></div><p>\nIf the client request method is listed in this directive then\nthe response will be cached.\n“<code>GET</code>” and “<code>HEAD</code>” methods are always\nadded to the list, though it is recommended to specify them explicitly.\nSee also the <a href=\"#fastcgi_no_cache\">fastcgi_no_cache</a> directive.\n</p>"},{"directive":"fastcgi_cache_max_range_offset","defaultValue":"—","syntax":"fastcgi_cache_max_range_offset number;","context":"http, server, location","description":"<p>This directive appeared in version 1.11.6.\n            </p></div><p>\nSets an offset in bytes for byte-range requests.\nIf the range is beyond the offset,\nthe range request will be passed to the FastCGI server\nand the response will not be cached.\n</p>"},{"directive":"fastcgi_cache_lock_timeout","defaultValue":"fastcgi_cache_lock_timeout 5s;","syntax":"fastcgi_cache_lock_timeout time;","context":"http, server, location","description":"<p>This directive appeared in version 1.1.12.\n            </p></div><p>\nSets a timeout for <a href=\"#fastcgi_cache_lock\">fastcgi_cache_lock</a>.\nWhen the <code><i>time</i></code> expires,\nthe request will be passed to the FastCGI server,\nhowever, the response will not be cached.\n</p> <blockquote class=\"note\">\nBefore 1.7.8, the response could be cached.\n</blockquote><p> \n</p>"},{"directive":"fastcgi_cache_lock_age","defaultValue":"fastcgi_cache_lock_age 5s;","syntax":"fastcgi_cache_lock_age time;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.8.\n            </p></div><p>\nIf the last request passed to the FastCGI server\nfor populating a new cache element\nhas not completed for the specified <code><i>time</i></code>,\none more request may be passed to the FastCGI server.\n</p>"},{"directive":"fastcgi_cache_lock","defaultValue":"fastcgi_cache_lock off;","syntax":"fastcgi_cache_lock on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.1.12.\n            </p></div><p>\nWhen enabled, only one request at a time will be allowed to populate\na new cache element identified according to the <a href=\"#fastcgi_cache_key\">fastcgi_cache_key</a>\ndirective by passing a request to a FastCGI server.\nOther requests of the same cache element will either wait\nfor a response to appear in the cache or the cache lock for\nthis element to be released, up to the time set by the\n<a href=\"#fastcgi_cache_lock_timeout\">fastcgi_cache_lock_timeout</a> directive.\n</p>"},{"directive":"fastcgi_cache_key","defaultValue":"—","syntax":"fastcgi_cache_key string;","context":"http, server, location","description":"<p>\nDefines a key for caching, for example\n</p> <blockquote class=\"example\"><pre>\nfastcgi_cache_key localhost:9000$request_uri;\n</pre></blockquote><p> \n</p>"},{"directive":"fastcgi_cache_bypass","defaultValue":"—","syntax":"fastcgi_cache_bypass string ...;","context":"http, server, location","description":"<p>\nDefines conditions under which the response will not be taken from a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to “0” then the response will not be taken from the cache:\n</p> <blockquote class=\"example\"><pre>\nfastcgi_cache_bypass $cookie_nocache $arg_nocache$arg_comment;\nfastcgi_cache_bypass $http_pragma    $http_authorization;\n</pre></blockquote><p> \nCan be used along with the <a href=\"#fastcgi_no_cache\">fastcgi_no_cache</a> directive.\n</p>"},{"directive":"fastcgi_cache_background_update","defaultValue":"fastcgi_cache_background_update off;","syntax":"fastcgi_cache_background_update on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.11.10.\n            </p></div><p>\nAllows starting a background subrequest\nto update an expired cache item,\nwhile a stale cached response is returned to the client.\nNote that it is necessary to\n<a href=\"#fastcgi_cache_use_stale_updating\">allow</a>\nthe usage of a stale cached response when it is being updated.\n</p>"},{"directive":"fastcgi_cache","defaultValue":"fastcgi_cache off;","syntax":"fastcgi_cache zone | off;","context":"http, server, location","description":"<p>\nDefines a shared memory zone used for caching.\nThe same zone can be used in several places.\nParameter value can contain variables (1.7.9).\nThe <code>off</code> parameter disables caching inherited\nfrom the previous configuration level.\n</p>"},{"directive":"fastcgi_busy_buffers_size","defaultValue":"fastcgi_busy_buffers_size 8k|16k;","syntax":"fastcgi_busy_buffers_size size;","context":"http, server, location","description":"<p>\nWhen <a href=\"#fastcgi_buffering\">buffering</a> of responses from the FastCGI\nserver is enabled, limits the total <code><i>size</i></code> of buffers that\ncan be busy sending a response to the client while the response is not\nyet fully read.\nIn the meantime, the rest of the buffers can be used for reading the response\nand, if needed, buffering part of the response to a temporary file.\nBy default, <code><i>size</i></code> is limited by the size of two buffers set by the\n<a href=\"#fastcgi_buffer_size\">fastcgi_buffer_size</a> and <a href=\"#fastcgi_buffers\">fastcgi_buffers</a> directives.\n</p>"},{"directive":"fastcgi_buffers","defaultValue":"fastcgi_buffers 8 4k|8k;","syntax":"fastcgi_buffers number size;","context":"http, server, location","description":"<p>\nSets the <code><i>number</i></code> and <code><i>size</i></code> of the\nbuffers used for reading a response from the FastCGI server,\nfor a single connection.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\n</p>"},{"directive":"fastcgi_buffering","defaultValue":"fastcgi_buffering on;","syntax":"fastcgi_buffering on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.5.6.\n            </p></div><p>\nEnables or disables buffering of responses from the FastCGI server.\n</p><p>\nWhen buffering is enabled, nginx receives a response from the FastCGI server\nas soon as possible, saving it into the buffers set by the\n<a href=\"#fastcgi_buffer_size\">fastcgi_buffer_size</a> and <a href=\"#fastcgi_buffers\">fastcgi_buffers</a> directives.\nIf the whole response does not fit into memory, a part of it can be saved\nto a <a href=\"#fastcgi_temp_path\">temporary file</a> on the disk.\nWriting to temporary files is controlled by the\n<a href=\"#fastcgi_max_temp_file_size\">fastcgi_max_temp_file_size</a> and\n<a href=\"#fastcgi_temp_file_write_size\">fastcgi_temp_file_write_size</a> directives.\n</p><p>\nWhen buffering is disabled, the response is passed to a client synchronously,\nimmediately as it is received.\nnginx will not try to read the whole response from the FastCGI server.\nThe maximum size of the data that nginx can receive from the server\nat a time is set by the <a href=\"#fastcgi_buffer_size\">fastcgi_buffer_size</a> directive.\n</p><p>\nBuffering can also be enabled or disabled by passing\n“<code>yes</code>” or “<code>no</code>” in the\n“X-Accel-Buffering” response header field.\nThis capability can be disabled using the\n<a href=\"#fastcgi_ignore_headers\">fastcgi_ignore_headers</a> directive.\n</p>"},{"directive":"fastcgi_buffer_size","defaultValue":"fastcgi_buffer_size 4k|8k;","syntax":"fastcgi_buffer_size size;","context":"http, server, location","description":"<p>\nSets the <code><i>size</i></code> of the buffer used for reading the first part\nof the response received from the FastCGI server.\nThis part usually contains a small response header.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\nIt can be made smaller, however.\n</p>"},{"directive":"fastcgi_bind","defaultValue":"—","syntax":"fastcgi_bind     address    [transparent] |    off;","context":"http, server, location","description":"<p>This directive appeared in version 0.8.22.\n            </p></div><p>\nMakes outgoing connections to a FastCGI server originate\nfrom the specified local IP address with an optional port (1.11.2).\nParameter value can contain variables (1.3.12).\nThe special value <code>off</code> (1.3.12) cancels the effect\nof the <code>fastcgi_bind</code> directive\ninherited from the previous configuration level, which allows the\nsystem to auto-assign the local IP address and port.\n</p>"},{"directive":"f4f_buffer_size","defaultValue":"","syntax":"","context":"","description":null},{"directive":"f4f","defaultValue":"—","syntax":"f4f;","context":"location","description":"<p>\nTurns on module processing in the surrounding location.\n</p>"},{"directive":"expires","defaultValue":"","syntax":"","context":"","description":null},{"directive":"events","defaultValue":"—","syntax":"events { ... }","context":"main","description":"<p>\nProvides the configuration file context in which the directives that\naffect connection processing are specified.\n</p>"},{"directive":"etag","defaultValue":"etag on;","syntax":"etag on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.3.3.\n            </p></div><p>\nEnables or disables automatic generation of the “ETag”\nresponse header field for static resources.\n</p>"},{"directive":"error_page","defaultValue":"—","syntax":"error_page     code ...    [=[response]]    uri;","context":"http, server, location, if in location","description":"<p>\nDefines the URI that will be shown for the specified errors.\nA <code><i>uri</i></code> value can contain variables.\n</p><p>\nExample:\n</p> <blockquote class=\"example\"><pre>\nerror_page 404             /404.html;\nerror_page 500 502 503 504 /50x.html;\n</pre></blockquote><p> \n</p><p>\nThis causes an internal redirect to the specified <code><i>uri</i></code>\nwith the client request method changed to “<code>GET</code>”\n(for all methods other than\n“<code>GET</code>” and “<code>HEAD</code>”).\n</p><p>\nFurthermore, it is possible to change the response code to another\nusing the “<code>=</code><code><i>response</i></code>” syntax, for example:\n</p> <blockquote class=\"example\"><pre>\nerror_page 404 =200 /empty.gif;\n</pre></blockquote><p> \n</p><p>\nIf an error response is processed by a proxied server\nor a FastCGI/uwsgi/SCGI server,\nand the server may return different response codes (e.g., 200, 302, 401\nor 404), it is possible to respond with the code it returns:\n</p> <blockquote class=\"example\"><pre>\nerror_page 404 = /404.php;\n</pre></blockquote><p> \n</p><p>\nIf there is no need to change URI and method during internal redirection\nit is possible to pass error processing into a named location:\n</p> <blockquote class=\"example\"><pre>\nlocation / {\n    error_page 404 = @fallback;\n}\n\nlocation @fallback {\n    proxy_pass http://backend;\n}\n</pre></blockquote><p> \n</p><p>\n</p> <blockquote class=\"note\">\nIf <code><i>uri</i></code> processing leads to an error,\nthe status code of the last occurred error is returned to the client.\n</blockquote><p> \n</p><p>\nIt is also possible to use URL redirects for error processing:\n</p> <blockquote class=\"example\"><pre>\nerror_page 403      http://example.com/forbidden.html;\nerror_page 404 =301 http://example.com/notfound.html;\n</pre></blockquote><p> \nIn this case, by default, the response code 302 is returned to the client.\nIt can only be changed to one of the redirect status\ncodes (301, 302, 303, 307, and 308).\n</p><p>\nThese directives are inherited from the previous level if and\nonly if there are no\n<code>error_page</code>\ndirectives defined on the current level.\n</p>"},{"directive":"error_log","defaultValue":"error_log logs/error.log error;","syntax":"error_log file [level];","context":"main, http, mail, stream, server, location","description":"<p>\nConfigures logging.\nSeveral logs can be specified on the same level (1.5.2).\nIf on the <code>main</code> configuration level writing a log to a file\nis not explicitly defined, the default file will be used.\n</p><p>\nThe first parameter defines a <code><i>file</i></code> that will store the log.\n\nThe special value <code>stderr</code> selects the standard error file.\nLogging to <a href=\"syslog.html\">syslog</a> can be configured by specifying\nthe “<code>syslog:</code>” prefix.\nLogging to a\n<a href=\"debugging_log.html#memory\">cyclic memory buffer</a>\ncan be configured by specifying the “<code>memory:</code>” prefix and\nbuffer <code><i>size</i></code>, and is generally used for debugging (1.7.11).\n</p><p>\nThe second parameter determines the <code><i>level</i></code> of logging,\nand can be one of the following:\n<code>debug</code>, <code>info</code>, <code>notice</code>,\n<code>warn</code>, <code>error</code>, <code>crit</code>,\n<code>alert</code>, or <code>emerg</code>.\nLog levels above are listed in the order of increasing severity.\nSetting a certain log level will cause all messages of\nthe specified and more severe log levels to be logged.\nFor example, the default level <code>error</code> will\ncause <code>error</code>, <code>crit</code>,\n<code>alert</code>, and <code>emerg</code> messages\nto be logged.\nIf this parameter is omitted then <code>error</code> is used.\n</p> <blockquote class=\"note\">\nFor <code>debug</code> logging to work, nginx needs to\nbe built with <code>--with-debug</code>,\nsee “<a href=\"debugging_log.html\">A debugging log</a>”.\n</blockquote><p> \n\n</p> <blockquote class=\"note\">\nThe directive can be specified on the\n<code>stream</code> level\nstarting from version 1.7.11,\nand on the <code>mail</code> level\nstarting from version 1.9.0.\n</blockquote><p> \n</p>"},{"directive":"env","defaultValue":"env TZ;","syntax":"env variable[=value];","context":"main","description":"<p>\nBy default, nginx removes all environment variables inherited\nfrom its parent process except the TZ variable.\nThis directive allows preserving some of the inherited variables,\nchanging their values, or creating new environment variables.\nThese variables are then:\n</p> <ul class=\"compact\">\n\n<li>\ninherited during a <a href=\"control.html#upgrade\">live upgrade</a>\nof an executable file;\n</li>\n\n<li>\nused by the\n<a href=\"http/ngx_http_perl_module.html\">ngx_http_perl_module</a> module;\n</li>\n\n<li>\nused by worker processes.\nOne should bear in mind that controlling system libraries in this way\nis not always possible as it is common for libraries to check\nvariables only during initialization, well before they can be set\nusing this directive.\nAn exception from this is an above mentioned\n<a href=\"control.html#upgrade\">live upgrade</a>\nof an executable file.\n</li>\n\n</ul><p> \n</p><p>\nThe TZ variable is always inherited and available to the\n<a href=\"http/ngx_http_perl_module.html\">ngx_http_perl_module</a>\nmodule, unless it is configured explicitly.\n</p><p>\nUsage example:\n</p> <blockquote class=\"example\"><pre>\nenv MALLOC_OPTIONS;\nenv PERL5LIB=/data/site/modules;\nenv OPENSSL_ALLOW_PROXY_CERTS=1;\n</pre></blockquote><p> \n</p><p>\n</p> <blockquote class=\"note\">\nThe NGINX environment variable is used internally by nginx\nand should not be set directly by the user.\n</blockquote><p> \n</p>"},{"directive":"empty_gif","defaultValue":"","syntax":"","context":"","description":null},{"directive":"disable_symlinks","defaultValue":"disable_symlinks off;","syntax":"disable_symlinks off;disable_symlinks     on |    if_not_owner    [from=part];","context":"http, server, location","description":"<p>This directive appeared in version 1.1.15.\n            </p></div><p>\nDetermines how symbolic links should be treated when opening files:\n</p> <dl class=\"compact\">\n\n<dt><code>off</code></dt>\n<dd>\nSymbolic links in the pathname are allowed and not checked.\nThis is the default behavior.\n</dd>\n\n<dt><code>on</code></dt>\n<dd>\nIf any component of the pathname is a symbolic link,\naccess to a file is denied.\n</dd>\n\n<dt><code>if_not_owner</code></dt>\n<dd>\nAccess to a file is denied if any component of the pathname\nis a symbolic link, and the link and object that the link\npoints to have different owners.\n</dd>\n\n<dt><code>from</code>=<code><i>part</i></code></dt>\n<dd>\nWhen checking symbolic links\n(parameters <code>on</code> and <code>if_not_owner</code>),\nall components of the pathname are normally checked.\nChecking of symbolic links in the initial part of the pathname\nmay be avoided by specifying additionally the\n<code>from</code>=<code><i>part</i></code> parameter.\nIn this case, symbolic links are checked only from\nthe pathname component that follows the specified initial part.\nIf the value is not an initial part of the pathname checked, the whole\npathname is checked as if this parameter was not specified at all.\nIf the value matches the whole file name,\nsymbolic links are not checked.\nThe parameter value can contain variables.\n</dd>\n\n</dl><p> \n</p><p>\nExample:\n</p> <blockquote class=\"example\"><pre>\ndisable_symlinks on from=$document_root;\n</pre></blockquote><p> \n</p><p>\nThis directive is only available on systems that have the\n<code>openat()</code> and <code>fstatat()</code> interfaces.\nSuch systems include modern versions of FreeBSD, Linux, and Solaris.\n</p><p>\nParameters <code>on</code> and <code>if_not_owner</code>\nadd a processing overhead.\n</p> <blockquote class=\"note\">\nOn systems that do not support opening of directories only for search,\nto use these parameters it is required that worker processes\nhave read permissions for all directories being checked.\n</blockquote><p> \n</p><p>\n</p> <blockquote class=\"note\">\nThe\n<a href=\"ngx_http_autoindex_module.html\">ngx_http_autoindex_module</a>,\n<a href=\"ngx_http_random_index_module.html\">ngx_http_random_index_module</a>,\nand <a href=\"ngx_http_dav_module.html\">ngx_http_dav_module</a>\nmodules currently ignore this directive.\n</blockquote><p> \n</p>"},{"directive":"directio_alignment","defaultValue":"directio_alignment 512;","syntax":"directio_alignment size;","context":"http, server, location","description":"<p>This directive appeared in version 0.8.11.\n            </p></div><p>\nSets the alignment for\n<a href=\"#directio\">directio</a>.\nIn most cases, a 512-byte alignment is enough.\nHowever, when using XFS under Linux, it needs to be increased to 4K.\n</p>"},{"directive":"directio","defaultValue":"directio off;","syntax":"directio size | off;","context":"http, server, location","description":"<p>This directive appeared in version 0.7.7.\n            </p></div><p>\nEnables the use of\nthe <code>O_DIRECT</code> flag (FreeBSD, Linux),\nthe <code>F_NOCACHE</code> flag (macOS),\nor the <code>directio()</code> function (Solaris),\nwhen reading files that are larger than or equal to\nthe specified <code><i>size</i></code>.\nThe directive automatically disables (0.7.15) the use of\n<a href=\"#sendfile\">sendfile</a>\nfor a given request.\nIt can be useful for serving large files:\n</p> <blockquote class=\"example\"><pre>\ndirectio 4m;\n</pre></blockquote><p> \nor when using <a href=\"#aio\">aio</a> on Linux.\n</p>"},{"directive":"deny","defaultValue":"","syntax":"","context":"","description":null},{"directive":"deny","defaultValue":"","syntax":"","context":"","description":null},{"directive":"default_type","defaultValue":"default_type text/plain;","syntax":"default_type mime-type;","context":"http, server, location","description":"<p>\nDefines the default MIME type of a response.\nMapping of file name extensions to MIME types can be set\nwith the <a href=\"#types\">types</a> directive.\n</p>"},{"directive":"debug_points","defaultValue":"—","syntax":"debug_points abort | stop;","context":"main","description":"<p>\nThis directive is used for debugging.\n</p><p>\nWhen internal error is detected, e.g. the leak of sockets on\nrestart of working processes, enabling <code>debug_points</code>\nleads to a core file creation (<code>abort</code>)\nor to stopping of a process (<code>stop</code>) for further\nanalysis using a system debugger.\n</p>"},{"directive":"debug_connection","defaultValue":"—","syntax":"debug_connection     address |    CIDR |    unix:;","context":"events","description":"<p>\nEnables debugging log for selected client connections.\nOther connections will use logging level set by the\n<a href=\"#error_log\">error_log</a> directive.\nDebugged connections are specified by IPv4 or IPv6 (1.3.0, 1.2.1)\naddress or network.\nA connection may also be specified using a hostname.\nFor connections using UNIX-domain sockets (1.3.0, 1.2.1),\ndebugging log is enabled by the “<code>unix:</code>” parameter.\n</p> <blockquote class=\"example\"><pre>\nevents {\n    debug_connection 127.0.0.1;\n    debug_connection localhost;\n    debug_connection 192.0.2.0/24;\n    debug_connection ::1;\n    debug_connection 2001:0db8::/32;\n    debug_connection unix:;\n    ...\n}\n</pre></blockquote><p> \n</p> <blockquote class=\"note\">\nFor this directive to work, nginx needs to\nbe built with <code>--with-debug</code>,\nsee “<a href=\"debugging_log.html\">A debugging log</a>”.\n</blockquote><p> \n</p>"},{"directive":"dav_methods","defaultValue":"dav_methods off;","syntax":"dav_methods     off | method ...;","context":"http, server, location","description":"<p>\nAllows the specified HTTP and WebDAV methods.\nThe parameter <code>off</code> denies all methods processed\nby this module.\nThe following methods are supported:\n<code>PUT</code>, <code>DELETE</code>, <code>MKCOL</code>,\n<code>COPY</code>, and <code>MOVE</code>.\n</p><p>\nA file uploaded with the PUT method is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the persistent store\ncan be put on different file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both saved files and a\ndirectory holding temporary files, set by the\n<a href=\"ngx_http_core_module.html#client_body_temp_path\">client_body_temp_path</a>\ndirective, are put on the same file system.\n</p><p>\nWhen creating a file with the PUT method, it is possible to specify\nthe modification date by passing it in the “Date”\nheader field.\n</p>"},{"directive":"dav_access","defaultValue":"dav_access user:rw;","syntax":"dav_access users:permissions ...;","context":"http, server, location","description":"<p>\nSets access permissions for newly created files and directories, e.g.:\n</p> <blockquote class=\"example\"><pre>\ndav_access user:rw group:rw all:r;\n</pre></blockquote><p> \n</p><p>\nIf any <code>group</code> or <code>all</code> access permissions\nare specified then <code>user</code> permissions may be omitted:\n</p> <blockquote class=\"example\"><pre>\ndav_access group:rw all:r;\n</pre></blockquote><p> \n</p>"},{"directive":"daemon","defaultValue":"daemon on;","syntax":"daemon on | off;","context":"main","description":"<p>\nDetermines whether nginx should become a daemon.\nMainly used during development.\n</p>"},{"directive":"create_full_put_path","defaultValue":"create_full_put_path off;","syntax":"create_full_put_path on | off;","context":"http, server, location","description":"<p>\nThe WebDAV specification only allows creating files in already\nexisting directories.\nThis directive allows creating all needed intermediate directories.\n</p>"},{"directive":"connection_pool_size","defaultValue":"connection_pool_size 256|512;","syntax":"connection_pool_size size;","context":"http, server","description":"<p>\nAllows accurate tuning of per-connection memory allocations.\nThis directive has minimal impact on performance\nand should not generally be used.\nBy default, the size is equal to\n256 bytes on 32-bit platforms and 512 bytes on 64-bit platforms.\n</p> <blockquote class=\"note\">\nPrior to version 1.9.8, the default value was 256 on all platforms.\n</blockquote><p> \n</p>"},{"directive":"client_max_body_size","defaultValue":"client_max_body_size 1m;","syntax":"client_max_body_size size;","context":"http, server, location","description":"<p>\nSets the maximum allowed size of the client request body,\nspecified in the\n“Content-Length”\nrequest header field.\nIf the size in a request exceeds the configured value, the\n413 (Request Entity Too Large)\nerror is returned to the client.\nPlease be aware that\nbrowsers cannot correctly display\nthis error.\nSetting <code><i>size</i></code> to 0 disables checking of client\nrequest body size.\n</p>"},{"directive":"client_header_timeout","defaultValue":"client_header_timeout 60s;","syntax":"client_header_timeout time;","context":"http, server","description":"<p>\nDefines a timeout for reading client request header.\nIf a client does not transmit the entire header within this time, the\n408 (Request Time-out)\nerror is returned to the client.\n</p>"},{"directive":"client_header_buffer_size","defaultValue":"client_header_buffer_size 1k;","syntax":"client_header_buffer_size size;","context":"http, server","description":"<p>\nSets buffer size for reading client request header.\nFor most requests, a buffer of 1K bytes is enough.\nHowever, if a request includes long cookies, or comes from a WAP client,\nit may not fit into 1K.\nIf a request line or a request header field does not fit into\nthis buffer then larger buffers, configured by the\n<a href=\"#large_client_header_buffers\">large_client_header_buffers</a> directive,\nare allocated.\n</p>"},{"directive":"client_body_timeout","defaultValue":"client_body_timeout 60s;","syntax":"client_body_timeout time;","context":"http, server, location","description":"<p>\nDefines a timeout for reading client request body.\nThe timeout is set only for a period between two successive read operations,\nnot for the transmission of the whole request body.\nIf a client does not transmit anything within this time, the\n408 (Request Time-out)\nerror is returned to the client.\n</p>"},{"directive":"client_body_temp_path","defaultValue":"client_body_temp_path client_body_temp;","syntax":"client_body_temp_path     path    [level1    [level2    [level3]]];","context":"http, server, location","description":"<p>\nDefines a directory for storing temporary files holding client request bodies.\nUp to three-level subdirectory hierarchy can be used under the specified\ndirectory.\nFor example, in the following configuration\n</p> <blockquote class=\"example\"><pre>\nclient_body_temp_path /spool/nginx/client_temp 1 2;\n</pre></blockquote><p> \na path to a temporary file might look like this:\n</p> <blockquote class=\"example\"><pre>\n/spool/nginx/client_temp/7/45/00000123457\n</pre></blockquote><p> \n</p>"},{"directive":"client_body_in_single_buffer","defaultValue":"client_body_in_single_buffer off;","syntax":"client_body_in_single_buffer on | off;","context":"http, server, location","description":"<p>\nDetermines whether nginx should save the entire client request body\nin a single buffer.\nThe directive is recommended when using the\n<code>$request_body</code>\nvariable, to save the number of copy operations involved.\n</p>"},{"directive":"client_body_in_file_only","defaultValue":"client_body_in_file_only off;","syntax":"client_body_in_file_only     on |    clean |    off;","context":"http, server, location","description":"<p>\nDetermines whether nginx should save the entire client request body\ninto a file.\nThis directive can be used during debugging, or when using the\n<code>$request_body_file</code>\nvariable, or the\n<a href=\"ngx_http_perl_module.html#methods\">$r-&gt;request_body_file</a>\nmethod of the module\n<a href=\"ngx_http_perl_module.html\">ngx_http_perl_module</a>.\n</p><p>\nWhen set to the value <code>on</code>, temporary files are not\nremoved after request processing.\n</p><p>\nThe value <code>clean</code> will cause the temporary files\nleft after request processing to be removed.\n</p>"},{"directive":"client_body_buffer_size","defaultValue":"client_body_buffer_size 8k|16k;","syntax":"client_body_buffer_size size;","context":"http, server, location","description":"<p>\nSets buffer size for reading client request body.\nIn case the request body is larger than the buffer,\nthe whole body or only its part is written to a\n<a href=\"#client_body_temp_path\">temporary file</a>.\nBy default, buffer size is equal to two memory pages.\nThis is 8K on x86, other 32-bit platforms, and x86-64.\nIt is usually 16K on other 64-bit platforms.\n</p>"},{"directive":"chunked_transfer_encoding","defaultValue":"chunked_transfer_encoding on;","syntax":"chunked_transfer_encoding on | off;","context":"http, server, location","description":"<p>\nAllows disabling chunked transfer encoding in HTTP/1.1.\nIt may come in handy when using a software failing to support\nchunked encoding despite the standard’s requirement.\n</p>"},{"directive":"charset_types","defaultValue":"charset_types text/html text/xml text/plain text/vnd.wap.wmlapplication/javascript application/rss+xml;","syntax":"charset_types mime-type ...;","context":"http, server, location","description":"<p>This directive appeared in version 0.7.9.\n            </p></div><p>\nEnables module processing in responses with the specified MIME types\nin addition to “<code>text/html</code>”.\nThe special value “<code>*</code>” matches any MIME type (0.8.29).\n</p><p>\n</p> <blockquote class=\"note\">\nUntil version 1.5.4, “<code>application/x-javascript</code>” was used\nas the default MIME type instead of “<code>application/javascript</code>”.\n</blockquote><p> \n</p>"},{"directive":"charset_map","defaultValue":"—","syntax":"charset_map charset1 charset2 { ... }","context":"http","description":"<p>\nDescribes the conversion table from one charset to another.\nA reverse conversion table is built using the same data.\nCharacter codes are given in hexadecimal.\nMissing characters in the range 80-FF are replaced with “<code>?</code>”.\nWhen converting from UTF-8, characters missing in a one-byte charset\nare replaced with “<code>&amp;#XXXX;</code>”.\n</p><p>\nExample:\n</p> <blockquote class=\"example\"><pre>\ncharset_map koi8-r windows-1251 {\n    C0 FE ; # small yu\n    C1 E0 ; # small a\n    C2 E1 ; # small b\n    C3 F6 ; # small ts\n    ...\n}\n</pre></blockquote><p> \n</p><p>\nWhen describing a conversion table to UTF-8, codes for the UTF-8 charset should\nbe given in the second column, for example:\n</p> <blockquote class=\"example\"><pre>\ncharset_map koi8-r utf-8 {\n    C0 D18E ; # small yu\n    C1 D0B0 ; # small a\n    C2 D0B1 ; # small b\n    C3 D186 ; # small ts\n    ...\n}\n</pre></blockquote><p> \n</p><p>\nFull conversion tables from <code>koi8-r</code> to\n<code>windows-1251</code>, and from <code>koi8-r</code> and\n<code>windows-1251</code> to <code>utf-8</code>\nare provided in the distribution files <code>conf/koi-win</code>,\n<code>conf/koi-utf</code>, and <code>conf/win-utf</code>.\n</p>"},{"directive":"charset","defaultValue":"charset off;","syntax":"charset charset | off;","context":"http, server, location, if in location","description":"<p>\nAdds the specified charset to the “Content-Type”\nresponse header field.\nIf this charset is different from the charset specified\nin the <a href=\"#source_charset\">source_charset</a> directive, a conversion is performed.\n</p><p>\nThe parameter <code>off</code> cancels the addition of charset\nto the “Content-Type” response header field.\n</p><p>\nA charset can be defined with a variable:\n</p> <blockquote class=\"example\"><pre>\ncharset $charset;\n</pre></blockquote><p> \nIn such a case, all possible values of a variable need to be present\nin the configuration at least once in the form of the\n<a href=\"#charset_map\">charset_map</a>, <a href=\"#charset\">charset</a>, or\n<a href=\"#source_charset\">source_charset</a> directives.\nFor <code>utf-8</code>, <code>windows-1251</code>, and\n<code>koi8-r</code> charsets, it is sufficient to include the files\n<code>conf/koi-win</code>, <code>conf/koi-utf</code>, and\n<code>conf/win-utf</code> into configuration.\nFor other charsets, simply making a fictitious conversion table works,\nfor example:\n</p> <blockquote class=\"example\"><pre>\ncharset_map iso-8859-5 _ { }\n</pre></blockquote><p> \n</p><p>\nIn addition, a charset can be set in the\n“X-Accel-Charset” response header field.\nThis capability can be disabled using the\n<a href=\"ngx_http_proxy_module.html#proxy_ignore_headers\">proxy_ignore_headers</a>,\n<a href=\"ngx_http_fastcgi_module.html#fastcgi_ignore_headers\">fastcgi_ignore_headers</a>,\n<a href=\"ngx_http_uwsgi_module.html#uwsgi_ignore_headers\">uwsgi_ignore_headers</a>,\nand\n<a href=\"ngx_http_scgi_module.html#scgi_ignore_headers\">scgi_ignore_headers</a>\ndirectives.\n</p>"},{"directive":"break","defaultValue":"—","syntax":"break;","context":"server, location, if","description":"<p>\nStops processing the current set of\n<code>ngx_http_rewrite_module</code> directives.\n</p><p>\nIf a directive is specified inside the\n<a href=\"ngx_http_core_module.html#location\">location</a>,\nfurther processing of the request continues in this location.\n</p><p>\nExample:\n</p> <blockquote class=\"example\"><pre>\nif ($slow) {\n    limit_rate 10k;\n    break;\n}\n</pre></blockquote><p> \n</p>"},{"directive":"autoindex_localtime","defaultValue":"","syntax":"","context":"","description":null},{"directive":"autoindex_format","defaultValue":"autoindex_format html;","syntax":"autoindex_format     html |    xml |    json |    jsonp;","context":"http, server, location","description":"<p>This directive appeared in version 1.7.9.\n            </p></div><p>\nSets the format of a directory listing.\n</p><p>\nWhen the JSONP format is used, the name of a callback function is set\nwith the <code>callback</code> request argument.\nIf the argument is missing or has an empty value,\nthen the JSON format is used.\n</p><p>\nThe XML output can be transformed using the\n<a href=\"ngx_http_xslt_module.html\">ngx_http_xslt_module</a> module.\n</p>"},{"directive":"autoindex_exact_size","defaultValue":"autoindex_exact_size on;","syntax":"autoindex_exact_size on | off;","context":"http, server, location","description":"<p>\nFor the HTML <a href=\"#autoindex_format\">format</a>,\nspecifies whether exact file sizes should be output in the directory listing,\nor rather rounded to kilobytes, megabytes, and gigabytes.\n</p>"},{"directive":"autoindex","defaultValue":"autoindex off;","syntax":"autoindex on | off;","context":"http, server, location","description":"<p>\nEnables or disables the directory listing output.\n</p>"},{"directive":"auth_request_set","defaultValue":"","syntax":"","context":"","description":null},{"directive":"auth_request","defaultValue":"auth_request off;","syntax":"auth_request uri | off;","context":"http, server, location","description":"<p>\nEnables authorization based on the result of a subrequest and sets\nthe URI to which the subrequest will be sent.\n</p>"},{"directive":"auth_jwt_key_file","defaultValue":"—","syntax":"auth_jwt_key_file file;","context":"http, server, location","description":"<p>\nSpecifies a <code><i>file</i></code> in\n<a href=\"https://tools.ietf.org/html/rfc7517#section-5\">JSON Web Key Set</a>\nformat for validating JWT signature.\nParameter value can contain variables.\n</p>"},{"directive":"auth_jwt_header_set","defaultValue":"—","syntax":"auth_jwt_header_set $variable name;","context":"http","description":"<p>This directive appeared in version 1.11.10.\n            </p></div><p>\nSets the <code><i>variable</i></code> to the given\nJOSE header parameter <code><i>name</i></code>.\n</p>"},{"directive":"auth_jwt_claim_set","defaultValue":"—","syntax":"auth_jwt_claim_set $variable name;","context":"http","description":"<p>This directive appeared in version 1.11.10.\n            </p></div><p>\nSets the <code><i>variable</i></code> to the given\nJWT claim parameter <code><i>name</i></code>.\n</p>"},{"directive":"auth_jwt","defaultValue":"auth_jwt off;","syntax":"auth_jwt     string    [token=$variable] |    off;","context":"http, server, location","description":"<p>\nEnables validation of JSON Web Token.\nThe specified <code><i>string</i></code> is used as a <code>realm</code>.\nParameter value can contain variables.\n</p><p>\nThe optional <code>token</code> parameter specifies a variable\nthat contains JSON Web Token.\nBy default, JWT is passed in the “Authorization” header\nas a\n<a href=\"https://tools.ietf.org/html/rfc6750\">Bearer Token</a>.\nJWT may be also passed as a cookie or a part of a query string:\n</p> <blockquote class=\"example\"><pre>\nauth_jwt \"closed site\" token=$cookie_auth_token;\n</pre></blockquote><p> \n</p><p>\nThe special value <code>off</code> cancels the effect\nof the <code>auth_jwt</code> directive\ninherited from the previous configuration level.\n</p>"},{"directive":"auth_http_timeout","defaultValue":"auth_http_timeout 60s;","syntax":"auth_http_timeout time;","context":"mail, server","description":"<p>\nSets the timeout for communication with the authentication server.\n</p>"},{"directive":"auth_http_pass_client_cert","defaultValue":"auth_http_pass_client_cert off;","syntax":"auth_http_pass_client_cert on | off;","context":"mail, server","description":"<p>This directive appeared in version 1.7.11.\n            </p></div><p>\nAppends the “Auth-SSL-Cert” header with the\n<a href=\"ngx_mail_ssl_module.html#ssl_verify_client\">client</a>\ncertificate in the PEM format (urlencoded)\nto requests sent to the authentication server.\n</p>"},{"directive":"auth_http_header","defaultValue":"—","syntax":"auth_http_header header value;","context":"mail, server","description":"<p>\nAppends the specified header to requests sent to the authentication server.\nThis header can be used as the shared secret to verify\nthat the request comes from nginx.\nFor example:\n</p> <blockquote class=\"example\"><pre>\nauth_http_header X-Auth-Key \"secret_string\";\n</pre></blockquote><p> \n</p>"},{"directive":"auth_http","defaultValue":"—","syntax":"auth_http URL;","context":"mail, server","description":"<p>\nSets the URL of the HTTP authentication server.\nThe protocol is described <a href=\"#protocol\">below</a>.\n</p>"},{"directive":"auth_basic_user_file","defaultValue":"","syntax":"","context":"","description":null},{"directive":"auth_basic","defaultValue":"auth_basic off;","syntax":"auth_basic string | off;","context":"http, server, location, limit_except","description":"<p>\nEnables validation of user name and password using the\n“HTTP Basic Authentication” protocol.\nThe specified parameter is used as a <code><i>realm</i></code>.\nParameter value can contain variables (1.3.10, 1.2.7).\nThe special value <code>off</code> allows cancelling the effect\nof the <code>auth_basic</code> directive\ninherited from the previous configuration level.\n</p>"},{"directive":"ancient_browser_value","defaultValue":"ancient_browser_value 1;","syntax":"ancient_browser_value string;","context":"http, server, location","description":"<p>\nSets a value for the <code>$ancient_browser</code> variables.\n</p>"},{"directive":"ancient_browser","defaultValue":"—","syntax":"ancient_browser string ...;","context":"http, server, location","description":"<p>\nIf any of the specified substrings is found in the “User-Agent”\nrequest header field, the browser will be considered ancient.\nThe special string “<code>netscape4</code>” corresponds to the\nregular expression “<code>^Mozilla/[1-4]</code>”.\n</p>"},{"directive":"allow","defaultValue":"—","syntax":"allow     address |    CIDR |    unix: |    all;","context":"stream, server","description":"<p>\nAllows access for the specified network or address.\nIf the special value <code>unix:</code> is specified,\nallows access for all UNIX-domain sockets.\n</p>"},{"directive":"allow","defaultValue":"—","syntax":"allow     address |    CIDR |    unix: |    all;","context":"http, server, location, limit_except","description":"<p>\nAllows access for the specified network or address.\nIf the special value <code>unix:</code> is specified (1.5.1),\nallows access for all UNIX-domain sockets.\n</p>"},{"directive":"alias","defaultValue":"—","syntax":"alias path;","context":"location","description":"<p>\nDefines a replacement for the specified location.\nFor example, with the following configuration\n</p> <blockquote class=\"example\"><pre>\nlocation /i/ {\n    alias /data/w3/images/;\n}\n</pre></blockquote><p> \non request of\n“<code>/i/top.gif</code>”, the file\n<code>/data/w3/images/top.gif</code> will be sent.\n</p><p>\nThe <code><i>path</i></code> value can contain variables,\nexcept <code>$document_root</code> and <code>$realpath_root</code>.\n</p><p>\nIf <code>alias</code> is used inside a location defined\nwith a regular expression then such regular expression should\ncontain captures and <code>alias</code> should refer to\nthese captures (0.7.40), for example:\n</p> <blockquote class=\"example\"><pre>\nlocation ~ ^/users/(.+\\.(?:gif|jpe?g|png))$ {\n    alias /data/w3/images/$1;\n}\n</pre></blockquote><p> \n</p><p>\nWhen location matches the last part of the directive’s value:\n</p> <blockquote class=\"example\"><pre>\nlocation /images/ {\n    alias /data/w3/images/;\n}\n</pre></blockquote><p> \nit is better to use the\n<a href=\"#root\">root</a>\ndirective instead:\n</p> <blockquote class=\"example\"><pre>\nlocation /images/ {\n    root /data/w3;\n}\n</pre></blockquote><p> \n</p>"},{"directive":"aio_write","defaultValue":"aio_write off;","syntax":"aio_write on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.9.13.\n            </p></div><p>\nIf <a href=\"#aio\">aio</a> is enabled, specifies whether it is used for writing files.\nCurrently, this only works when using\n<code>aio threads</code>\nand is limited to writing temporary files\nwith data received from proxied servers.\n</p>"},{"directive":"aio","defaultValue":"aio off;","syntax":"aio     on |    off |    threads[=pool];","context":"http, server, location","description":"<p>This directive appeared in version 0.8.11.\n            </p></div><p>\nEnables or disables the use of asynchronous file I/O (AIO)\non FreeBSD and Linux:\n</p> <blockquote class=\"example\"><pre>\nlocation /video/ {\n    aio            on;\n    output_buffers 1 64k;\n}\n</pre></blockquote><p> \n</p><p>\nOn FreeBSD, AIO can be used starting from FreeBSD 4.3.\nPrior to FreeBSD 11.0,\nAIO can either be linked statically into a kernel:\n</p> <blockquote class=\"example\"><pre>\noptions VFS_AIO\n</pre></blockquote><p> \nor loaded dynamically as a kernel loadable module:\n</p> <blockquote class=\"example\"><pre>\nkldload aio\n</pre></blockquote><p> \n</p><p>\nOn Linux, AIO can be used starting from kernel version 2.6.22.\nAlso, it is necessary to enable\n<a href=\"#directio\">directio</a>,\nor otherwise reading will be blocking:\n</p> <blockquote class=\"example\"><pre>\nlocation /video/ {\n    aio            on;\n    directio       512;\n    output_buffers 1 128k;\n}\n</pre></blockquote><p> \n</p><p>\nOn Linux,\n<a href=\"#directio\">directio</a>\ncan only be used for reading blocks that are aligned on 512-byte\nboundaries (or 4K for XFS).\nFile’s unaligned end is read in blocking mode.\nThe same holds true for byte range requests and for FLV requests\nnot from the beginning of a file: reading of unaligned data at the\nbeginning and end of a file will be blocking.\n</p><p>\nWhen both AIO and <a href=\"#sendfile\">sendfile</a> are enabled on Linux,\nAIO is used for files that are larger than or equal to\nthe size specified in the <a href=\"#directio\">directio</a> directive,\nwhile <a href=\"#sendfile\">sendfile</a> is used for files of smaller sizes\nor when <a href=\"#directio\">directio</a> is disabled.\n</p> <blockquote class=\"example\"><pre>\nlocation /video/ {\n    sendfile       on;\n    aio            on;\n    directio       8m;\n}\n</pre></blockquote><p> \n</p><p>\nFinally, files can be read and <a href=\"#sendfile\">sent</a>\nusing multi-threading (1.7.11),\nwithout blocking a worker process:\n</p> <blockquote class=\"example\"><pre>\nlocation /video/ {\n    sendfile       on;\n    aio            threads;\n}\n</pre></blockquote><p> \nRead and send file operations are offloaded to threads of the specified\n<a href=\"../ngx_core_module.html#thread_pool\">pool</a>.\nIf the pool name is omitted,\nthe pool with the name “<code>default</code>” is used.\nThe pool name can also be set with variables:\n</p> <blockquote class=\"example\"><pre>\naio threads=pool$disk;\n</pre></blockquote><p> \nBy default, multi-threading is disabled, it should be\nenabled with the\n<code>--with-threads</code> configuration parameter.\nCurrently, multi-threading is compatible only with the\n<a href=\"../events.html#epoll\">epoll</a>,\n<a href=\"../events.html#kqueue\">kqueue</a>,\nand\n<a href=\"../events.html#eventport\">eventport</a> methods.\nMulti-threaded sending of files is only supported on Linux.\n</p><p>\nSee also the <a href=\"#sendfile\">sendfile</a> directive.\n</p>"},{"directive":"addition_types","defaultValue":"","syntax":"","context":"","description":null},{"directive":"add_header","defaultValue":"—","syntax":"add_header name value[always];","context":"http, server, location, if in location","description":"<p>\nAdds the specified field to a response header provided that\nthe response code equals 200, 201, 204, 206, 301, 302, 303, 304, 307, or 308.\nA value can contain variables.\n</p><p>\nThere could be several <code>add_header</code> directives.\nThese directives are inherited from the previous level if and\nonly if there are no\n<code>add_header</code>\ndirectives defined on the current level.\n</p><p>\nIf the <code>always</code> parameter is specified (1.7.5),\nthe header field will be added regardless of the response code.\n</p>"},{"directive":"add_before_body","defaultValue":"—","syntax":"add_before_body uri;","context":"http, server, location","description":"<p>\nAdds the text returned as a result of processing a given subrequest\nbefore the response body.\nAn empty string (<code>\"\"</code>) as a parameter cancels addition\ninherited from the previous configuration level.\n</p>"},{"directive":"add_after_body","defaultValue":"—","syntax":"add_after_body uri;","context":"http, server, location","description":"<p>\nAdds the text returned as a result of processing a given subrequest\nafter the response body.\nAn empty string (<code>\"\"</code>) as a parameter cancels addition\ninherited from the previous configuration level.\n</p>"},{"directive":"access_log","defaultValue":"access_log off;","syntax":"access_log     path    format    [buffer=size]    [gzip[=level]]    [flush=time]    [if=condition];access_log off;","context":"stream, server","description":"<p>\nSets the path, <a href=\"#log_format\">format</a>,\nand configuration for a buffered log write.\nSeveral logs can be specified on the same level.\nLogging to <a href=\"../syslog.html\">syslog</a>\ncan be configured by specifying\nthe “<code>syslog:</code>” prefix in the first parameter.\nThe special value <code>off</code> cancels all\n<code>access_log</code> directives on the current level.\n</p><p>\nIf either the <code>buffer</code> or <code>gzip</code>\nparameter is used, writes to log will be buffered.\n</p> <blockquote class=\"note\">\nThe buffer size must not exceed the size of an atomic write to a disk file.\nFor FreeBSD this size is unlimited.\n</blockquote><p> \n</p><p>\nWhen buffering is enabled, the data will be written to the file:\n</p> <ul class=\"compact\">\n\n<li>\nif the next log line does not fit into the buffer;\n</li>\n\n<li>\nif the buffered data is older than specified by the <code>flush</code>\nparameter;\n</li>\n\n<li>\nwhen a worker process is <a href=\"../control.html\">re-opening</a> log\nfiles or is shutting down.\n</li>\n\n</ul><p> \n</p><p>\nIf the <code>gzip</code> parameter is used, then the buffered data will\nbe compressed before writing to the file.\nThe compression level can be set between 1 (fastest, less compression)\nand 9 (slowest, best compression).\nBy default, the buffer size is equal to 64K bytes, and the compression level\nis set to 1.\nSince the data is compressed in atomic blocks, the log file can be decompressed\nor read by “<code>zcat</code>” at any time.\n</p><p>\nExample:\n</p> <blockquote class=\"example\"><pre>\naccess_log /path/to/log.gz basic gzip flush=5m;\n</pre></blockquote><p> \n</p><p>\n</p> <blockquote class=\"note\">\nFor gzip compression to work, nginx must be built with the zlib library.\n</blockquote><p> \n</p><p>\nThe file path can contain variables,\nbut such logs have some constraints:\n</p> <ul class=\"compact\">\n\n<li>\nthe <a href=\"../ngx_core_module.html#user\">user</a>\nwhose credentials are used by worker processes should\nhave permissions to create files in a directory with\nsuch logs;\n</li>\n\n<li>\nbuffered writes do not work;\n</li>\n\n<li>\nthe file is opened and closed for each log write.\nHowever, since the descriptors of frequently used files can be stored\nin a <a href=\"#open_log_file_cache\">cache</a>, writing to the old file\ncan continue during the time specified by the <a href=\"#open_log_file_cache\">open_log_file_cache</a>\ndirective’s <code>valid</code> parameter\n</li>\n\n</ul><p> \n</p><p>\nThe <code>if</code> parameter enables conditional logging.\nA session will not be logged if the <code><i>condition</i></code> evaluates to “0”\nor an empty string.\n</p>"},{"directive":"access_log","defaultValue":"access_log logs/access.log combined;","syntax":"access_log     path    [format    [buffer=size]    [gzip[=level]]    [flush=time]    [if=condition]];access_log off;","context":"http, server, location, if in location, limit_except","description":"<p>\nSets the path, format, and configuration for a buffered log write.\nSeveral logs can be specified on the same level.\nLogging to <a href=\"../syslog.html\">syslog</a>\ncan be configured by specifying\nthe “<code>syslog:</code>” prefix in the first parameter.\nThe special value <code>off</code> cancels all\n<code>access_log</code> directives on the current level.\nIf the format is not specified then the predefined\n“<code>combined</code>” format is used.\n</p><p>\nIf either the <code>buffer</code> or <code>gzip</code>\n(1.3.10, 1.2.7)\nparameter is used, writes to log will be buffered.\n</p> <blockquote class=\"note\">\nThe buffer size must not exceed the size of an atomic write to a disk file.\nFor FreeBSD this size is unlimited.\n</blockquote><p> \n</p><p>\nWhen buffering is enabled, the data will be written to the file:\n</p> <ul class=\"compact\">\n\n<li>\nif the next log line does not fit into the buffer;\n</li>\n\n<li>\nif the buffered data is older than specified by the <code>flush</code>\nparameter (1.3.10, 1.2.7);\n</li>\n\n<li>\nwhen a worker process is <a href=\"../control.html\">re-opening</a> log\nfiles or is shutting down.\n</li>\n\n</ul><p> \n</p><p>\nIf the <code>gzip</code> parameter is used, then the buffered data will\nbe compressed before writing to the file.\nThe compression level can be set between 1 (fastest, less compression)\nand 9 (slowest, best compression).\nBy default, the buffer size is equal to 64K bytes, and the compression level\nis set to 1.\nSince the data is compressed in atomic blocks, the log file can be decompressed\nor read by “<code>zcat</code>” at any time.\n</p><p>\nExample:\n</p> <blockquote class=\"example\"><pre>\naccess_log /path/to/log.gz combined gzip flush=5m;\n</pre></blockquote><p> \n</p><p>\n</p> <blockquote class=\"note\">\nFor gzip compression to work, nginx must be built with the zlib library.\n</blockquote><p> \n</p><p>\nThe file path can contain variables (0.7.6+),\nbut such logs have some constraints:\n</p> <ul class=\"compact\">\n\n<li>\nthe <a href=\"../ngx_core_module.html#user\">user</a>\nwhose credentials are used by worker processes should\nhave permissions to create files in a directory with\nsuch logs;\n</li>\n\n<li>\nbuffered writes do not work;\n</li>\n\n<li>\nthe file is opened and closed for each log write.\nHowever, since the descriptors of frequently used files can be stored\nin a <a href=\"#open_log_file_cache\">cache</a>, writing to the old file\ncan continue during the time specified by the <a href=\"#open_log_file_cache\">open_log_file_cache</a>\ndirective’s <code>valid</code> parameter\n</li>\n\n<li>\nduring each log write the existence of the request’s\n<a href=\"ngx_http_core_module.html#root\">root directory</a>\nis checked, and if it does not exist the log is not\ncreated.\nIt is thus a good idea to specify both\n<a href=\"ngx_http_core_module.html#root\">root</a>\nand <code>access_log</code> on the same level:\n<blockquote class=\"example\"><pre>\nserver {\n    root       /spool/vhost/data/$host;\n    access_log /spool/vhost/logs/$host;\n    ...\n</pre></blockquote>\n</li>\n\n</ul><p> \n</p><p>\nThe <code>if</code> parameter (1.7.0) enables conditional logging.\nA request will not be logged if the <code><i>condition</i></code> evaluates to “0”\nor an empty string.\nIn the following example, the requests with response codes 2xx and 3xx\nwill not be logged:\n</p> <blockquote class=\"example\"><pre>\nmap $status $loggable {\n    ~^[23]  0;\n    default 1;\n}\n\naccess_log /path/to/access.log combined if=$loggable;\n</pre></blockquote><p> \n</p>"},{"directive":"accept_mutex_delay","defaultValue":"accept_mutex_delay 500ms;","syntax":"accept_mutex_delay time;","context":"events","description":"<p>\nIf <a href=\"#accept_mutex\">accept_mutex</a> is enabled, specifies the maximum time\nduring which a worker process will try to restart accepting new\nconnections if another worker process is currently accepting\nnew connections.\n</p>"},{"directive":"accept_mutex","defaultValue":"accept_mutex off;","syntax":"accept_mutex on | off;","context":"events","description":"<p>\nIf <code>accept_mutex</code> is enabled,\nworker processes will accept new connections by turn.\nOtherwise, all worker processes will be notified about new connections,\nand if volume of new connections is low, some of the worker processes\nmay just waste system resources.\n</p> <blockquote class=\"note\">\nThere is no need to enable <code>accept_mutex</code>\non systems that support the\n<a href=\"events.html#epoll\">EPOLLEXCLUSIVE</a> flag (1.11.3) or\nwhen using <a href=\"http/ngx_http_core_module.html#reuseport\">reuseport</a>.\n</blockquote><p> \n</p> <blockquote class=\"note\">\nPrior to version 1.11.3, the default value was <code>on</code>.\n</blockquote><p> \n</p>"},{"directive":"absolute_redirect","defaultValue":"absolute_redirect on;","syntax":"absolute_redirect on | off;","context":"http, server, location","description":"<p>This directive appeared in version 1.11.8.\n            </p></div><p>\nIf disabled, redirects issued by nginx will be relative.\n</p><p>\nSee also <a href=\"#server_name_in_redirect\">server_name_in_redirect</a>\nand <a href=\"#port_in_redirect\">port_in_redirect</a> directives.\n</p>"}]